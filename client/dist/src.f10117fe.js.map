{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","src/ui/section-title/section-title.ts","src/util.ts","src/ui/app-link/app-link.ts","src/error-page/error-page.ts","node_modules/localforage/dist/localforage.js","node_modules/uuid/lib/rng-browser.js","node_modules/uuid/lib/bytesToUuid.js","node_modules/uuid/v4.js","node_modules/uuid/lib/v35.js","node_modules/uuid/lib/sha1-browser.js","node_modules/uuid/v5.js","node_modules/uuidv4/build/lib/uuidv4.js","src/database.ts","src/character-sheet/character-sheet.ts","src/dm-handbook/dm-handbook.ts","src/user-profile/user-profile.ts","src/ui/character-preview/character-preview.ts","src/app-home/app-home.ts","src/ui/app-nav/app-nav.ts","../src/directives/cache.ts","src/ui/messages.ts","src/app-view.ts","src/index.ts"],"names":[],"mappings":"AuBAA,ADAA,AIAA,ADAA,ADAA,AGAA,ACAA;ALCA,ADAA,AIAA,ADAA,ADAA,AGAA,ACAA;APDA,AEEA,ADAA,AIAA,ADAA,ADAA,AGAA,ACAA,AWFA;AlBCA,AEEA,ADAA,AIAA,ADAA,ADAA,AGAA,ACAA;APDA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA;APDA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA;APDA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,ASNO,MAAM,iBAAiB,GAAG,0CAA1B;ADcP,ArBdA,ARmBA,APnBA,ACAA,ACAA,AIkBA,AGAA,ALAA,ACAA,AFlBA,AUAA,AQKA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AMPA,AICA,ARDA,ACAA,AXAA,ADAA,AgBAA,AFAA,AhBAA,AeAA,AdAM,SAAU,gBAAV,CAA2B,MAA3B,EAAwC;APkB9C,AHCA,AabA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,ACRA,AXCI,SAAO,IAAI,WAAJ,CAAgB,UAAhB,EAA4B;AkBevC,A7BhBA,ADmBA,AGAA,ALGA,ACFA,AgBbA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AMRA,AICA,ARDA,ACAA,AXCA,ADDA,AgBAA,AFAA,AfCQ,IAAA,OAAO,EAAE,IADsB;AJDvC,AHAA,AHAA,AaQA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,ACTA,AXEQ,IAAA,QAAQ,EAAE,IAFqB;AkBDvC,A9BoBA,AGCA,ALrBA,ACAA,AgBSA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AMTA,AICA,ARAA,ACDA,AECA,AfCQ,IAAA,MAAM,EAAE;AGMhB,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,ACVA,AXGU,MAAA;AZiBV,AGtBA,AYWA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AMTA,AIAA,ARCA,AZDgB;AGQhB,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AVbuC,GAA5B,CAAP;AZsBJ,AeVA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AMVA,AIAA,ApBGC;AGMD,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA;AbLO,ATaP,AeTA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AUXA,ArBHA,AeAA,IfAa,AeAA,EjBQA,SiBRW,CfAC,EeAzB,CfAA,KeAa,CfAA,QFQ2B,EiBRxC,CjBSK,CETL,OeAiC,EfAC,cFSL,MiBT7B,CAA2C,CjBSN,AETrC,CFSsC,AETM,SFSxC,IACC,aAAa,aAAa,CAAC,SAFzB;AMKP,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AXfA,AeEE,EfFF,WAAA,AeEa,GfFb,GeEE,GAAiB;AjBUnB,ATfA,AeiBA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AUVA,AlBJA,ADFA,AaGM,IZDO,ADFA,EJYP,KIZc,AaGP,EZDS,CDFtB,ECEA,IDFa,ECEA,CLUU,GAAG,AiBTV,CbHhB,ICEA,CLUgC,EAAhC,EIZ6B,ICEE,kBDF/B,CAAuC,GCEvC,CAAyC;ApBezC,AqBFA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,ARfA,ADFA,AFC4B,EGC5B,ADFA,InBiBM,GiBhBsB,IGC5B,ADFA,CFC4B,EjBgBZ,AoBfhB,ADFA,CFCoC,EjBgBjB,AiBhBS,IjBgBL,OAAJ,EAAnB;AeHM,AfUN,ACLA,ACsBA,ACxBA,AUNA,AQKA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AUXA,AHNA,AFGA,AhBF4B,IkBDf,AFGA,ElBUA,CiBXP,EfDsB,CkBDT,GAAnB,EpBaM,CAAgB,CEZM,EkBDf,CFGgB,AhBFU,EAAX,CgBE5B,EEHA,IFGa,KEHe,WFG5B,SAAsC,EEHtC,CAAsC,mBFGtC,CAAgD;AlBe9C,AMFF,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,ARhB4B,ADFA,AgBE1B,AFIA,AhBJ0B,AeGzB,EjBaD,AkBZA,ObJ0B,ADFA,AFEA,IFgB1B,AoBhBW,AFIX,AhBJ0B,CFgBd,AkBZA,CdNc,CCEA,AHAO,EEFE,AcMnC,AhBJ0B,CGAU,AeApC,CFImC,ClBYnC,AIlB0B,CgBET,CpBgBY,SAA7B,EAA8C,cKhBpB;ALiBxB,ADiBJ,APjBA,AcFA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AUZA,ARHA,ACJA,AXoDC,ADnD2B,AgBEtB,AFIF,AhBJuC,IaC9B,EhBgCP,AiBpCA,EhBmBE,CIlBoB,AFEe,EkBA9B,ChBFe,CFEe,EEFC,CFEM,CFgBjC,CefU,AXHC,GWG5B,CfesB,AgBnBA,CdGqB,EHiClB,AiBpCA,CIGT,CLCH,ChBiCT,CAAC,OAAD,EAAkB,CClBlB,EAAqC,AefzC,ACJ6B,EjBqCzB,KAAqD,EgBjCrB,sBAApC,CAA8C;AMc9C,ArBEM,ADkBA,AbjBC,AUXP,AH6BA,AarBA,AEEA,ADAA,AIAA,ADAA,ADAA,AIAA,AEhBA,ADuCM,AVvBL,AcZG,AhB0FH,Ae3FC,ElB+BI,AgBlCN,AEGE,IIWI,AnCGO,A4BsBA,EfLD,AkB/BJ,ClB+BK,AmB9BJ,EDDD,CjBaI,CehBZ,GfgBgB,AehBhB,E7BiByB,EmCHL,CrBER,AdCgB,CcAlB,AkBbN,CGWA,AtBmBE,CAAsB,AeKtB,CAAyB,AInCN,EGWjB,AnCE0B,CAAC,CgCb/B,CnB8BE,CAA6B,GsBnB/B,EADJ,EtBoBM,EAAsC,EbjBhB,GaiBtB,EADmD,AbhBH,CakBhD,QblBsB,IACvB,MAAM,CAAC,cAAP,CAA4C,OcFrC,CAAN,iBdED,KACG,SAFD;AmCAP,ArBCK,ADkBC,AbfN,ACmBO,AUtBP,ARZA,ACAA,AFUO,AkBDP,ACEA,AIAA,ADAA,ADAA,AIAA,AUbA,AT0CE,AT9CA,AaKC,ADDC,EH0CF,I3BNW,ACxBA,K6BZF,C7BYQ,C0B8BjB,AT9CW,ClBwCQ,A2BMN,C1B9BO,EDwBE,C2BMtB,C3BNK,AkBxCL,CS8C0C,ET9CzB,EjBgBY,G6BZhB,G7BYsB,CAAC,IAAI,CAAC,MAAL,EAAD,CAAN,CAAsB,KAAtB,CAA4B,CAA5B,CAA8B,IAAtD;AWqBD,APnBA,ALwBN,ACxBA,AkBFA,ACEA,AIAA,ADAA,ADAA,AIAA,AEfc,ADqCZ,ATvCI,ADHJ,AFGA,MViBW,GuBfC,ADqCZ,EAAA,ATvCW,EDHA,AFGA,CaEC,ADqCC,GCrCc,ADqC3B,EV1CA,AFGA,GEHiB,AFGA,IaEL,AVFE,IbiBV,CAA+B;AQCjC,ADmBE,APnBJ,AIPF,AFNA,AGaA,ASFA,ACEA,AIAA,ADAA,ADAA,AIAA,AMnBA,AIKA,ARoCC,ADAC,AV1CE,AcQF,AhBLI,IiBFO,CFIT,CrBQE,GIOG,AcsBP,EKzCkB,AjBEP,EYuCX,AIlCW,CCPb,EnBmBI,AcsBa,EAAf,CdtBiB,AkBZjB,CCPW,EvBYS,AsBLH,GtBKM,CIOrB,AEjBY,CiBFhB,SAA6B,sBAA7B,CAAuC;AnBoBpC,ADmBG,AH3BuB,AH2BvB,AHzBN,AgBIA,ACEA,AIAA,ADAA,ADAA,AIAA,AMpBA,AL0CE,AV1CE,AcQE,ADDH,EEPH,CnBSsB,CAapB,EVRI,GGyBU,AqBGd,EV1CS,AcQE,ECRb,AL0CE,GK1CF,AL0CiB,EAAf,CxB5BiB,GAAG,EGyBhB,CAA0B,CHzBN,AcdZ,AcQE,KzB+BV,EAAgD,SHzBtB,GAAhC;AUSE,ADiBI,AH5BN,ACSA,AJmBE,AJxBF,ACAA,AQJA,AQOA,ACEA,AIAA,ADAA,ADAA,AIAA,AEbE,ADmCA,CE/CF,KvB4CM,AK5BA,CAAC,EgB+BL,ICnCW,CDmCX,GAAgB,ErBHC,AsBhCjB,ADmCA,GrBHoB,AsBhCH,UjBInB,GACI,CL2BgC,AK3BR,CL2BS,GAAf,AK3BlB,CL2BqC,CK3BJ,IAAjC,CL2B2C,CAAC,GK3BU,CL2BpC,CAApB,EK5BF;AFEA,AFCO,AYKP,ACEA,AIAA,ADAA,AGAA,AMpBc,AJOR,ADmCJ,AEzCF,ACR2C,CAA3C,KvBoBa,AsBZP,GGDQ,AL0CZ,EpB7BgB,AqBNL,GrBMQ,AoB6BnB,GAAgB,AEzCD,CtBYQ,AoB6BvB,EEzCkB,GGDN,EzBaO,CyBboC,AJOzC,CrBMT,GyBbO,AHCd;AjBsCM,AZIC,AO5BP,AGKA,AJmBE,AKkFK,AQtGP,ACEA,AIAA,ADAA,ASpBc,AHGd,IAAa,E7BuCA,AMJP,AKkFO,GClFA,AoBtCC,IhC0CM,CYJd,AoBtCQ,AHGS,E7BuCA,CgC1CO,AHG9B,C7BuCO,CMJY,GKkFU,AqBxHf,CHGD,CvBmCW,CKkFmC,QLlFzD,AuBnCF,EvBmCmC,OuBnCH,sBAAhC,CAA0C;AhBkBxC,ADkBG,ANAD,ALpBG,AUuGL,AQvGF,ACEA,AIAA,ADAA,ASnBU,AL0CN,AEzCJ,ACXa,ClBqCb,CD6FE,AkBvHF,EvBoCI,CW1CA,CJwBE,AZFO,C2BbP,CDsCE,CK1CE,AL0CD,IhB8EI,AgB9EA,AEzCb,ClBuHc,AgB9EA,EdvBZ,AZFqB,A0ByBnB,AEzCJ,CvBoCiB,A0BrCP,CL0CQ,CdvBF,AZFU,AUuGb,CLnFO,A0BrCC,CrBwHS,CmBlIjB,GnBkIA,CVvGoB,CUuGW,KVvGL,C6B3Bf,GAAA,C7B2BjB,S6B3BiB,CAAA,CEUd,AFXT,+BAAc,cAAd,CACuB,CAAA,EAAX,WAAW,CAAX;AjB8BT,AdCG,AKpBP,AMiBA,AJoBM,AJvBA,AS0GF,AQvGJ,ACEA,AIAA,ADAA,AS+EC,AJ5FE,ADoCG,AV3CH,MlBqBU,AOiBP,AJvBO,EWKL,IFqGI,AgB9EA,CdvBC,GFqGT,CgB9Ea,CrBLC,AqBKA,C5BtBQ,COiBN,EPhBhB,AGPE,CHOD,AGPwB,CWKrB,APkBgB,KOlBK,EPkBT,CPhBhB,COegB,CPdf,IcHD,CdEA,CcFoC,CdInC,GAAA,GAAiB,C4BmBL,CAAX,E5BrBF,EAGC,MAAA,GAAoB,IAHrB,KAGmC;AcJjC,ADkBN,AbbM,AOaA,AJlBJ,ACNI,AFIC,AUuGD,AQvGN,ACEA,AIAA,ADAA,AIuBK,AExCS,E3BiBZ,IUkBI,ANAA,AHxBO,AFIA,GFOA,A8BtBC,ElBsHH,ETrGT,CHKgB,AGJZ,CIiBS,EAAE,ALpBO,CUuGlB,CZhGiB,A8BtBT,C1BWR,AFIqB,CKoBN,AHxBM,CJWrB,AGLJ,A2BjByB,E9BsBC,AOaX,AJjBS,ADHK,GWoBJ,GACvB,AXrBuB,CWqBtB,AXrBiC,ECEpC,CDFuC,CCInC,GUiBF,AiBpCU,EjBoCQ,AXrByB,ECE7C,EAE0B,ADJuB,MWqB/C,IXrByD,CWqBR,CXrB1B,CAApB;AYGD,ADmBA,AbdE,AWPR,AJiBoB,AJrBD,ACKjB,AFAF,AUsGQ,AQvGR,AKEA,ADAA,ASpBE,AJOA,ACHQ,AZJA,EdmBR,AyBZA,AXPQ,GXmCN,GMIQ,CVzBO,A2BVT,C9BqBI,AkBzBI,ClByBH,EINb,A6BnBW,AfAK,ClByBA,AILZ,CQqGS,CT3GI,C2BVT,E9BqBc,AGX4B,A8BdlD,AJOiB,C7BkBM,AYgGL,AkBrHC,C3BUF,ACKjB,C6BnBiB,AJOA,CzBakB,AQqGd,CkBrHE,ClBqHL,GAAQ,CRtG1B,EJMM,AIJF,CQoGE,GRtGN,EAEkB,K0BjBC,EAAX,E1BeR,EAE8C;AUA1C,ADkBO,APlBX,ANKM,AKbD,AE0BH,AJjBA,ACAA,AgBHJ,AKEA,ADAA,ASpBM,AJOF,ADmCA,AEoGH,AZ9IG,EZoBF,EOkBW,AbbL,AOaJ,EF1BS,EQ0BD,CVjBH,ACAA,AwBqBA,AV1CA,CJoBC,AebA,CIPG,AL0CT,E5BjBa,CAAC,A4BiBJ,ExBrBV,CCToB,AFSpB,CIiBc,AqBIA,CrBJC,AHjBA,AwBqBA,CvB9BS,AFSR,CyBqBhB,CrBJA,AWtCA,CXsCmB,AWtCA,EbYI,CLanB,AIJJ,A6BrBY,CjCyBe,A6BlB3B,CvBawB,AHCxB,CGAE,ADT4D,AE0BrC,CAAC,EPbtB,EAA+B,AOanC,EDlBwB,ACkBQ,COlB9B,CRCkB,CQDe,CdK/B,EMLoB,EACU,KCiBlC,EDlBwB,AYpBY,EZsBlC,GYtBuC,IZoBjB,EAEA,AYtBL,CAAnB;AJqBI,ADiBW,APff,ANGI,AKbN,AMMF,AJoBG,AJjBC,ACAA,AQmGE,AQtGN,AKEA,ADAA,AKbI,ADmCA,AV1CD,ILqCgB,AbZX,KAAK,AKZP,AFQG,ACAA,AwBqBA,CtBpBC,CMkGC,CZ/FK,CcLH,AdKL,A4BiBJ,CvB7BO,CDQP,AiCtCJ,C/BuCgB,AsBoBA,ChB8EV,CTnGF,ACAc,CECC,ADTH,CuB6BI,CzBrBC,AyBqBA,EtBpBE,ADTjB,CSOE,AREgB,AFDpB,CECmB,AsBoBnB,CtBpBA,CQFuB,ATNrB,EAAE,CFOJ,CWD2B,Eebb,GxBOH,KAAP,GSMmB,EAAnB,ATNiB,IwBPrB,CAAgC,GxBO5B,EwBPiC,ExBOJ,AwBPjC,EAAyC,IAAzC,CxBOwC,AwBPM,KxBOb,AwBPkB,IAAG,CxBOJ,UAAhD,CAFJ;AQyBU,AbXL,AKXN,AFOG,ACAA,AQmGE,AQtGN,AKEA,ADAA,AKbM,ADmCF,AEvCF,AfRF,CVeO,KQ0BwB,GVftB,ACAA,AwBqBA,CCnCC,CjBiHC,AiBjHA,EzBcP,AwBqBA,AEvCS,GjBiCP,AVfF,ACAY,AQmGV,AiBjHA,ADmCU,ECnCE,C1BcC,A2BlBjB,C1BkBE,AwBqBgB,CAAC,CEvCF,GFuCf,CzBrBA;AWDI,ADiBF,APfF,ANIC,AW5CL,AJyDE,AJjBC,ACAC,AQmGI,AQtGR,AKEA,ADAA,AahBA,ARGQ,ADmCJ,AEvCA,AZHF,ClBeK,CkBfL,EmBIW,E9BkCP,EDjBE,AYrBA,CLoCK,ATfJ,AwBqBA,EStCW,APDT,AZHH,EJmBK,AeZA,CvBcC,ACiBA,A8BlCM,ATsChB,GrBJa,AqBIA,CxBrBb,AyBdI,CvBcW,EFAE,AyBdA,ADmCA,CtBrBjB,AsBqBkB,CStCF,CvBeZ,AREgB,CQFC,CuBfzB,APDc,CFuCV,CCnCI,EtB+BsB,AHjB1B,CGiB2B,C8BlClB,IvBeL,CAA6B,EuBfrC,GvBe0C,CPmBzB,CAA2B,GAA3B,CAA+B,A8BlCnB,CvBerB,KPmB8C,CAAC,OAAtC,CAAf,O8BlCF,CAAuC;AFgBhC,ArBAA,ADiBC,APfF,ANKN,AILG,AFJI,AUuGC,AQtGR,AKEA,ADAA,AajBA,ARIQ,ADmCJ,AbhDJ,AGMI,EmBGJ,ExBiCQ,EsBjBK,AjCFA,CYDP,CDmBO,CeOJ,EOvBS,AjBnBP,CZqBC,CQFC,AuBhBb,CFgBqB,APuBjB,ESvCJ,AnBHgB,CU0CC,EV1CN,EZqBU,AsBqBA,CAAC,EtBrBE,AYrBA,EhBiBS,C0ByB7B,AV1CO,CZqBiB,CJJQ,CgBhB1B,MhBgBH,EiCEyB,KAAD,GjBlBjB,CiBkBsC,IAAD,C7BE3B,CAAsB,E6BFoB,IjBlBvC,CZoBH,EAA+B,EYpBvB,EZoB2B,CAAC,KAAL,AYpBf,CZoB0B,CAAX,CAA/B,EAA8C,OAA9C,CAAlB,OYrBK,GAED,gBAAI,eAAe,KAAK,QAAQ,sBAFtC;AiBoBF,ArBAM,ADiBA,APfF,ACgBJ,AJhBA,ACCA,AFJF,AUsGQ,AQtGR,AKEA,ADAA,AKbO,ADmCJ,AVxCA,EfmBD,EUeM,EsBjBF,A5BkBA,E4BlBE,AhCEA,CAAC,GgCFG,AtBeC,CCfA,AREA,CCgBC,CJhBN,ASmGO,ETnGwB,EIgBpB,CKmFC,ENnGE,CAAC,C6BFC,ArBAhB,AFqGgB,GErGG,CRErB,ACgBJ,AKmFa,ELnFe,COlBtB,AFqGuB,KAAhB,GAAwB,EuBrGjC,CAAJ,CvBqGyC,CuBrGR,AvBqGS,SAAL,CAAe,KAAf,CAA/B;AuBpGJ,ArBAG,AREF,ADVE,AE0BH,AJhBA,AS2FA,AQ9FJ,AKEA,ADAA,AalBE,AtBRF,MViBa,EFUL,CAAC,CgCFC,C5BkBC,CJhBC,CAAR,CgCFU,E9BRS,G8BQb,A9BRiB,AE0BvB,C4BlBgB,I9BRM,IAA+C,iC8BQ/D,CAAN;AACD,ArBAE,ADgBG,ARxBN,AE0BC,AanBH,AKEA,ADAA,AKdM,ADoCJ,AV9DqC,CAAvC,CU8DE,CrBlBoD,CAepD,KF5BO,EwBLE,GxBKG,CAAC,AwBLT,ADoCS,GCpCG,ADoCH,IvB/BN,CAAc,AwBLjB,KxBKG,KACH;AQwBE,APfJ,ADRE,AE2BJ,AJnBE,ASmGA,AQrGJ,AKEA,ADAA,AKdM,ADoCF,AbhDJ,GVkBO,CQuBC,CRvBC,GCQD,CHAC,CERK,CO2GH,AiBjHA,ADoCA,CfPK,CAAC,CPfH,ADRK,CFQJ,CSmGX,AiBjHE,EhB6BU,CPfG,ADRa,AFQ5B,A0Bde,ChB6B6B,ARvBf,AuB8Bb,EtBtBhB,CHAmB,CGAC,CsBsBC,CvB9Bc,AwBNjC,CxBMkC,CFQZ,EyBsBE,IAAI,CvB9BF,AFQ5B,CERG,CAFL,AFUmC,EyBsBE,IAAI,IAAI,KAAK,KAAK,EAArD;AOtBF,ArBDE,ADiBM,APfJ,ADRL,AFQK,ASmGH,AQrGH,AKEA,ADAA,AKdK,ADoCF,AbjDH,CVeO,EOkGoD,EiB3GvD,CMoBE,AtBgBI,IVfA,CWFC,CDiBK,CAAC,APfJ,CAAC,AHAA,EWFE,EREE,C6BDC,AhCCA,GgCDG,KrBDlB,ADiBM,CAAsB,AVf1B,EAAwB,IUepB,APfI,COeyB,APfX,C6BDQ,CAAC,GAAf,CAAmB,CtBgB/B,APfI,EOekC,APfX,C6BDf,CAApB,E7BCuC,COe/B,APfgC,KAAL,CAAW,CAAX,CAAvB,EAAsC,OAAO,CAAC,YAA9C,CAAD,CAAP;AQDH,ADiBM,APfJ,ADPL,AFOQ,ACAN,AgBFF,AKEA,ADAA,AKdG,AddH,AGd4B,Ed0C1B,MDAM,CCAC,Cc1CmB,CAAA,Cf0ChB,ACAH,Ac1CN,Cf0CU,QAAL,CAAc,MAAM,CAAC,CAAD,CAApB,Oe1CI;AiB0CV,AzBRI,AH0BJ,AJjBK,ACAH,AFLE,AUwGJ,AQrGF,AKEA,ADAA,AanBsB,ATyCpB,AbnDF,AGda,EN8IX,AgB7EA,AVjEW,IiB0CP,AjCJO,AgBtCI,EX4DT,AW5DW,CRkCH,A2BVM,ATyCb,CxBtBC,CGiBC,AHjBA,CwBsBF,ErBLK,AHjBA,AFLR,AmCdgB,CnCcD,AUwGN,CAAC,CyBtHc,EFkBX,A/BCA,CGiBC,CAAC,AKkFN,EAAqB,CuBpGZ,AElBF,EjCmBR,CAAa,AQmGZ,CLlFD,CAAe,AKkFqB,GF5G5C,CyBQJ,AzBPE,AHyBU,AHjBA,CGiBoB,C4BlBC,C/BCC,CAAhC,IMTE,EACkB,OHyBV,CAAZ,CAjBoD,CAmBpD,GG5BI,EAC0C;AyBQ5C,ArBDF,ADSW,APRT,ANGG,AUVL,ANQE,AFFF,AUqGE,AQrGJ,AKEA,ADAA,AanBE,ARIA,ADqCE,AbpDJ,AGdY,CAAT,CJ0CD,AZAA,A2BbA,AX7B0B,CLmDtB,AKnDsB,CiB2CxB,EnCGS,CgClCP,C1B+BE,AIPA,ANQA,AyBfA,EfaE,CebF,ADqCG,CxBtBC,AQmGA,CErGF,AZAR,CICY,AJDA,CEEC,CQmGX,CuBpGa,AnCGO,AIFpB,EEDe,C6BAC,AnCIhB,AELF,CFKG,A4BmBY,CtBvBb,AJDkC,AgB1CV,EiB2CJ,A7BAA,EsBuBF,G1BxBpB,CFKE,CmCJgB,AjCD8C,A0BwBvD,C5BnBW,A4BmBlB,AVlEwB,CiB2CxB,InCIA,EAAoC,CkB/CZ,CAAA,ClB+CY,GAAiB,IAArD,KAAmE;AmCHnE,ArBDA,ADgBC,APfC,ANIA,AUZG,AFAF,AD2BL,AJnBI,ACCF,AFNO,AUyGL,AQrGN,AKEA,ADAA,AKfI,ADqCD,AbrDH,AiBmBG,CnBeH,CNeE,E4BnBE,AzBRK,EFAI,ALQP,CAAC,CCCC,AyBfA,C7BkBK,AETF,CKwBD,COpBC,AJPK,AE4GL,CJ5GQ,CFQN,AIRK,AH2BL,AsBjCA,CvBcC,ANII,AETP,CMFP,CMMY,ANNX,CNE8B,CiCKjB,A7BAA,AMoGZ,AiBlHE,CMcW,AnCII,AETZ,GiCKP,AnCIE,AQXF,C2BOmB,ArBDnB,AebmB,C7BkBK,AQVvB,AJOmB,EGkBE,C4BnBtB,A5BmBuB,AHlBA,E+BDE,G/BCzB,AyBfA,CrBOA,CqBP8B,CrBS7B,CDwBQ,CAAwB,GAAxB,CAA4B,C4BnBrC,A3BPA,ED0BS,CDnBC,ACmBZ,CDnBqC,CELE,MFK3B,EAAkC,IAAI,CAAC,KAAL,CAAW,CAAX,CAAlC,EAAiD,OAAjD,CAAD,CAAP;A6BCH,ArBDA,ADiBH,APhBK,ANIG,AUbW,AFIb,ALKD,ADFD,AUsGI,AQrGR,AKEA,ADAA,AKfM,AdjBN,AGb4B,MRmCT,AFIT,GNGD,CFMK,AQTA,AUvCc,ClBgDb,AkBhDa,CAAzB,CVuCc,AqBTJ,C7BkBK,CYgGH,CVtGX,EMHkB,CRSE,AQTD,ANGJ,CFMM,AYgGL,EJzGH,CAAU,EIyGF,CVtGrB,GUsGI,AiBlHS,E7BkBT,CQTS,CAAX,KUvCM,aW8BN;A7BmBE,AUdU,AH4BhB,AHjBE,AFFA,AkBAJ,AKEA,ADAA,AKfK,ADW0B,Ab7B/B,AGba,AckCX,EdlCW,AckCX,EhCeM,CUdA,AmBNJ,CtBkCE,AW/DW,EAAE,AckCX,C5BYC,CFFC,C2BbC,AGGH,EhCeS,AIHJ,CJGK,AOcJ,AHjBA,CyBfC,EzBeE,CAAb,CGiBe,CHjBC,AyBfA,CzBeC,EFFE,CEEC,CJGhB,AIHJ,AyBfW,C7BkBe,AELI,CEEP,CGiBzB,AHjB0B,AFFxB,EKmB0B,AHjB1B,AyBf0B,C7BkBtB,CIHwB,KyBfrB,EAA4B;AMerC,ArBlCoB,ARiClB,ANKI,AUfqB,AFKvB,ADwBF,AJnBA,ACEE,AFFF,AUoGE,AQpGN,AKEA,ADAA,AKfM,AdnBN,AGbY,AcmCR,CdnCD,CAAyB,CAAA,ClBkDpB,AUfqB,EFKnB,E2BMF,CnCIK,AGLJ,CGAC,AELI,ANKJ,CUoGC,AoB9GA,ChCeK,AIHJ,CJGJ,AIHK,AyBfA,ErBQM,ALKJ,ADAA,CEEC,CQkGV,CVpGoB,CIAP,AHAf,CDAA,CiCCiB,A/BCA,AFN6C,CII5C,AJClB,AgB9CwB,Cf6CL,CgCCC,A3BNlB,EFKoB,AELI,CwBLf,CGWa,AhCDA,ACEZ,C+BDa,A/BCA,AyBfZ,AXhCW,Cd+CZ,CAAV,CAD0B,CAE1B,C+BFJ,CAZgE,AhCW9D,CgCGF,ChCHmC,Ae7CT,CAAA,aZ6CN,CAAuB,OAAvB,EAAgC,IAAhC,EAAsC,OAAtC,CAAlB,iCuBbE;AMiBJ,ArBHF,ARAI,ANKG,AUhBC,AFMA,AGhCR,AJwDI,AJnBE,ACGA,AQiGE,AQpGR,AKEA,ADAA,AapBsB,ARKjB,AdpBL,IRoDI,CsBrCI,CnBO8B,AmBDlC,GQNkB,ClCkBZ,CGAC,CCmBC,EG9BV,APWY,CImBC,AKiFA,GyBtHO,C9BqCH,AJnBA,CGAC,AMoGA,CNpGC,A+BlB+B,IzBsH3B,AoB9GA,C1BUrB,AELgB,ELKd,CSoGS,CTpGe,ESoGE,GJzGxB,CIyGO,CJzGgB,ADwBhB,A8BrCO,C9BqCM,CKiFW,AoB9GA,KzB6BxB,AyB7B6B,CpB8GC,CJzGL,ADwBJ,AKiFU,CJzGL,IIyGI,CLjFH,AKiFlC,CLjFmC,ICxBnC,AwBL+B,CAAmB,EAAE,EAAE,SzB6B1B,EAArB,CAAX,CAF0B,CAG1B;ADnBD,ANKE,AUhBH,AFMM,ALKA,ACGF,AFHF,AkBAJ,AKEA,ADAA,AanBE,ATuCF,AVvEa,ClB+CN,GQHC,AoB2BI,IlBjCJ,APWA,CKLK,CAAC,ANKJ,ECAE,CKLJ,ALKK,COXC,AFMI,ENKF,CQVV,AkBgCN,CVvEa,CfiDL,ADAW,IMLX,EELM,AFKe,AU5CT,CRuCL,CRUY,CAAC,AgBjDR,CV4Ca,GAAG,IAAI,EU5CpB,CAAA,CADnB,ERwCK,CAA0B,CRUb,CACX,KQXF,CFK8B,CELK,AFKO,ANMjC,CAAC,KMNgC,CAAA,CNK7B,EAEX,GMPwC,CAAA,EEL1C,EAAqD,CQxC5C,GRwCT,EAA2D,KAA3D,AQxCL,CRuCC,AQtCkB,CAAA,EAAP,OAAO,CAAP;AiBoDX,A7BFA,AIVA,ALCI,AGIyB,ADwB3B,AJnBG,ACGD,AFFM,AUkGN,AQnGN,AKEA,ADAA,ATpCA,IRqDI,E4BjBE,AzBZA,ALCO,AGIkB,KIwGpB,IF7GI,EH6BE,AKgFX,CF7GY,AH6BA,C4BjBC,E3BP2B,EAAf,CHJzB,CAAyB,EE4B3B,CAAwB,G4BjBG,A5BiB3B,CAA4B,GAA5B,EAAiC,QAAjC,GG7B4C,CAAC,KAAD,CAA9C,UyBYA,EAA+C;AAC7C,AzBZF,ALOA,AGJ8C,AD0B7C,AJnBE,ACGC,AFLa,AUqGb,AQnGN,AKEA,ADAA,AKfI,ExBUF,CEJoD,CA4BpD,CC5B8C,CEH1C,ARWE,CMN0B,C2BO1B,EzBZE,ARQS,CUqGR,AiBhHA,C3BeH,CiCAK,AzBZA,ALOX,CAAY,AGJkC,CAAZ,CAA5B,AI0GF,CVrGa,CQRD,ARQd,CQRe,ARE+C,CAW9D,A8BbgB,C3BOlB,EAA8B,E8BKP,AHZA,E3BOvB,AwBVa,CnBGG,CAAhB,ALO4C,OAA5C,EAA0E,A2BPxD,CAAmB,IAAI,KGYnC,IACA,aAAa,CAAC,QAAd,KAA2B,IAAI,CAAC,OAAL,CAAa,eAAb,CAA6B,KAA7B,CAD/B,EACoE;AAClE,AtBYC,AHzBL,ALIA,AGEM,ALIL,ACGG,AFAF,AUgGI,AQnGR,AKEA,ADAA,AIiBA,AbvDA,CauDA,GpBvBQ,EKmBK,AHzBP,EFMM,CHFV,AGEW,EoBuBD,GvBzBV,CKJa,AE6GA,EPzGL,CKJQ,CGyBQ,AHzBP,AFMX,AIuGW,CF7GjB,AFMsB,AIuGJ,CPzGlB,CQqB4B,CmBzBP,CJ6BvB,ChBgFe,CAAW,AgBhFD,EI7BG,CnByBC,ALnBrB,EIuGO,CAAP,CCnFH,QmB1BkB,CAAmB,QnB0BtC,IACK,CmB3Bc,EAAkC,InB2BzC,iBAAP,KAA6B,UAA9B,GACJ,mBAAmB,CAAC,OAAD,EAAU,iBAAV,CADf,GAEJ,qBAAqB,CAAC,OAAD,EAAU,iBAAV,CAJlB;AsBXD,AzBbJ,ALME,AGAG,AJOD,AFAF,AUwFA,AQ3FJ,AKEA,AYpBsB,ATqCpB,AbxDF,EawDE,IOhBI,AzBbA,GLMG,AgCda,CFqBZ,CAAC,GErBW,CTqCpB,CvBvBE,AuBuBF,ClB7Be,A2BRqB,CRKpB,CMgBZ,A9BPa,A2BNA,CGaC,AzBbA,CAAlB,C2BRoB,CRKC,CGGC,CGalB,C9BPF,CwBTc,CAAU,CDgC1B,CAAA,EChC8B,KGGb,CAAmB,CJ6BpC,CAAA,GAAA,CAAA,CAAA,AI7BiB,EAA4B,CJ6B7C,SAAA;AOfI,AzBbJ,ALME,AEuBF,AJnBA,ACGI,AgBHN,AKEA,AYnBE,AToCA,AbzDF,ERyDE,AJnBA,AyBmBA,MlB7BM,APUA,CEJC,EFID,EEJJ,EEuBW,AqBAb,CvBvBc,AEuBA,AqBAd,IvBvBE,CwBTiB,KAAK,EtBgCxB,CAA2B,AqBA3B,CChCmB,ADgCnB,ClB7B6B,AmBHA,CtBgC7B,CAA+B,CG7BC,EAAhC,CkB6BA,CAAA,CrBAqC,CAAC,CqBAtC,CAAA,CAAA,CChCmB,EAAyB,ADgC5C,CrBAA,EAA+C,IqBA/C,IrBAA;A4BfG,AzBbH,ALME,AGDE,ADwBJ,AJnBE,ACGE,AFDF,AUgGA,AQlGJ,AKEA,AGiBC,Ab1DD,CauDA,CpBrBM,CoBqBM,EOlBR,CzBRE,AFKI,CAAC,CNOH,CGNC,AEuBA,E4BhBE,AvB+FA,IJvGL,CHCF,AGDgB,AIuGhB,AgBlFqB,CrBGvB,AsBhCe,ExBSE,EHME,CMPf,AqBRgB,E3BeE,CQZC,ARYrB,CGNA,AwBTa,CAAU,CnBGY,IAArC,EmBHe,EAAmB,SD6BxB,aAAa,GAAA,EAAA,CAAzB;AOZM,AtBcN,APnBE,ADFE,AGDE,AGhCN,AJwDC,AJnBG,ACGE,AFDF,AUgGD,AQlGH,AKEA,AV1CA,ETsCE,AEHI,IKsBA,ALtBI,CAAC,AW7CL,CjBoDE,CGNC,IGDH,ANOO,CGNT,EHMY,CGNC,AHMA,CAAb,CGNA,GQqBkB,APnBA,CAAC,EOoBnB,CAAC,IPpBiB,EAAuB,COoBzC,EAA+B,OAA/B,KAAwD;AsBdtD,AtBeA,APpBF,APSG,AWlBL,AFMG,ALKD,ACGE,AFDF,AkBFJ,AKEA,AGmBM,ATpCH,AJ1BH,CPqBO,IqBCH,C9B0BS,A6BcA,E1BnBL,CQbC,CyBcC,C7BLC,GsBuBL,CtBvBS,APSO,AWlBP,AkBgCM,ClBhCL,CRaC,CHKqC,CAA7B,CGLL,CAAhB,EHMC,CoCLmB,ApCKlB,AWnBG,EAAP,CyBcyB,ApCKlB,CWnBmB,EJSjB,CAAa,APUnB,KAAuB,EOVjB,CAAP,C6BKoC,CAAC,GAAd,CAAkB,aAAa,CAAC,QAAhC,CAArB;AtBgBA,APpBH,APUG,AWnBF,ALMA,AEuCG,AJlCH,ACGE,AFDF,AUoEuD,AQtE3D,AKEA,AYpBU,ARKP,ADkDD,Ab/EF,CHgHO,CgBjCL,ElBhDE,EH6CS,ER1BD,CAAC,AMbJ,AgCbC,CnCoBA,EHMM,CAAC,AWnBJ,ALMA,AuB0CX,C7B7BgB,AMbJ,EuB0CZ,C7B7BmB,AMbJ,AgCbP,ChCaN,EAAgB,AEuCO,A8BpDG,CtC0Bb,AMbI,CNaf,CQ0BwB,CFvCN,GEuCU,GAAJ,CFvCC,CAAC,AEuCzB,MFvCiB,GAAiB,CAArC,EAAwC,CAAC,EAAzC,CgCbM,ChCauC;A8BQ3C,ArBNC,ADsBD,AdVA,AWnBF,ALMG,AFKH,ACGE,AFFK,AUsGX,AQvGA,AKEA,AYgGC,ATzEC,ATzCA,AJ3BF,EhBmDM,AoBxBJ,GaNE,ClBkBS,AZKF,EiBjBH,EgBkBE,AzBbA,CLME,AcXJ,CpBwBQ,CAAC,AGPP,CQZI,CIOQ,CfYhB,AMbC,CNac,AWnBJ,ALMqB,CSCZ,AfYpB,AMbC,ENaiB,EMbmB,CSClB,AJPF,CyBaC,ApCMlB,AWnBkB,GIOoB,ATDI,E8BOnB,MzBbzB,CAFwB,CAGxB,CyBYE,A9BPqC,E8BOH,A9BPjC;A8BQC,ArBNN,ADsBI,APvD+B,AP6C/B,AMbD,AMrBL,AR0BI,ACGE,AFHc,AkBApB,AKEA,AYnBE,ARtC4C,AVuC1C,AJ5BJ,AiBkCG,CH7CH,KhByEU,AXlBU,EiCEZ,CrBNC,AfYI,CAAP,CoBxBK,CjBgBe,CYJb,ADsBI,CAAC,AXlBU,IWkBlB,IsBhBY,ArBNb,CAAc,ADsBI,EsBhBF,EhBlBV,ELYc,CAAC,CDsBpB,ICtBmB,ADsBU,CCtB9B,EAA6B,IDsBQ,CAAC,UAArC,ECtBD,CAAP,CDuBQ,EAAE,WAAW,OAAO,CAAC,UAArB,CADJ,EACsC;AsBhBlC,ArBNT,ADuBO,AdXH,AWnBD,ALMD,AMrBH,AR0BI,ACGE,AFJuB,AkBC7B,AKEA,AV/CA,CDuCO,AfSA,KY7BD,EDeE,ARUqB,EiCGnB,CtBiBF,CH9BI,CAAC,IG8BL,CsBjBU,AtBiBV,EsBjBY,ItBiBZ,CAAA,AF7CiB,EE6CjB,CH9BA,ACfoB,CE8Cf,AF9CgB,IwB2BJ,AzBZQ,ACfL,EAAe,CE6CnC,EACY,MF9CQ,KACxB,GDcA,ACdG,EDc+C,ECd3C,KAAK,SAAS,EADzB;AwB6BU,AtBkBA,AH/BJ,ALOJ,AFIE,ACGE,AFLsB,AkBE5B,AKEA,AGuBE,AInF8C,CAAhD,KnB8EU,AH/BJ,CwB/CA,ENmFJ,COvBQ,ItBkBQ,AeKhB,ATzCY,CgBkBC,AtBkBI,EsBlBF,APuBO,ETzCL,CNoCD,EAA8B,GsBlBvB,AzBbA,CyBaC,AhBlBA,ETKE,EkBoCS,CAAC,ClBpChC,MkBoCJ,UOvBe;AAFQ,AtBqBb,APxBL,AIPF,ACdL,ARyBI,ACGE,AFNI,AkBGV,AKEA,AI3Dc,AD0FV,Ab/EJ,AmBgCG,IvBXC,CDQwB,CJaf,AINT,EG8BQ,AXvB4B,CiCEhC,APkCC,CC1FK,CAAA,CAAX,ChB6Ec,CAAC,AXvBd,A0BoCA,GAAa,IAAI,OfbT,AeaK,CfbgB,AF7CJ,AiB0DC,CtBrCO,EKrBL,CLqBQ,GOwBA,AF7CxC,AiB0D6B,CfbY,APxBG,EuBrD9B,ChB6EF,AgB7EE,AD0F2B,EfbK,OAAlC,YPxB4B,EAAjC,GuBrDO,QAAA,QAAA,CAAA;AM4DN,AtBkBG,AVpBP,AiBAJ,AKEA,AG+BM,AI7FO,QG8DL,GP+BG,UO/BU,CAAC,GAAd,CAAkB,CH9Db,IJ6FP,GAA4B,KO/BK,CAAC,CP+BlC,EI7FuB,GAAA,EG8DrB,EAA0C,MH9DrB,CAAA,CAD5B,MG+DO,yBH/DO,mBAAd,CAC4B,CAAA,EAAhB,gBAAgB,CAAhB;AG+DN,ArBRP,AfYO,AY/BP,ARyBI,ACEE,AFNF,AkBIJ,AKEA,AI5Dc,AD2FT,AbhFL,AmBiCE,EAAA,EvBXE,CiBwDa,CdrCX,AfYO,A6ByBT,EM7CI,EL5CM,ClBiCH,ATqBA,A2BtDG,AK4CN,C9BgBI,AyB5DT,K9BgEqB,AY/BP,CAAC,EZ+BU,AGVR,CHUO,EeZJ,AVQA,AFNA,EHUqC,CeZjC,AHnBvB,AP2BsB,CAAC,CAAC,CFNxB,EYFsB,AHnBK,ATqBA,IYFuB,IVQ5B,AyB5DZ,CzB4D0B,AyB5D1B,ElBiCd,EAA4C,EP2BlB,CAApB,CAnB0B,CAoB1B,iByB7DQ,MAAA,QAAA,CAAA;AfqDZ,ADqBkB,AdTlB,AWlBE,ACbF,ARyBE,ACGE,AFPA,AUwGC,AQpGP,AKEA,AG+BI,AM/CA,EvBXF,GEuCM,CCpBF,ADoBE,ADsFK,EFhHL,CXkBC,A6B2BA,EdvCE,AoBRA,ChCUC,EUwGS,Eb9FL,AGVA,CHUP,Aa8F2B,CAAC,CVxGlB,A0BqCf,ElB7CiB,CXkBC,AWlBA,AkB8Cf,CdxCgB,AF0Ga,EFhH5B,ARQiB,AUwG4B,CFhH3B,ARQA,A0BqCtB,CjB1DuB,AiB2Df,AMhDG,CtBkHqB,EFhH5B,ACbsB,CDa1B,CIMF,AfYO,CWlBwB,AEgH6C,AgBlE7D,CdxCiB,AZEf,CSrBjB,CZ+BkC,AGV9B,UHUwC,CAAC,GAAX,CAAe,CAAf,CAAlC;AoCJI,ArBPF,ADyBG,AdbN,AWlBK,ALMM,AMnBX,ARyBG,ACGE,AQiGJ,AQpGF,AKEA,AI7Dc,AD6FN,AblFR,ChBoDO,AY/BP,CNqBY,CQiBN,EMlCF,CTWE,CCbC,EE4CM,CgB9EC,CfqDH,AHnBA,AkBlCG,AD6FD,CC7FV,CxBqDoB,GSAP,ATAO,CSAN,CHnBC,MGmBd,AHnBoB,CAAC,IDaI,CAAC,CkB8CtB,EjB3DU,CwB2BR,AzBdJ,ACb4B,CDaC,IAA7B,AmB/CQ,CAAA,CnB8CmB,CAE3B,MyBakB,CAAC,GxB3Bd,EwB0BL,EAC0B,CxB3ByB,GwB2BrB,CAAC,KN7DvB,ElBkCP,EwB2ByB,AxB3BsC,CwB2BvB,IN7DjC,OM4DR,CN5DQ,CM6D8C,AN7D9C,IM6DkD,CAAC,OAD3D;AAED,ArBRF,ADyBK,ARzBJ,AMnBF,ARyBE,ADLE,AUyGJ,AQpGF,AKEA,AYrBE,ATqDM,ATlDL,AJjCH,EJwBE,CGiBA,MAEO,AHnBA,AC6HA,CD7HC,AToBA,CGDC,AuBwCE,ChBkED,CE1GC,AuBbA,C1BNX,AToBY,CGDC,AMlBT,CiB0DE,ChBkES,EVzGE,AmCdjB,ATqDmB,CdxCD,EF0GX,AyBvHU,CnCcb,EYDO,AZCY,EUyGE,CP1GhB,CAAkB,CSAC,AF0GA,EgBlEI,CvBxCvB,AuBwCwB,CvBxC/B,CO0G+B,GE1G1B,AF0GkB,AgBlEnB,EdxCgC,EF0GE,KAAK,KAAK,KD5H9C,AC4HG,CAAP,ED3HI,qEADA,GAEA,gCAHJ;AwB4BC,ArBRC,ADyBI,AH/BF,ALMH,AMhBD,ARsBE,ACEE,AFPE,AUyGP,AQpGD,AKEA,AYrBI,ARzC6B,AD8F1B,AbpFP,CHmJO,CDvHL,CwBXgE,CAqChE,CP0BE,CxB5BE,IMdI,AmBhDuB,CfsDtB,AuBbA,ARzCsB,CQ0C3B,AR1CH,IfsDC,MVQkB,GAAG,CAAC,COxBC,EDUE,CCVC,IDUI,CCVhC,AkBtCO,EzB8D4B,CMd/B,EAAkC,ANcA,CAAC,CAAf,IAAoB,WyB9D3C,CAA8B,CAAA,GzB8DR,KACf,CAAC,CAAC,OAAF,CAAU,KAAV,EAAiB,CyB/DM,UzB+DK,GAAG,CAA/B,AyB/DuB,MzB+De,CAAC,CAD3C,AyB9D2B,CzBuCD,AyBvCC,CzBgE3B;AUTH,ADyBK,AH/BA,ACVP,ARsBG,ACIE,AFTE,AkBKR,AKEA,AYpBQ,AToDL,ATtGsC,AJiBzC,CIjBA,EL4DS,GuBVD,E3BMA,CIMC,IuBZM,EAAE,MADX,M3BOqB,GAAG,IAAtB;AIOJ,ADyBI,AH/BD,ALMK,AMfZ,ARqBI,ACIE,AFTE,AkBKR,AKEA,AYpBQ,AR3CmB,AdS3B,EV8CY,IgCZJ,IvBYE,AuBZE,AR3Ce,ChBgFZ,ARzBM,AwBvDM,CQ2Cb,AR3CX,EfuDW,ATAO,IgCZD,CvBYV,CACF,cuBbgB,CR3Cf,gBAAN,CAAwB,CAAA,0BAAA,QfyDf,KAAK,GezDU,QAAA,CAAA;AMgEzB,AtBiBQ,AH/BL,ALMD,AFMA,ADLI,AUwGR,AQnGA,AKEA,AYvBM,ATuDE,AbvFR,EauFQ,GlB5DoB,A2BIjB,CFwBL,AtBiBI,AH9BN,AE8GE,CyBpHA,GxBoCQ,ARzBJ,C8BQC,CtBiBK,Aeed,GAAgB,EvBxCD,EQwBF,CRxBK,G8BQG,E9BRE,OAArB,AOyG4B,GAAwB,WuBjGtD,CrBTQ,CqBS6B,ArBTnC;AqBUA,ArBND,ADuBO,ARzBN,AFMA,ACGE,AFRE,AUwGN,AQnGF,AKEA,AYnBQ,AR7CoB,AD+FV,ATvGU,AJgB5B,EHyJE,IChFQ,AwBpCF,EnCYA,CWwBK,CsBjBH,A9BRA,AwBxDkB,AVRA,CNyFb,ARzBJ,AOyGA,AiBjKiB,AVRA,CfyEhB,AyBjET,AVRA,CPyKU,AyBpHE,ChCWD,AHCA,CAAC,AmCZE,ExBoCI,AD+EmC,CuBhGtC,CtBeH,EsBfM,A9BRA,CAAC,G8BQG,CAAC,A/BCA,AFRlB,EGDM,CDSe,AFRA,EGDE,CAA3B,C8BQiB,CAAa,AjCPA,CAAC,A2BzD1B,G3ByDoB,AiBjEjB,EjBiEJ,AmCbF,SFoBe,CAA6B,ENhE/C,CAAyB,CAAA,CMgEP,CAAjB,M/BCgD,IAAvB,CAA4B,CAA5B,CAAvB,WyBjEsB,iBAAA,QAAA,CAAA;AMiExB,ArBNH,ADuBS,ARzBN,AFMA,ADLI,AUwGN,AQnGF,AKEA,AYnBQ,ATkDJ,ATxGS,AJgBb,CDwCA,CFkHE,AO1KW,IN0FH,ADgFJ,AyBpHE,AlBtDS,EdiET,AOyGA,AO1KW,EgByET,AEnBE,EhCWA,AgCXG,ATkDL,EhBgE8C,CC9ErC,ARzBJ,EQyBM,ARzBjB,AgCXU,IAAW,CxBiCV,AeiBK,EO/BI,ADhBA,GCgBG,IP+BE,GM/CC,GGHD,GFmBW,CAAC,CP+BD,CAAC,AM/CjB,CCgBG,ADhBa,CCgBK,KP+BhB,CAAoB,EO/BtB,CAAvB,cP+ByB,CAAzB;AdnCJ,ADsBU,AHhCN,APaA,ACEE,AFPC,AUwGL,AQnGF,AKEA,AIxEa,AVFD,AJgBZ,CIhBG,CP2KD,AO3K0B,CAAA,GN2FlB,CoBjFJ,CvBiDE,ENeE,CQiGC,EAAE,GChFO,EAAE,EAJP,ITbS,Ae1EI,CUEf,EnByDc,ENeE,AQ8F2B,GF7GxB,CNe1B,AiCnB2B,EjCmBE,Ae1EP,CT2DxB,EAAkC,A2BJA,CAAC,ARrDZ,CQqDW,CAAG,CRrDd,CVFC,CAAA,QUED,CAAA,CAD1B,+BAAc,iBAAd,CAC0B,CAAA,EAAd,cAAc,CAAd;AMwET,AzBdE,ALOF,AFMA,ACEI,AQiGN,AQnGF,AKEA,AQpBG,AIHG,ATqDF,AbzFJ,EH4JE,GyB7HS,C3BaL,C2BHA,CFiBE,C9BPC,AOyGA,CgBnED,ChBmEG,AgBnEF,EvBtCI,CAAC,EOqG0C,CF5GvC,ALOA,CAAb,EAAgB,CAAC,AuBsCjB,CO/BkB,CP+BD,CvBtCG,CAApB,E8BOuB,A9BPA,CAAC,EAAxB,EAA4B,I8BO5B,EAAkC;AAChC,AtBiBI,AH/BL,ALOC,AMjBN,ARuBI,ACEI,AFRF,AUyGJ,AQnGF,AKEA,AYlBQ,ATgDF,AT3GO,EP8KX,IPzGI,AMjBA,ATiBA,AmCVE,IhCUE,CHAC,CUyGC,CyBnHG,ChCUD,AOyGA,AgBnEF,CShDK,KlB3DJ,CdqEQ,CAAC,CAAD,CAAf,CuBsCiB,CjBvDG,AiBuDF,GjBvDM,A0BMxB,AlB1DgB,GAAA,CS2GV,CAAoB,IjBvDH,IACxB,AQrDiB,CAAA,CADrB,IRsDG,GiBsDQ,CjBtDmB,CiBsDoB,EAAvC,CAAN,mBT5GS,YAAd,CACqB,CAAA,EAAT,SAAS,CAAT;AgB6EP,AtBiBI,ARxBJ,AMhBA,ARsBF,ACEI,AQ2FgD,AQ7FxD,AKEA,AQpBE,AIEM,ATgDH,AbjHL,CH8KA,CqB/GE,GCRE,CC2BE,AEjBE,E1BNI,EwBuBF,AEjBE,CFiBD,C9BPC,AgCVE,IhCUE,AMhBI,E0BMA,CFiBd,A9BPa,AMhBI,AsBIJ,CEmBC,EFnBD,E5BYK,KAAL,CAAW,CAAX,CAAb,E8BO4B,AEjBV,CFiBW,GxBvBO,CAAC,CwBuBrC,KxBvB2C,CAAC,IAAR,EAAc,SAAd,CAApC;AwBwBA,AtBiBI,AHhCN,APcA,ACEI,AFRF,AU0GN,AQpGA,AKEA,AQpBI,AIDE,AT8CY,AMzCf,KGfQ,CF8BL,AvBmGA,CyBnHA,GFgBI,AjCPA,A+BZA,CEmBC,AzBfA,GRQG,CQRC,ARQA,EiCOT,GAHgC,AzBZlB,CyBgBd,CvBkGgB,CV1GZ,EU0Ge,EqBtHrB,C/BYwB,CQRjB,GEkHqB,CFlHC,AEkHA,IFlHI,CAAC,EEkHb,CAAgB,EFlHR,EEkHR,CAAzB,EFlHgD,SAA5C,EAAuD;AGiCjD,AHhCJ,ALOA,AMhBA,ARuBF,ACEI,AFTsB,AU4G9B,AQrGA,AKEA,AQpBI,AIGI,AT8CL,MjBtDO,AC4HJ,AyBpHE,GJHC,C5BWC,GgCRK,ChCQD,CgCRG,EJHb,CAAc,C5BWC,AMhBI,GAAG,CC4HH,GAAG,CAA1B,CP5GM,AgCTA,EhCSwB,I4BX1B,GAAiC,IAAjC,CAAsC,UAAU,EtBLX,EsBKc,CtBL7B,CAAmB,QAAnB,CAApB;AwByBA,AtBiBI,AHhCJ,ALOE,AFOJ,ACEI,AFVF,AU6GN,AQrGA,AKEA,AQpBM,AIGE,AT+CN,AMhHoC,CAAtC,KCiFM,AvBoGA,AyBpHE,EjCiBA,AFV+C,EiCS7C,AEhBE,CFgBD,AFnBA,C7BoBC,AiCjBE,EhCQA,CAAC,C8BQT,A/BCU,CAAC,CCTC,AgCRE,CFgBD,E/BCE,CCTC,CAAC,E4BXjB,G5BWE,AO4GoB,AqBvHA,GrBuHG,EuBpGE,CAAC,AEhBV,EzBoHY,CRnGC,AQmGrC,CqBvHM,E7BoBkC,E+BDlC,W/BC+B,GAAmB,oBAAvC,CAAT;A+BAH,AtBiBK,AHhCJ,ACVA,ARwBF,ACEG,AFVC,AU6GR,AQrGA,AKEA,AQpBM,AIAA,KAdK,C3BkBL,ACVI,AC6HJ,AyBrIF,CjC2BE,GMTI,CAAC,AuBJA,E7BoBE,CFVA,EQNP,AuBJA,E/BUuB,CQNV,ACVI,ATgBO,A+BVX,IAAb,CtBNsB,QTgBf,CShBP,CTgBE,CShB+B,CTgBQ,EQNT,AEmHA,GAAG,EFnHE,GEmHG,CFnH3B,AEmHnB,GFnHkD,CAAC,CAAhC,GAAoC,IAAI,CAAC,KAAL,GAAa,WAA9D,CAHqD,CAIrD;AyBeH,ArBNI,ADuBG,AR1BF,AMhBA,ARwBJ,ACEI,AFVE,AU6GV,AQrGA,AKEA,AQpBK,AIIF,AHpEU,IvB0DL,CsBGJ,CnBgBS,AF0GP,GE1GU,GACZ,ATJQ,CSIP,IHpBgB,AuB1DR,ChC0EG,EYIZ,AHpBoB,EGoBY,CTJb,A6B1EJ,C7B0EK,CSIe,ATJhB,CAAX,A6B1EO,EhC0EO,EGAI,CSI1B,ATJ2B,AHAD,IAAgB,CYIyB,AZJxB,AgC1E5B,CtBuLkB,AsBvLlB,CADlB,EtBwLuC,CP7GC,CAAC,CAAD,CAAjC,CO6GqC,CP7GC,AHApC,AU6GV,uBsBxLe,SAAd,CACkB,CAAA,EAAN,MAAM,CAAN;ApB+EP,ADsBI,AHhCJ,ALMI,AMhBA,ARwBN,ACEI,AFVE,AU6GV,AQrGA,AKEA,AQpBG,AIKD,AT2CM,EAAA,IlB5CF,ACVI,AC6HJ,EEzGM,ETJF,IAAI,CSIK,AJVJ,CkB4Cb,CAAqB,CdlCD,AJVJ,ALMA,AMhBI,ATgBN,C0BsCd,CjBtDsB,CiBsDQ,GdlCJ,AHpBA,CGoBC,ATJJ,AO6GA,CP7GP,EO6GU,GEzGN,ATJS,AMhBP,CGqBd,CAAC,AHtBa,AC8HS,CAAjC,EExGU,EAAM,CAAN,ATLQ,ESKC,CTLuB,CAAxB,CSKR,ETLoC,EKNE,CIWrB,AJXsB,GIWnB,ATLsB,CAAC,CKNL,ALMI,CSKnB,ATLvB,CKN8C,SAAR,CAA1C,MIW4C,CAAC,CAAD,CAAvB,GAA6B,OAAO,CAAC,GAAG,GAAG,CAAP,CADzC,EAEZ,OAAO,CAAC,CAAD,CAFK,CAAhB;AqBKJ,ArBFI,ADoBI,AHhCJ,ALMG,AMhBC,ARwBN,ACEI,AFXS,AUkHjB,AQzGA,AQ6BgC,EO7B9B,IAAI,AzBdA,ACVI,CwBwBH,ErBFM,ATRL,CKJE,GIYO,AJZJ,CRKI,CiCSf,A9BRa,AMhBI,CwBwBH,CxBxBK,CDUH,CAAC,EyBcjB,AxBxBuB,CGsBZ,CAAc,CHtBN,IDUH,CAAZ,CIYO,EAAuB,iBAAvB,CAAP;AqBGL,ArBFI,ADoBK,AHhCL,ALMK,AMnBc,AR2BpB,ACEI,AFZQ,AkBUhB,AalBE,AL+CE,CO/EiB,ArB0Cd,CqB1CA,AFgCL,GtBTM,CE6CE,EThBF,IAAI,AwB2BF,GvBrCK,CDUC,AFZW,A0BuCb,CfXO,AThBJ,CAAC,ESgBG,CR1BA,CAAX,A4BVY,E7BoBN,CAAS,A6BpBH,AL+CC,CvBrCG,ADUV,AFZN,CGEA,AHJqC,CEcnB,AFXlB,CGCmB,OuBqCK,CAAC,KxB3BO,CAAC,CwB2BpB,CAAoB,GxB3B3B,IAAoC,MwB2BI,EAAE,EAAnC,CAAnB,GxB3B8D,CAAC,CAAD,CAAlD,GACJ,cAAc,CAAC,CAAD,CADV,GACgB,8BADhB,GACuC,cAAc,CAAC,CAAD,CADrD,GAEJ,gBAFJ;ASiBI,AHhCT,ALMS,AFQR,ACIG,AFbG,AkBSV,AalBI,AL+CA,UK/CM,EpBoCM,AR1BJ,AuBqCF,IvBrCM,GQ0BO,CR1BH,EuBqCA,GAAG,CfXO,CAAC,AR1BJ,CAAP,CuBqChB,CK/CA,G5BU6B,KQ0BjB,GR1BI,EQ0B2B,CR1BH,CAAxB,GAA4B,KQ0BpC,CR1B0C,CQ0BK,AR1BJ,CAAD,CAA1C;AQ2BE,AR1BH,AMjBH,ARyBJ,ACIC,AFbK,AkBSV,AalBI,AL+CA,SK/CK,CL+CD,CAAC,GK/CL,CpBoCe,EoBpCF,IL+Cb,CfXsB,AoBpCtB,CpBoCuB,AeWN,GfXP,IAA8B,AeWhB,IAAP,EjBtDE,CE2C4B,CAAC,CF3C5C,CAAmB,QAAnB,CE2CoC,CAAoB,AF3C3B,IE2CO,CAAyB,IAAzB,CAA9B,GF3CN;AE4CK,AHjCX,ALOO,AMjBF,ARyBH,ADTM,AkBSV,AalBI,AIGF,AT4CE,ElB5CF,OuBHO,AIGA,IT4CE,IAAI,MK/CX,EvBGqB,A2BAvB,C3BAwB,AuBHA,EIGD,EJHrB,GvBGF,CAAiC,CAAD,AkB4CvB,CAAuB,GlB5CO,CAAC,CAAC,KkB4ChC,CAAP,IlB5CqC,CAAc,WAAd,CAA0B,CAA1B,CAAvC;AGkCS,AHjCV,ALOM,AFQH,ACGA,AFZM,AkBSV,AalBG,AIGC,ATuC4B,IxBrB5B,GSHW,CTGP,GiClBG,CjCkBC,KAAK,OAAL,CAAa,CAAb,CAAR,AiClBW,uBAAuB,2BAAiB,gBAAnD;AhCQC,AMjBC,ARyBF,ACGA,AgBHJ,AiBfG,AT2CA,Ab5FH,MJuCU,KP4BC,GO5BO,CP4Bd,EO5BiB,aAAa,CAAC,YAAd,CAA2B,GAA3B,CAA+B,MAAM,CAAC,OAAtC,CAAf;AE2CI,AHhCV,APgBI,ACED,AFbO,AUkHV,AQxGA,AalBE,AL+CA,Ab7FF,EkB8CE,IpBmCQ,AHhCJ,AEuHA,ITvGI,IUgBQ,CAAC,ADuFJ,AqB1HA,CvBGC,ARKF,A+BRE,E9BmBE,ASuGA,CFvHE,CGgCF,AoBnCH,C9BmBM,ADXF,CW2B6B,AoBnCR,CvBGrB,CRKG,CAAZ,EQLwB,EEuHlC,YTtGQ,KAAK,QAAL,CAAc,OAAd,CAAsB,OAAtB,CAA8B,SAA9B,CAAwC,IAAxC,CADa,GAEb,QAAQ,CAAC,UAAT,CAAoB,KAAK,QAAL,CAAc,OAAd,CAAsB,OAA1C,EAAmD,IAAnD,CAFJ;AUiBQ,AHhCV,ALOE,AMlBE,AR8BF,ASqGJ,AQzGA,AalBI,AIGF,AtBjDF,IVwDI,EKPE,ACXI,EE2CE,ARzBJ,EFYE,COnBC,AuBHA,C5BUC,CQyBK,AwBhCJ,CxBgCK,AHhCH,ACXG,CR8BH,A8BtBA,GvBGI,APmBO,COnBN,ALOD,AMlBI,A0BWrB,ChCOkB,AFYhB,CEZe,CAAf,AgCPe,K3BAJ,CGgCH,AF3CN,CE2C2B,CF3CC,EDWD,IGgCO,CAAC,GAA7B,EAAkC,OAAlC,AoBnCD,CAAqB,IAArB,CAAP;ApBoCO,AHjCyB,ALQhC,AMlBI,AR8BJ,ACDF,AFdQ,AkBWV,AalBG,AIGC,AtBjDJ,CAAC,CXmEC,KWnEK,CAAC,EZoEE,CEZC,AMlBI,INkBX,AFYW,EDfA,CCeG,CQ9BV,CP6BY,CFdD,CAAC,CCeG,ACDH,EFdG,CAAb,EAAgB,AarDnB,CbqDoB,AarD1B,EZoEiB,CAAc,ADfF,EarDI,GZoE9B,CA5CI,AD6BE,CCgBN,CDhBkC,AarDE,CbqDD,AarDE,EbqD/B,EAAiC,gBarDH,CAAN,GAA+B,EAAhE,CAAD,EACK,IADL,CACU,OADV;ALgDc,ALSX,AMlBI,AP6BH,AFdQ,AkBWZ,AiBfI,AT0CI,AbvFR,EauFQ,ElB5CiE,CAA3D,GAA+D,CAA3E,CNoBQ,CiClBC,GT0CT,CAAmB,GxBxBH,AFdF,A0BsCd,EAA+B,CxBxBZ,IwBwBnB,C1BtCsB,AmCJV,CnCIW,A0BsCoB,ExBxBhB,CAAC,OFdK,CAAC,CAAD,CAAV,CAAc,EEclB,CAAuB,CFdpB,EAAqB,OEcxB,CAAjB,YFdoB,CAAZ,EAAwD;AWMrD,AHXb,APqBE,ACDA,AFdU,AkBWd,AalBE,AL4C2C,EK5C3C,E7BqBE,CSTI,GHXA,EPqBE,ECDE,CAAC,CMpBC,AuBDA,E9BsBE,ADfF,CQNG,AuBDH,E9BsBK,EDfA,CEcf,GMpBqB,ANoBA,CMpBC,CPqBC,CAAC,ECDE,OAAL,EAArB,GMpBa,CAA0B,CPqBxB,CACX,EOtBS,EAAgC,IPqB9B,EAEX,UOvBS,EAAkD,IAAlD,EAAwD,KAAxD,CAAf;AGkCK,ARxBL,AMlBI,AR+BM,ACFR,AFdS,AkBWb,AalBI,AL4CA,EvBlCF,MAAM,AMlBI,EsBQF,C5BUF,AMlBO,AP6BJ,CwBuBD,EjBpDQ,GiBoDH,ExBvBX,CO7BoB,CAAC,KiBoDD,CK5CG,CtBRT,CAAe,CsBQsB,GtBRrC,CAAoB,GiBoDH,CAC5B,OADiB,CACT,IjBrDG,CAAZ,GiBqDiB,GAAG,EADF,CAApB;AfTC,AHlCH,ALUE,AMlBE,AR4Ba,ACChB,AFdQ,AkBWX,AalBM,AL6CF,CfpDJ,CFDM,IR+BE,A8BvBF,E5BUE,A4BVA,CvBAC,CCRK,AR4BK,A8BpBT,E9BwBF,AyBqBE,CvBnCG,AMlBI,CsBOsC,CvBCxC,CAAC,CPoBG,CEVf,AFUA,EEVgB,GuBmCC,ClB7CZ,AkB6Ca,ElB7CpB,ACR4B,CAAC,CDQH,GkB6ClB,CAAoB,IjBrDb,CAAwB,GAAxB,AiBqDqB,CjBrDO,EiBqDJ,CjBrDxB,CAAX,AiBqDI,EAAmC,CAAC,GAAG,KAAJ,EAAW,KAAX,CAAnC,CAAN;AlB5CA,ALUE,AFcF,ASkGE,AQxGN,AalBM,ALyCuC,IlBzCzC,EE0HkB,AqB1HhB,E9BwBE,COxBC,CuBAC,C5BUC,C4BVC,I5BUN,CFcW,EEdE,CFcC,CAAhB,ASkGE,GPhHA,G4BZiD,GrB4HT,WAAxC,CAAmD;ACvFzD,AHlCG,ALUG,AMnBA,ARiCF,ACjFuB,AF+DjB,AUwVR,AQ5UF,AalBM,AL4CH,EhBkTD,IC5TI,AF3CI,AsBSJ,CjB3EA,CbmGE,GEdG,A4BVA,ErB8VT,AqB9VW,CtBTK,AsBMqC,ErBiWrD,CTtUe,CEdX,CAAa,AMnBI,ATeN,CW4BG,AVVA,CAAhB,EUWA,CAAC,AX7BiB,ISfhB,CTeqB,CSfO,ATexB,CW6BN,ARzBE,CAA0B,AHJF,CW6BK,IRzBE,CQyBjC,EAA8C,CRzB5C,EAAqC,CQyBvC,IRzB4C,CQyBuB,QRzB5B,EAArC;AQ0BC,ARzBF,AMnBG,ARiCJ,ACHJ,AFfY,AUwVR,AQ5UJ,AalBM,AL6CJ,AbxFF,AC8CG,EHgCI,IoBnCD,CpBmCM,CAAC,AVXL,CYnEC,CJkCK,CsBSH,C9BwBP,C8BxBS,ItBTQ,CIlCrB,CF8EO,AE7EH,CF8EO,AF7Ca,EsBK+B,GlBvCvD,CJkC8B,CAAC,AIjCH,MAAA,CF6ErB,CACmB,CE9EwB,EADlD,CF8EO,CE7E6C,CF8EpB,IF7CR,EAAhB,CE4CD;AAEF,AHrCH,ALWC,AFcC,ADlBQ,AUqUF,AQzTV,AalBM,AlB1CJ,CF0EF,KoBhCM,ClB1CC,CZkEC,COzBC,AE4UC,CqB3UA,ClB1CC,CZkEC,A8BxBA,AlB1CA,ELyCV,CPyBa,AYlEA,CAAR,EAAW,GZkEG,ASmTX,CTnTY,ESmTgB,AGrXd,CHqXd,EGrXiB,GZkEZ,EAAX,CAtDI,AYZyB,CZmE7B,AYnE8B,MAAhC,EAAwC,CAAC,GAAG,MAA5C,EAAoD,CAAC,EAArD,EAAyD;AFgF3D,AHtCC,ACTO,ATgBI,AUqUF,AQzTV,AaxBuD,AlBpCnD,AC6CF,CNXF,CMWE,GiBTE,GtBJQ,AKaJ,CJwUE,CGrXA,CC6CF,ID7CO,GAAG,EbgDA,IahDM,CAAC,CAAD,CAApB,CHqXM,GAAgD,EDrVlD,ATgBuB,EShBQ,CTgBL,IUqUxB,GVrU+B,CAAC,SAAD,CAA7B,CAHkB,CAIlB;AGnDmB,AMmCrB,ARkCN,ASmTM,AQzTV,AalBI,AL2CI,AZxCJ,EYwCI,IjBrDE,GCqVA,AqB3UD,E9BwBE,AarBA,CLbK,CAAC,CsBUb,GAAa,CL2Cf,EzBnBkB,CQlCV,AiBqDc,CjBrDG,AsBUvB,C9BwBmB,ASmTb,GAAmC,CIxU9B,CbqBa,CAAC,MAAzB,EAAiC,GQlC3B,CAAoC,CCqVpC,MDrVA,EAA6C,SAA7C;ADUV,ALWA,AMpBS,ARkCH,ADlBM,AUqUF,AQzTV,AajBI,ALyCoB,AbrFpB,ML0CE,APyBA,EYnEE,CHsXE,AqB1UD,C9BuBC,GAAG,AYnEA,CAAC,GkB4CV,C9BuBc,A8BvBA,C9BuBC,CDlBD,CajDV,CAAc,EbiDA,GAAG,AajDjB,CZmEU,AYnEd,CZmEE,CSmTI,AGtXoB,GHsX4B,GF5UtB,EuBEhC,CvBDA,AuBCmC,CvBDlC,EE2UK,GF3UN,EAAwB,ERMmB,CAAC,IAAvB,CAA4B,C+BLjD,CvBDwB,CuBC8B,EvBDT,CAAC,CAA9C,AuBCA,CAA2D,EAAE,EvBDV,CRM9B,C+BL2C,C/BKC,CAA5C,CAAb,CALkB,CAMlB;AQNN,AROM,AUqUV,AQ1TF,AajBM,AlB5CA,MAAA,CL2CK,IAAI,AuBCJ,CvBDK,GAAG,AK3CJ,CAAC,KAAD,CC8CO,CD9CC,CkB4CjB,CvBDuB,AuBCJ,EjBEE,CNHK,CAA1B,AK3CS,CAAT,CL2C6B,AMGJ,CNHK,GAAG,KAAK,CAAC,MAAvC,EAA+C,CAAC,EAAhD,CuBCoC,CvBDgB,auBCF,EAAE,EAAjC,CAAnB;AvBAE,ACXA,ARkCF,ADhBM,AkBWZ,AajBK,ALuCmB,AbnFnB,IJgCG,CsBUJ,AHrEA,AfyBA,KL6CU,APuBJ,CAAC,AYlEA,CJgCK,EDWE,CCXC,EDWE,ECXE,GDWG,CAAC,CAAD,CAAlB,YCXW,CAAa,MAAb,EAAqB,CRkCR,IAArB,CAAL,CQlCa,CAAX,ARkC+B;AQjC/B,ARkCA,ADhBI,AkBWZ,AajBG,ALuCC,AErCD,Af9CG,IJgCE,EIhCF,MamFI,AbnFE,CZkEC,AYlEA,IJgCQ,AIhCf,CJgCgB,AIhCJ,EZkEV,CAAa,EYlEf,EZkEE,CAAkB,CQlClB,AiBmDiB,CjBnDO,GAAxB,CAA4B,GAA5B,ARkCA,CyBiB0B,CjBnDO,QAAjC,EiBmDqC,CACtC,OAD2B,CACnB,iBADmB,CAA9B;AlBxCI,ACVD,ATkBK,AkBWZ,AQwBI,AbrFC,QL0CO,IkB2CF,EZvCI,KAAK,KAAK,CYuCD,GAAG,EAAtB,clB3C6B,IAArB,CAAJ,EAAgC;AAC9B,APuBF,AiBJR,AajBE,AHEA,Af9CC,EkB4CD,AHEA,M3BmBM,A8BrBA,GAAA,EvBFS,AMIJ,CNJH,AoBII,G3BmBG,A2BnBH,CdAI,QAAQ;ANHjB,ACXH,ARkCE,ADhBI,AUqUF,AQzTV,AajBI,ALwCA,AEtCA,EnBfE,MsBaE,CrB0UE,AqB1UD,AHEA,EFsCA,GKxCK,CtBbK,CAAC,CiBqDL,EKxCX,ALwCA,C1BnCc,A4BHd,CGFiB,AHEC,EFsCD,IhBkSX,CDvVJ,CAA2B,CCuVc,EDvVzC,CAA+B,CCuVc,GAAJ,AkBxU3C,CFsCA,AEtCmC,CnBfI,ATkBN,AUqU3B,CDvVkC,AiBqDN,E1BlCtB,G4BJZ,C5BIgB,CSnBd,ATmBe,A4BJ2B,EnBfK,ImBeA,InBf/C,CTmBU,KAAqB,oBADzB;AW8BN,AHpCC,ALOD,AMlBA,ARkCC,ACLD,AFVM,AUqUV,AQ1TF,AajBM,ALwCA,AEtCA,Af/CJ,KCuCE,CXWS,ADWA,CDDwB,CAQ/B,AyBiBA,CfNU,AF/CH,AIhCJ,Ee+CE,EGFE,ElB7CX,EF+EI,AF/CA,CE+CmB,CR7BnB,CAAoB,AHCR,C0BkCC,CAAC,CxBxBd,A0BdA,CAAkB,CjBgClB,CeMA,CfNgD,EoBlCrC,AHEY,G1BcU,EFVP,A0BkCD,G1BjCd,E0BiCkB,CAAC,AEtCZ,C5BKS,A4BLS,C5BKR,E+BP5B,E7BgBA,A0BdA,C1Bc+C,OFTpC,A0BiCc,C1BjCgB,A0BiCI,EAApB,CAAzB,gB1BjCW,CADL;AW6BV,AR1BA,AMrBG,ARoCC,ACPJ,AFTW,AkBUb,AajBK,ALwCA,AEtCA,Af/CJ,AC+CE,CL5CH,CNkDE,ADQA,G0BhBE,I1BgBK,GAAA,CCRP,CAAY,AHDD,IAAgB,CAAC,IGC5B,EAAyC,SHD9B,CAAiC,mBAAjC;AW4BX,AHrCI,ALQJ,AFkBI,ACPF,AFTQ,AkBUZ,AUfG,Af9CH,SF8ES,AHrCI,ALQX,CQ6BQ,AHrCI,CAAR,ANmBK,GCXT,GAAiB,EDWA,CFTD,KESO,CCXvB,CQ6BO,AX3BgB,EW2ByB,CX3BtB,EEST,CSkBV,CTlByB,ISmBpB,IAAI,ATnBd,EFTsC,CAAC,EW4BpB,GX5BK,CAAqB,KW4BpC,GACP,GX7BsB,CAAhB,UW6BQ,CAAC,OAAD,EAAW,iBAAX,EAAwC,IAAxC,CADP,GAEP,gBAAgB,CAAC,OAAD,EAAW,iBAAX,CAHpB;AAID,AHxCI,ALUD,AMpBJ,AP6BG,AFTS,AkBUZ,AajBI,ALuCA,AZzIwC,CNsF5C,AMtFA,KLqFM,GNoBG,E4BPE,ELuCA,KvBhCP,CHAa,CSpBG,CNoBC,EMpBE,CAAC,AToBZ,CAAW,C0BgCnB,CKvCW,E/BOH,CGAR,AMpBmB,AToBK,ESpBI,KAAT,CAAvB;AEoDA,AHxCA,ALSG,AMnBH,ATkB6B,AUoUnB,AQzTV,AQawB,AE5Bd,EAAA,OlBwUA,KkBxUY,CAAC,C5BIM,IAAI,EAAE,G4BJb,EAAmB,GlBwU/B,GVpUkB,AUqUV,SADR;ATpTJ,ACLJ,AFX8C,AUyU5C,AQ7TJ,AQqBG,AEpCC,AfhDJ,EX8DE,IW9DI,EegDE,ClB4UC,ITzTI,GDhBmC,E4BH9B,ClB4Ud,AG5Xe,CX8DC,CFXQ,CCgBN,AYnEC,CX8DH,A0BdG,E3BmBE,A2BnBrB,EAAuB,CfhDL,CZmEO,CAAC,EYlE1B,GZkEE,EAA+B,CYlE3B,CAAC,IAAP,GAAc,MAAM,CAAC,IAAP,CAAY,QAAZ,CAAd,GAAsC,SAAS,CAAC,MAAD,CADnD;AVsDE,AFcM,ACLJ,AFZmD,AU0UpD,AQ7TH,AQsBE,AErCI,AdtGsB,EX2G1B,GgC5BE,GlC0CI,EEdE,ADSA,AYpHkB,CX2GjB,AyBLA,AdtGiB,CAAzB,IX2GO,AHH6C,CCiBtC,CEdQ,ADSP,EFZU,CEYP,A0Bdf,GAAkB,G1BcG,WYpHf,EcsGN,K1Bce,EAAjB;ACRA,ADSA,AFbyD,AUiI3D,AQnHF,AiBfG,APAG,Af/CA,ACxDO,EAAA,IDwDA,ACxDI,EX4GT,AW5GW,EZqHT,A6BhBA,G5BOG,E4BPE,C/BG8C,AahDvD,CX6DW,CCTC,EDSE,GFbgD,EAAE,AahDtC,GX6DJ,CAAC,A6BhBnB,CAAqB,E5BOvB,C4BPE,CAAyB,E7BgB/B,CCT2B,CAAC,C4BPQ,U5BOG,CAAC,E4BPlC,CAA4C,E5BOX,CAAZ,CUpDzB,CAAyC,EVoDO,KAAK,KAAK,KAAK,KAA7D,CAAJ,EAAyE;AACvE,AMpBN,ARiCQ,ACJJ,AFdwB,AkBe5B,AUfK,AfpBH,ACpFU,CAAT,CAAyB,CAAA,GLyFtB,IP6BI,CCTC,CFaC,GDlBA,CGKN,AFaW,CAAC,EEbC,CDSC,GAAG,CCTjB,CADuE,AFcjE,CEZN,CW9GsB,Gb0HG,ACJD,CAAC,GO7BG,EKzFN,CLyFU,GRiC9B,CCJJ,CDIuC,Ea1Hf,CAAA,CLyFS,IAAsB,AsBaT,KAAK,YAAY;A5BS7D,AMrBJ,ARiCQ,ACJN,AFdQ,AkBeZ,AiBfE,ATmCM,AbvDI,EJKV,A0BeA,ATmCM,ExBrBJ,KWlCe,CZsCT,CCJC,CAAC,EFdA,CCkBG,CQjCC,ARiCA,CQjCC,AILL,EsBoBO,ATmCjB,CzBjBQ,AyBiBgB,AbvDC,CZsCN,C8BpBC,AIEH,ATmCjB,CxBrBE,AFdiB,CSfnB,AP6BsB,AwBqBY,CjBlDV,ARiChB,EDlBe,ESfA,GsBaG,CtBbM,CP6B9B,AFd4B,CAAC,G+BFX,CAAa,E/BEV,GAAiB,CAA9B;AGON,AMrBF,ARiCM,ACJN,AFdO,AkBeX,AiBfI,ATkCgC,AElChC,AfpBA,ACrFwB,UL0FlB,ARiCA,AkClBA,APAA,AdzGkB,CAAA,CAAzB,Ib2Ha,A2BlBA,C3BkBC,EQjCE,AmBeA,EAAf,CnBfkB,K0BelB,ClCkBM,ACJQ,GDIc,IAA4B,ACJxD,CDIyD,CCJlC,CYvHf,Kb2HF,ICJ2B,CAAC,MO7BD,GAAf,CAAmB,AP6BrC,mBO7BwD,CAAC,IAAD,EAAO,SAAP,CAAtC,CAAlB;ADUE,APwBG,ACJL,AFdK,AkBeT,AiBfI,APAA,AfpBA,ACtFS,EAAA,IAAI,Ec0GT,Ad1GW,CNoGH,A2BMP,EjCcE,E0BdP,M1BcA,MiCdA,CAAsB,K3BNpB,CACF,I2BKA,EAAoC,CAAD,C3BNjC,EACkB,C2BKiC,G3BNnD,EAC8B,OAAA,GAAqB,IADnD,EACuD;AGwCvD,AHvCJ,ALUI,AMrBF,AP8BD,AgBCH,AiBfM,ATgC8B,AbpDhC,ACvFQ,CAAT,CAAyB,CAAA,EiBgGxB,CIWE,E3BLE,ACXA,CEkDQ,CR7BN,AUzBA,CVyBC,EgCLE,CxBkCP,AwBlCQ,CxBkCQ,EFlDL,CIJb,CAAe,GJIG,CEkDhB,AwBlCA,AtBpBF,CsBoBoB,AtBpBA,CFsDc,CwBlChC,CrB3GsB,CqB2GA,AtBpBxB,EsBoBE,AtBvBqB,CJOvB,AIHA,CsBmB4B,C1BhBC,A0BgBA,CAAC,KhCKX,AWhHK,CqB2GI,CAAS,GhCK9B,CAAL,EAAyB,AgCLzB,ArB3GsB,CAAA;AH8I1B,AHxCO,ALWD,AMrBF,ARiCE,ADlBA,AUiIN,AQjHF,AajBG,AIEG,ATgCF,AEjCA,AflBA,ILaK,ECVH,GEkDG,CAAC,CHxCM,A2BML,APDA,C3BkBC,COvBM,ALWL,AFYA,AS+GA,CVjIA,CSfE,CAAC,AmBeA,C3BkBC,CDlBY,CAAC,A0BiCb,AEjCE,C3BkBC,EEZZ,AgCLF,ChCKiB,AgCLA,CAAC,C1BhBlB,A0BgBmB,ATgCJ,CjBhDK,ARiCA,ADlBb,A0BiCS,CfEb,AVjBkB,CEZnB,CQ8BE,CiBpCoB,CzBMC,AHNW,AUiIxC,AyBhIqB,APDQ,COCC,C1BhB1B,CAA6B,ACgJJ,CP3HvB,AFYY,A2BlBD,CAAiB,C3BkBxB,CkCjBN,ETgCW,C1BjCT,A0BiC6B,CjBhDH,CRiCS,ADlBW,A0BiCrC,CAAb,EjBhD2C,AmBe5B,C3BkBX,A2BlBJ,E3BkB6C,A2BlBA;AjBqCvC,AH1CS,ALYZ,AMrBC,ARiCE,ACjB2C,AFD3C,AUiIN,AQjHJ,AiBfK,AT8B+B,AE/B9B,Ad3GsB,EH+IlB,GwBtCN,CxBoCK,AHxCU,AoBMb,Id3GsB,CH+IS,AG/IT,Cd2GlB,Ac3GP,EL4FW,EmBeE,C5BAD,CAAC,C4BAG,G5BAT,CAAW,IAAX,E4BAmB,CAAC,OAAX,CAAmB,Ad3G1B,Kc2G+B,CAAC,CAAD,CAAxB,EAA6B,EAA7B,CAAb;AjBqCF,AH3Cc,ALab,AMtBU,ARkCL,ADlBA,AUiIN,AQjHJ,Aa1HuC,AL0IpC,AEhCG,AfnBF,ACzFS,CiBEb,CjBFa,GNqGL,CoBOF,Ad5GW,EAAE,CJ6OV,AGpJA,CFuDC,AFpDK,ETgBL,A4BAE,CAAC,GfnBT,CJGkB,ACiJlB,AkBjIE,C5BAU,A4BAE,CnBhBM,ATgBP,AalBT,CFsDY,GAAG,AiBpCA,CAAC,AflBX,CekBU,CAAjB,I5BAI,GAAsB,IAA4B,CAAC,AalBrD,CAAoB,MbkBlB,mBalB2C,CAAC,QAAD,EAAW,IAAX,CAA7C,IACA,KAAK,gBAAL,EADA,GAEA,KAAK,OAAL,IAAgB,EAHpB;AFwDE,AH5CuB,ALc1B,AMvBsB,ARmCf,ADlBD,AUiIL,AQjHJ,AiBfI,ATgCF,AEjCG,AfhBF,AC7FS,CAAT,CAAyB,CAAA,CNqGC,A2BSzB,ExBmCE,GAAG,CD6FC,AyBhIA,CAAC,CxBmCF,AFrDgB,QCkJL,CyBhIhB,EzBgI6B,CyBhIT,CzBgIpB,CAH2B,CAI3B,AI/OwB,GqB8GC,KrB9GD,QAAA,CAAA;AHkJpB,AH7CA,ACTgB,ARoCd,ADlBH,AUkIH,AQlHJ,AiBfM,AtBhBJ,MLMoC,GR/BhC,EmCyCK,G3BVT,CG6Ca,AH9C8C,ARUhD,CQRX,GRQe,CWoCG,EwBnCd,CnCDe,AmCCE,CnCDD,MWoCP,CAAgB,AwBnCA,CnCDd,AmCCe,KnCDG,GmCCZ,CAAkB,GxBmC1B,CAA8B,IwBnCvC,IxBmCS,CAAP;AACD,AH5CL,ALcA,AMzBY,ARqCJ,ADnB2B,AkBiBrC,Aa3Hc,AI4GT,APDD,Ad9GuC,EXoHzC,GgCPE,ExBkCmB,CR3Bf,AyBNA,E3BkBE,A8B7HI,AjBH6B,CXoHnC,A4BjHM,AjBH6B,CL2FN,AsBxFlC,AjBHA,Ec8GW,E3BkBE,CAAC,A2BlBA,GnBnBT,CADuC,CAEvC,MRoCE,C2BlBN,E3BkB2B,KAAK,CAAC,CahIzB,CiBGE,C9B6HiB,A8B7HjB,E9B6HJ,iB8B7HI,kBAAA,QAAA,CAAA;A5BkHV,AFYM,ADpBG,AUmIT,AQjHJ,AQeQ,AZ9IK,EY8IL,AZ9IK,IAAI,Ed6G0C,Ac7GxC,CJgPV,CT/GC,CEZC,GFYG,AajIF,GbiIK,KyBaf,CzBbqB,AyBaM,CzBbL,CS+GpB,CAAuB,MT/GV,CS+Gb,AgBlGF,CzBbQ,AS+GyB,CAAC,AgBlG4B,ChBkG7B,EAAI,CP3HhB,AO2HY,KP3HP,AO2HgB,KP3HjC,CAAP,EAAgC;AQ8B9B,AH5CJ,ALeI,AMzBE,ARqCC,ADpBD,AUmIF,AQjHN,Aa5Hc,AI6GV,AT6B4D,AE/B5D,AfhBM,AC/FiB,EAAA,IHmJrB,AH5CA,EoBQE,COEC,AtBlBQ,AC/FiB,CiBIpB,CAAA,AjBJsB,CXsHxB,AO2HA,AqB7OT,CvBmGU,CCVC,A0BoBV,APFU,CAAC,CjBoCC,AXrCF,AUmIE,CyBhIC,CxBkCC,AH5CA,CE0IC,CDpJC,ATiBF,CGQG,AyBPb,CjBgCe,AHxCjB,A2BUgB,C1BpBC,ATiBD,CGQE,AO2HA,CGlJd,CLQgB,AoBQA,CnBlBC,ATiBQ,A4BC/B,C5BDgC,AafH,CVuBJ,AyBPA,CnBlBN,A0BoBN,CAAc,C1BpBvB,ATiBA,CQPyB,CLe3B,EgCLW,E3BVqB,CuBnGxB,CAAA,CI6G2B,M3BVvC,EAA+C,AE0I9B,CAA+B,CAA/B,EAAkC,CAAlC,CAAb,IqB7OQ,MI6GyC,GJ7GzC,EI6GV,MJ7GU,CAAA;ApBgJR,AH5CF,ALeE,AMzBE,ARqCD,AiBFP,AUjBM,AfhBF,AChGQ,CAAT,CAAwC,CAAA,CNwGvC,EG4CE,AiBpCA,C3BN+B,CQZ7B,ARuCF,GO7BK,ALeA,CKfC,AoBQA,CnBlBC,CAAC,CmBkBC,CzBOT,EQ6BY,AFtDV,CNyBW,AMzBA,CEsDC,EiBpCE,CpBRlB,CAAoB,ECVE,CAAC,AK9FgB,CNwGvC,AoBQwB,CAAC,CAAD,CAAG,EzBOzB,EWvHqC,IcgHrC,InBlBa,AK9FwB,CL8FC,AK9FD,OL8FxB,CAAX,EAA8C,OAA9C,CAAuD,CAAD,IAAe;AEiDtD,AHtCnB,ALeE,AMzBI,ATgBF,AUmIF,AQhHN,AajIa,AIiHT,AT4B4D,AE7B3D,AfhBD,KF8CA,AiBhCA,CzBSE,EgCNE,CAAC,C1BnBC,ACmJA,CkBjIC,G5BFC,AUmIE,AyBhIA,ChCMC,AyBPA,CzBOC,AMzBA,CAAC,CTgBD,A+B9GH,C/B8GI,AUmIE,AyBhIf,ChCMW,AMzBL,CNyBJ,AMzBe,A0BmBA,APDA,CnBlBX,AmBkBY,GGhHF,C/B8GR,CAAa,CUmInB,AqBjPc,AHgHL,ElBiIe,CkBjIC,CAApB,C5BFC,C4BEsB,I5BFE,A+B9GhB,C/B8GZ,A+B9GY,CADnB,C/B+GsC,8B+B/GxB,UAAd,CACmB,CAAA,EAAP,OAAO,CAAP;ApBqJT,AH5CD,ALeE,AMzBI,ATgBC,AUmIF,AQhHR,AiBhBM,AT4BF,AE7BE,AfhBF,ACtGS,SLkGL,CiBiDA,CfOI,AwBnCD,CPDC,ClBiIC,EC7FG,CiBpCA,E5BFA,CmCGV,APDa,CjBoCE,AwBnCD,AT4BF,CAAC,EAAX,AZnJK,CdoHS,CmCGhB,APDmB,COCC,APDA,C5BFD,C0B+BC,CfOf,AiBpCQ,COCb,CnCHuB,AmCGE,APDzB,CjBqCE,AXvCsB,A0B+B1B,EAA4B,CZnJP,CJuPjB,CAA6B,AyBhID,CrBvHX,EJuPjB,CAAiC,CVnI/B,CWuCS,CAAC,CD4FZ,EAAuC,CAAvC,AIvPiB,CAAA,CADxB,IH4JkB,EAAa,iBAAb,EAA0C,IAA1C,CADR,CG3JI,EH6JP,aAAa,AG7JpB,CH6JqB,AG5JG,CAAA,EAAZ,OH4JQ,EAAa,GG5JT,CAAZ,aH4JQ,CAFjB;AAGD,AFxDK,ARqCF,ADrBI,AkBmBV,AiBhBQ,AT4BF,AE7BA,AfhBF,GFyCF,KeII,EzBVI,E2BnBE,COCC,ClCkBC,CAAC,C2BnBC,E5BFA,AmCGR,AT4BQ,CzBVN,AyBUO,AE7BE,EOCE,AT4Bf,GzBVkB,AyBUF,C1B/BC,AmCGf,APDiB,CAAC,E5BFA,ECqBpB,A2BnBa,CAAY,C3BmBC,ADrBF,CAAC,E4BEZ,CAAb,E5BFoB,CAAW,G0B+B/B,Q1B/BoB,CAAhB,EShBsB,QAAxB,EAAkC,MAAlC;AEyDP,AH/CC,ALeE,AMxBG,ARqCC,ADrBE,AUkIF,AQ/GR,AiBhBQ,AT4BH,AE7BC,AfhBF,MegBE,CnB1BA,CDiBE,ALeA,AO0HA,IkBhII,CzBMC,AgCLA,C3BVC,AP4BA,C2BnBC,EpBRT,CLcE,AFaU,ADrBF,AUkIE,CAAC,ET7GE,C2BnBC,CzBMC,AO0Hf,CAAgB,AyB/HhB,C3BTM,A2BSW,C3BTV,AP2BW,A2BnBA,C5BFD,CUkIjB,EVlIoB,GmCGK,CAAC,APDA,C3BmBb,CAAe,CEbhC,AHR+B,CAAC,A4BEE,CzBML,GKd3B,A2BSmB,C3BTO,A2BSW,CnCHf,GAAiB,A4BEvC,C5BFI,CAH6B,CQHjC,AROI,CmCEF,C3BTiC,IP2BpB,CAAoC,KAAK,MO3BxD,CP2Be,CO3BsC,AP2BnD,IO3BF,EAA2D,KAA3D,CADJ;AGiDF,AH/CE,ALcI,AMxBD,ARqCG,ADpBE,AUiIH,AQ/GP,AiBhBO,APDF,AfhBD,MLQE,C2BMA,ClCqBE,IAAI,CAAC,EO3BE,GAAG,UP2BV,CAAqB,IAAK,CAAC,cO3Ba,CAAC,AP2BzC,KO3BwC,CAA9C;AACA,ALcG,AMxBF,ACkJE,AQ/GL,AiBhBK,AT2BD,Ab5CA,GJfF,ECyJE,CFlIE,AkBoCF,Ib5CM,Ea4CF,CAAC,IlBpCQ,GAAG,AKRA,CLQlB,EKRqB,Ea4CnB,CAAkB,Eb5CM,MAAxB,Ia4CA,EAAgC,UAAU,CAAC,EAA3C;AlBnCF,ACVD,ARoCO,ADpBE,AkBmBV,AiBhBG,APDC,AfhBA,CJjBJ,GmBiCI,EpBRE,IKRI,GZkCG,C2BlBC,EfhBE,CLQC,ARMF,A4BEE,EfhBe,CLQZ,AP0BZ,CO1Ba,AP0BA,ADpBF,Aadf,CLQF,ARMkB,GCoBZ,ADpBe,CCoBG,ADpBhB,C4BEiB,C5BFD,A4BEE,C5BFD,CCoBnB,EDpBsB,G4BEb,CAAmB,K5BF1B,EAA+B,CAAC,EAAhC,EAAoC,G4BE7B,EAAmC,EAAnC,CAAb;AzBMA,AFaG,ADpBK,AUiIR,AQ9GJ,AQUI,AE3BA,O3BcE,EETG,AyBLA,ElB+HE,CgBpGD,CzBTG,KEbT,AHPY,CGOG,AyBLf,ElB+HA,CkB/HkB,CF2BD,C1B7BT,A0B6BU,CvBtBlB,MuBsBM,CAAoB,ME3BJ,OF2BiB,UAAU,CAAC,EAAE,EAA9C,EAAkD,UAAlD,CAAN;AlBnCF,ALcC,AMvBH,ARoCQ,ADpBI,AUiIT,AQ9GH,AiBhBE,AT0BE,Ab5CA,EsBkBF,I1BnBI,EICE,CLQC,IP2BI,AkCjBA,AT0BF,Ab5CE,CsBkBC,AtBlBA,CLQC,CAAC,EROA,CAAC,CShBG,ARoCZ,CAAa,AYnCb,CbeY,AmCGP,AtBlBS,CJDC,AiB6CF,ClBpCZ,A2BUoB,AT0BP,CzBTd,CO3BN,AP2BwB,AyBStB,CjB7CuB,CDSC,CP2BC,ADpBF,CShBJ,ATgBK,CAAD,CShB3B,ATgBY,AafJ,CAAJ,CZmC8B,CYnCC,QZmCN,CAAe,0BAAf,CACjB,IADiB,EACA,IAAI,CAAC,IADL,EACW,IAAI,CAAC,OADhB,EACyB,KAAK,OAD9B,CAArB;AO1BJ,ACRJ,ARoCO,AS6GL,AQ/GF,AiBhBI,ATmB4D,AbrC1D,ILQF,K2BUI,GtBlBI,GLQG,A2BUD,KAAV,EtBlBkB,EsBkBC,CPDE,AfjBA,QsBkBK,CAAC,CPDI,GfjBG,CAAC,CsBkBnC,EAAmC,OtBlBD,CAAhC,CeiB6C,AflBhB,CAE7B,KegBmD;ApBRrD,ALlBsB,AHwBd,AkBoBZ,AiBhBM,ATyBH,Ab1CG,ULOI,E2BUE,CAAC,GAAG,EnCJA,CAAC,CQNG,C2BUC,CAAC,C3BVC,CRMD,EAAV,EAAc,CQNG,A2BUb,C3BVc,A2BUA,IAAd,CAAmB,M3BV/B,E2BUY,CAAV;AhCKN,AFaM,ADrBQ,AkBoBd,AQUE,Ab3CI,KeYF,C3BsBE,SAAS,CDrBD,MAAM,GAAG,YAAY,EAArB;AWyCR,AH/CF,AP4BC,ADrBQ,AkBoBb,AiBjBM,APAH,AfhBG,QLME,CG+CQ,CwBrCN,CAAJ,EAAO,EnCLD,EW0CN,CAAmB,AH/CP,GROC,EQPI,GG+CjB,EAAmC,EH/CrC,EAA4B;AGgD9B,AH/CI,AROQ,AkBoBd,AiBjBQ,AtBhBF,MLMA,GG+CG,CAAC,OH/CO,GAAG,EROA,KWwCX,AXxCgB,EWyCf,CHhDoB,AROF,CQPG,IAAD,CAAxB,gBRO4C,CAAC,IAAvB,CAA4B,CAA5B,CAAd;AW0CJ,AHhDJ,AP4BF,AiBDJ,AiBjBQ,ATyBA,AEzBE,EjBsCA,AebF,AEzBE,IjBoCD,AH9CH,CkBmCJ,CzBPM,EyBOK,CfawB,EHhDxB,A2BUA,APAQ,CpBVP,AoBUQ,MAAD,EOAb,APA2B,EpBV7B,CAAoB,AP4BtB,AkClBqB,ElCkBH,GkClBQ,CAAC,IAAN,CAAW,C3BV9B,A2BUmB,C3BVc,A2BU/B,I3BVF,EAAuC,OAAvC;AGiDF,AHhDC,AP4BC,ADtBQ,AUmIZ,AQ9GF,AiBjBQ,ATwBK,AExBT,AfjBE,MZmCA,IUoBI,CiBtCC,CfjBC,EZmCE,CAAC,KUoBK,AX1CF,AabE,GFuDG,AEvDA,CZmCjB,CAAmB,ADtBF,E4BIR,EAAX,C5BJwB,GCsBtB,AYnC2B,Cbaf,AabgB,IbaE,Oabb,CbaqB,AabE,CbaD,AabE,GAAD,EbaI,AabE,CbaD,AabL,CbaI,CAAN,EAAW,CabE,mBbab,CAA9B,EAAgE;AW2CxE,AVpBA,ADtBU,AkBqBhB,AiBjBO,ATwBH,AExBD,AfjBK,MFuDF,AVpBA,EYnCE,CFuDC,EEvDE,CFuDF,AedC,AbzCE,GAAJ,CAAQ,CAAR,CbaQ,CAAC,AadwC,CZoCrC,AYlCZ,CZkCa,CDtBD,CAAC,A0B4BA,C1B5BC,A0B4BA,IzBNhB,CAAuB,ADtBT,A0B4BV,C1B5BkB,CAAR,A0B4BhB,E1B5B2B,ICsBzB,CDtB8B,CAAC,KAAjB,IAA0B,KAAK,CAAC,CAAD,CAA/B,GACA,KAAK,CAAC,CAAD,CAAL,CAAS,KAAT,CAAe,CAAf,EAAkB,CAAC,oBAAoB,CAAC,MAAxC,CADA,GACkD,KAAK,CAAC,CAAD,CAD3D;AW2CR,AHjDJ,AP6BC,ADrBU,AkBoBf,AiBjBK,ATsBQ,WlBjCF,IGiDI,KAAK,AHjDA,KAAK,CAAC,CAAf,GGiDI,CAAgB,AHjDA,KAAK,CAAC,SAAD,CGiDrB,AHjDgB,CGiDiB,AHjDA,KAAjB,GGiDhB,CAAP,CHjDkD,WAAtD,EAAmE;AGkDhE,AHjDD,AEwII,AQ5GV,AQMG,AEvBD,AfjBM,EeiBN,KjBmCqB,CiBnCf,ClB6HS,EkB7HT,IfjBO,GAAP,aH8IE,GAA6B;AFvIjC,AP4BF,ADrBU,AUiIV,AQ5GJ,AiBlBI,ATyBF,AExBE,AfjBG,OAJgB,EsBoBd,AtBhBA,CLMC,CP4BC,A2BjBA,EfjBE,GbaC,AabL,EsBgBL,AtBpBmB,CZsCnB,AYtCE,CAP6B,CLiBd,A2BUA,AtBff,CbYc,EQPI,CAAlB,AROiB,EQPI,AoBWZ,GODa,CAAC,EnCHE,CAAC,amCGX,CnCHE,CAAwB,AmCG3C,CnCHmB,CAAT;AW0CR,AHhDE,AP4BL,ADrBU,AUiIT,AQ5GJ,AiBlBG,MxBsCG,EDwFE,CAAC,KAAK,CFxIC,CGgDC,EAAE,IAJK,EH5CC,IEwIf,CFxIoB,AEyIjB,CFzIkB,CAAtB,EAAyB,qBEyII,CAAC,kBAAD,EAAqB,IAArB,CAD5B,CAAL,EAC8D;ACxF5D,AHhDI,AEyIJ,AQ7GN,ALlCM,MFsDA,AEtDA,ILMI,CEyIC,GG/IG,CLMC,AKNA,CLMC,EGgDE,EAAE,EEtDd,CAAkB,CAAD,CLMR,CAAL,CAAiB,AEyIrB,CG/IwB,EH+IA,EFzIpB,EEyIwB,AG/IE,CAAC,CLMD,CEyIN,EAAxB,CAD4D,CAE5D,CGhJwB,CAAe,CAAf,CAAxB,ELMI;AG2Ca,AH1Cb,APvGmB,AD6GjB,AkBsBZ,AiBlBE,AtBhBG,EsBgBH,GxBgCE,AE9DA,GsB8BI,E3BVE,C2BUF,AtBhBG,GbYC,CaZG,ILMI,CRMD,CAAC,CQNG,GKNX,EAAgB,MbYf,CAAoB,MAApB,EAA4B,IAA5B,MQNwC,CAAC,KAAD,EAAQ,SAAR,CAA1C;AGiDN,AHhDK,ALYH,AHNM,AUmIN,AQ7GN,AiBlBI,AtBhBE,MVkBO,AUlBP,EsBgBE,CAAC,ExBsCG,CDyFA,AG/IA,CAAC,CVkBP,AgCFQ,CxBsCE,ARpCK,EUlBf,CAAY,CbYD,AmCIb,CxBsCiB,CwBtCA,GnCJT,CAAW,EUmII,CG/IrB,CFsDK,AX1CC,CAAgB,AUoIlB,ECzFF,IDyFQ,CAAC,MCzFE,CAAC,ODyFV,CAAsB,ECzFb,EAAa,ADyFtB,EAA4B,eCzFnB,CDwFb,CCxFuD,IAA1C,CADR,GAEH,aAAa,CAAC,UAAD,EAAa,iBAAb,CAFjB;AAGD,ARhCD,AMzBF,ATY6B,AkBuB7B,AiBlBM,AtBhBD,EVwBH,CQmBA,GF5CI,ONyBJ,AgCRW,ChCQC,CyBPC,C5BNc,IAAI,CGa/B,CHbiC,CGaC,EyBPf,EnBlBM,CTYC,CmCKX,C1BhBb,CAAC,AmBiBU,CAAa,QnBjBxB,EAAoB,WAApB,EAAmD,QAAnD,A0BgBE,K1BhBwE;AEyD7E,AHnDO,ALeN,AMpBI,ATUqC,AUqIrC,AQ7GN,AiBlBK,E1BhBC,ONoBJ,CO2HQ,IP3HR,EMpBkB,ATUuB,CGUxB,AMpBE,GAAf,CAAmB,ATUuB,EAAE,EAAE,AUqI3B,CP3HvB,IMpBI,AC+IwB,EDhJgD,CAExE,MC8IA,EAAmC;AFzIlC,ALeG,AMnBJ,ATQsB,AUsIpB,AQ7GR,AQKE,AbxCE,EawCF,MhBwGM,AgBxGA,CvBnBE,AuBmBD,EbxCE,IbUC,EaVR,EawCI,EAAqB,EvBnBnB,AO2Ha,CAAC,EP3HY,EuBmB5B,EAA4C,ChBwG5C,CACI,CAAC,CAAD,CP5HF,CO4H2B,CAAzB,KACI,KAAK,gBAAL,CAAuB,GAAvB,CAA2B,CAA3B,EAA8B,CAA9B,CAFR;ACtFR,ARlCI,AMrBE,ATQK,AUwIJ,AQ/GP,AiBlBI,ATuBA,AbxCD,MFyDG,GRlCG,EgCNE,EnC5B4B,CAsB7B,EGYN,CQkCa,ERlCE,CQmCf,AiBxCgB,CjBwCf,KRnCD,CgCNW,GPCW,CjBwCtB,EAAiC,KAAjC,AiBxCgB,CAAe,CjBwCiB,IAAhD,KAAqE;AACnE,AHrDA,ALkBH,AHZO,AUuIL,AQ/GL,AQKI,Ab/BF,EFiDI,IHrDA,EGqDM,CAAC,EelBF,EAAP,ElBnCW,GAAG,KGqDZ,CAAsB,KAAtB,EAA6B,IAA7B,EAAmC,UAAnC,CHrD0C,CAAC,KAAD,EAAQ,SAAR,CAA1C;AGsDD,AHrDA,ALmBH,AMvBI,ACiJH,AQ/GH,AQKG,CfeH,OFtDY,eAAe,GACjB,CAAC,CAAC,QAAF,GAAa,QAAQ,CAAC,OAAtB,GAAgC,QAAQ,CAAC,aAAT,CAAuB,UAAvB,CADpC,CALwE,CAOxE;ADGH,AE8ID,AQhHF,AXvIA,oC4BqHoC,KAAK,KAAK;AxB0C9C,AHrDC,ACHK,ATOI,AkB0BV,AQvFqB,Mf8Gf,EFxDM,EmBgBF,InBhBQ,CmBgBH,C5BTD,CSPO,EEwDF,GAAG,CAAC,AXjDF,CAAC,C4BSG,GnBhBO,CAAC,IEwDX,AXjDD,CAAP,CWiDyC,AwBzCpB,InCRE,CmCQG,CnCR9B,CWiDY,CXjDmB,ESPpB,A0BewB,C1BfK,EEyD7C,KFzDgB,CAAf;AE0DA,AFzDA,ATOM,AkB0BZ,AXxIA,EIgKM,IAAI,EAAE,AFzDA,MTOA,EWiDP,IXjDa,CAAC,YAAP,CAAoB,GmCQK,KAAK,InCRE,CmCQG,CnCRnC,EAAoC,IAApC;AWmDN,AF1DO,ATQD,AkB0BZ,EPwBM,EF1DO,OE0DE,EAAE,CXlDL,UWgDP,GXhDoB,CAAC,IAAd,CAAmB,IAAnB;AWmDN,AF3DM,ATSD,AkB0BX,AQIA,AnB3IA,EI+JM,GAAG,CF3Dc,AiBuCjB,CfoBK,KF3DL,CATwE,ATepE,CWqDQ,AF1DZ,AiBsCQ,CfoBK,EepBF,CfiBZ,CX/CY,E0B8BI,QAAJ,EAAjB;AfqBM,AXlDO,AkB0Bb,AL5BY,EFoDN,AEpDM,UAAU,EbET,CaFS,GbEI,CAAC,IAAd,GAAqB,OAAO,CAAC,SAAD,CAA5B;AW8CR,ARhCH,AMtBI,ATSK,AkB0BX,AQIM,AbhCF,AN3GJ,CIyJsB,CAAtB,AR/BE,CyBrBE,GnBDM,GiBuCM,CbhCN,EVeE,AMtBI,CNsBH,AH1C0B,CA8B7B,GSVW,CAAf,EAAkB,AiBuClB,AbhCF,EVeQ,CuBiBe,CvBjBC;AACxB,AMtBI,ASmCR,AQIE,AErBC,AfXE,SVeI,AuBiBA,AbhC8C,CsBU7C,OTsBR,CvBjBE,CUfC,EVegB,CUdb,KAAK,CsBSG,EhCKc,CAAC,EgCLV,ShCKA,AgCLX,ChCKiC,AgCLZ,AtBTvB,EADH,CAFiB,CAIlB,yBVaiB,CAAjB;AQsCJ,ARrCI,AMtBI,ASmCR,AQIC,Ab9BG,AN9GJ,MIgKM,GRrCG,OAAL,GAAe,OQqCO,ERrCE,CQsCxB,ARtCyB,CQsCxB,OAAD,EAAmC,CRtCpB,CAAsB,KQsCrC,KAA4D,mBRtC7C,CAAf;AQuCE,ARtCH,AMtBK,ATQE,AUyIR,AQ9GF,AUlK0C,AfwItC,CexIJ,IOoII,IxBuDE,ADqFG,GVzIC,GWoDJ,CAAA,KXpDa,CWoDb,CAAA,ADqFJ,CACI,CCtFA,AXpDiB,EWqDZ,CDoFT,EAEI,ICvFA,AXpDI,EWqDQ,CDsFZ,GAA+B,0BAFnC,EAE6D;ACrFvD,ARtCN,AMvBM,ATQC,AU2IL,AQhHJ,AiBlBG,A5BvHH,IImKQ,QAAQ,CAAC,KAAD,EAA8B;AACpC,AF7DF,ATQD,AU2IH,AQhHJ,AL3BI,MFqDM,EErDF,CbnCK,GWwFG,CAAC,CErDH,CbAD,AaAE,IFqDL,AXrDO,CWsDH,GXtDO,CAAC,CWsDH,AEtDX,CFsDY,GEtDS,GbAZ,EaAiB,CFsDpB,CAAgB,CXtDK,MWsDE,CAAC,AEtDT,GFsDf,CADJ,EAC2D,MEtDb,CFqD9C,KErDoD,CAAC,UAA3D,EAAuE;AFuDlE,AF9DD,ATO6B,AU4IjC,AQhHJ,AiB5JuC,APRrB,AfyIZ,AN9GN,C4BnBA,SPRkB,CAAA,AfyIP,CezIR,UfyIG,aezIG,OAAN,CAAe,CAAA,sBAAA,eAAA,QAAA,CAAA;AnBkIV,ATMK,AU6IT,AQhHJ,AL3BK,QbFyD,CU6IrD,sBAAL;AC1Fc,AFxDV,ATMA,AkB6BR,AUpKc,AfyIX,AN/GH,GI8JM,CAAA,MiBxLQ,CAAA,CAAX,E5BuIU,IAAgB,CAAC,IAAjB,KAA0B,MAA/B,EAAuC,G4BvIjC,CAAA,sBAAA,cAAA,QAAA,CAAA;AjB+LT,AF7DG,ATME,AU4IN,AQ/GJ,AiB1Jc,AtBgIZ,CF2CF,QD8FS,CyBzQK,CAAA,CAAX,MnC6Ha,MAAM,CU4IlB,CAAuB,CV5IF,EU4IrB,CAA2B,CV5IF,CAAC,EU4I1B,EAAiC,GyBzQvB,CAAA,EnC6HJ,CADqC,AU6I3C,CV3IM,CUsIqD,CAM3D,ayB1QU,SAAA,QAAA,CAAA;A1BwHN,ATOE,AU4IN,AQhHJ,AUzKa,ArB8Bb,qBqB9Ba,UAAU,GAAA,UAAA,CAAA,CADtB,+BAAc,aAAd,CACsB,CAAA,EAAV,UAAU,CAAV;AjBoMb,AF7DQ,ATOE,AU4IN,AQhHJ,AiBvJc,I1BoHN,EE6DF,IF7DQ,A0BpHA,C1BoHC,A0BpHD,CAAX,O1BoHK,CAAiB,IE6DD,GACpB,YwBlLU,CAAA,C1BoHN,CAAuC,eAAvC,EAAwD,A0BpHlD,S1BoHN,I0BpHM,QAAA,CAAA;AxBmLV,AF9DI,ATOE,AU4IN,AQhHJ,AX1IA,CIqKK,OAAD,EAAmC,KAAnC,EAA+C,IAA/C,KAAoE;AAClE,ARzCJ,AMrBK,ACmJH,AQhHJ,AiBpJc,ExB+KR,ARzCJ,MQyCU,CAAC,CwB/KC,CAAA,CAAX,GxB+KG,CAAc,CRzCH,CAAC,GQyCO,ARzCR,CQyCS,CRzCC,GQyCF,CAAnB,EAA2B,OAA3B,GwB/KQ,CAAA,mBAAA,SAAA,QAAA,CAAA;AxBgLT,ARzCD,AHfM,AkB6BV,AX3LA,CIkNA,QRrCS,OHfK,EGeV,EHfc,CGeG,AHfF,GGef,YHfU,KAAyB,IAAzB,IAAiC,KAAK,KAAK,aAA/C,EAA8D;AW0DxE,AR1CI,AMtBE,ATOM,AkB6BZ,AiBrKa,Q1BiID,CNsBH,KHfG,EGeR,EgCvJS,ChCuJM,AHfF,GGeK,AMtBI,CNsBH,EMtBM,A0BjIT,GAAA,K1BiIiB,CNsBjC,AMtBkC,G0BjIlB,GAAA,O1BiIS,CAAuB,E0BjIhC,CAAA,CADnB,G1BkI4B,CAAvB,CAzBwE,CA0BxE,yB0BnIS,UAAd,CACmB,CAAA,EAAP,OAAO,CAAP;AhCwJV,AMrBG,ATMM,AU2IR,AQ9GJ,QR8GQ,MV3II,CU2IG,CAAC,IV3IE,CAAC,KU2IX,IAAsB,GV3IlB,CAAoB,CU2IG,SAAL,CAAe,CV3ID,EAAhC,EAAoC,IAApC,KU2IkB,CAA8B,IAA9B,CAA1B,EAA+D;AP1HjE,AMtBI,ATMK,AU2IL,AQ9GN;ATlCM,ACiJD,AQ9GL,AL5BY,EAAA,gBAAgB,GAAA;AJNtB,ATKI,AkB8BV,AL5BI,WAAO,CbFD,IaEM,SbFO,GAAG,AaEf,CAAkB,IbFnB;AACA,AU2IN,AQ7GJ,AL7B8B,MAAA,IH0IpB,AG1IwB,EAAE,CH0IvB,GAAG,CV3ID,KAAL,CAAW,AU2IE,IV3Ib,AU2IM,CV3IU,IU2IM,QAAhB,GAA2B,MAAM,EAAjC,GAAsC,KAAK,IAAI,EAA3D;ADhJE,ATKqB,AU4IvB,AQ7GJ,AL9B6B,IH2IzB,CG3IO,CAAP,CJNO,GCiJD,CDjJK,ACiJJ,CDjJK,ETKW,CSLR,CAAb,EAAgB,ATKS,CSLR,CTKU,ESLP,GCiJtB,CV5IsB,AU4IA,EDjJpB,EAA4B,CAAC,ACiJJ,EDjJzB,EAAiC,KCiJnC,EAAsC,IAAtC,EAA4C;ADhJxC,ATIiC,AU6InC,AQ7GN,AL9BG,UJNW,ITI2B,CSJtB,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,ATGkB,AU8IpB,AQ7GN,AL7BE,IJPM,ECiJF,GDjJO,ACiJJ,CDjJK,ECiJL,CV9IC,EAXqC,CAYrC,ISJF,CAAkB,WAAlB,CAA8B,KAA9B;ANsBN,AMrBM,ATIE,AU6IF,AQ7GR,EffE,EMrBM,WCiJQ,CP5HA,CAAC,CMrBK,CAAC,CCiJ2B,CP5HlC,EAAe,AO4Hf,CAAR,MDjJA,IAA+B,KAAK,CAAC,WAArC;ANsBJ,AMrBG,ACiJA,AQ7GP,GTvE8E,CNwD1E,AMpBE,GC4I0C,CPxHxC,CAAC,QAAL,CAAc,KAAK,SAAL,GAAiB,6BAA/B;AHjBM,AkBiCV,gBlBjCc,IAAI,CAAC,WAAL,KAAqB,IAAzB,EAA+B;AGkBrC,AHjBS,AU6IP,AQ5GN,IfhBI,EO4HE,EP5HE,CAAC,AO4HA,CAAwB,IV7IpB,CU6IJ,EP5HL,AO4H2C,CP5H7B,AHjBW,CAAC,IGiBP,AHjBV,GAAwB,EAAxB,EGiBK,GAAe,6BAA7B;AACD,AMrBG,ATIK,AU6IH,AQ5GR,AX3LA,EEsJM,WTEI,CU+II,KV7IG,GU6IK,GACT,KDlJqB,ACkJmB,CDlJlB,GCkJtB,CADL,KDjJ0B,CAA5B,CArCwE,CAsCxE;ANsBJ,AMrBI,ATGM,AU8IH,AQ7GT,aR6GiD,CV9IrC,EU8IH,IAAyD,KAAzD,EV9IgB,CAAC,IAAd,CAAmB,IAAnB;AACA,AkBiCZ,clBjCY,KAAK;ASHX,ATIK,AU6IF,AQ5GT,QTrCY,KCiJiC,EDjJ1B,GAAG,SCiJb,CAAmD,IAAnD,CDjJ4B,CAAC,ACiJ4B,ODjJ5D,CCiJG;AACF,AQ5GP,ORkGgD;ADvI1C,ATII,AkBkCV,MTtCU,CAAC,CAAC,ITIF,ISJJ,EAAgB,GTIH;ASHX,ATIC,AU6IH,AQ3GN,AL/BY,EAAA,IH0IN,KVlKE,EawBe,GAAA,CbHR,CU6IG,EAAE,IAX4B,wBDtIjB,QAAvB,EAAiC,cAAjC,EAAiD,OAAO,CAAC,UAAzD;AACD,ATIG,AU6IJ,AQ3GN,AL/BI,GJTE,GCmJA,GDjJO,CIOH,MbHI,AU6IE,AG1IA,CbHD,CU6IG,CG1IE,CbHF,CAAC,CAAT,EaGe,WAAL,CAAuC,OAAvD;AVeF,AMrBM,ACoIwC,AQ9FhD,EfjBE,EMrBM,CCoIJ,MDpIW,CAAC,KNqBC,CAAC,GAAD,EAAc,CMrBvB,CAAqB,cAArB,EAAqC,OAAO,CAAC,UAA7C;ANsBJ,AMrBG,ATGG,AU8IP,AQ3GH,ALhCI,GJnD0E,CNkE1E,AMpBE,GNoBC,CAAC,AUfA,MAAM,CAAC,CVeX,CAAa,EHlBA,CAAC,CAAC,AaGX,CVec,EHlBC,EaGG,CAAtB,CbHmC,CAAC,AaGX,EVeZ,EHlBM,CGkBW,AHlBW,OAAtB,CAA8B,MAA9B,EAAsC,CAAC,GAAG,CAA1C,CAAN,MAAwD,CGkBrE,AHlBsE,CAAhE,EAAmE;ASDvE,ATEM,AU+IV,AQ5GF,ALhCM;AVeF,AMnBE,ATEM,AkBmCZ,ALhCK,KAJkB,CAKnB,GVaK,OAAL,GAAe,GAAG,CAAC,OAAnB;AACA,AHjBQ,AkBmCZ,AL/BI,IVaA,GAAG,CAAC,OAAJ,GAAc,KAAK,SAAnB;AACD,AHjBS,AkBmCZ,AL/BI;AJPE,ATIM,AkBmCZ,AL/BI,AN5JJ,EEoJM,MAAM,CAAC,QAAP,CAAiB,CTIN,KAAL,CAAW,IAAX,CAAgB,SSJtB,CAAuC,eAAvC,EAAwD,SAAxD;AEkEC,AR5CL,AMrBI,ATGuB,AkBoC7B,AL/BI,EVaF,IQ4CW,EFjED,ENqBF,CAAC,EMrBM,GNqBP,AMrBU,ATGS,EW8DJ,AR5CA,EHlBQ,CW8DJ,CX9DM,CSHR,CAAC,IEiEA,AX9DA,IW+DxB,KFlEgB,CAAsB,OAAtB,CAAd;AEmEF,AR7CA,AHnBuC,AkBqC3C,SflBS,OHnBkC,KAAK,EGmB5C,AHnB8C,CAAC,EGmBzB,KAAtB;AQ8CA,AR7CD,AMtBG,ATEsB,AUgJhB,AQ1GZ,MTxCU,GCkJS,GDlJH,CAAC,ETEL,EUgJA,GAAe,CDlJjB,CAAiB,YAAjB,IAAiC,KAAK,KAAK,IAA/C,EAAqD;AEoEvD,AFnEI,ATEI,AUgJR,AQ1GJ,ALjCI,ANrJJ,QMqJQ,MbLI,AaKE,CAAC,QbLM,AaKb,KAAoB,SAApB,IAAiC,CAAC,MAAM,CAAC,QAAP,CAAgB,YAAtD,EAAoE;AF6DpE,AR7CF,AMtBM,ATEG,AUgJP,AQ1GJ,ALjCM,ANpIN,EJmJE,IUfI,EVeE,EO4HE,CP5HF,CUfI,CAAC,MH2IM,EG3Ib,CH2IgB,AG3IA,MH2IM,CAAC,IG3IvB,CAA6B,SH2Ib,CAAsB,IAAtB,CAAlB,MG3IE,CACI,MAAM,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,OAApB,CADJ,EACkC,KAAK,SADvC;AF6DD,AR7CD,AMtBI,ATEC,AkBsCT,ALhCK,ANrIL,CIgMM,GFnEE,CIKJ,MViBO,AUdA,IJRQ,AIQJ,CJRK,EEmEf,EAAyC,IAAzC,IFnEG,CEoEE,AFpEuB,IEoEnB,CFpEwB,CAAC,GEoEpB,CR9CI,KAAK,AMtBK,CAAgB,EEoExC,EFpEwB,CEqExB,AFrED,AIQG,EJR6C,AIQZ,MVcjC,CAAP,EAAyC,EMtBsB,CAAC,IEqEzC,CAAC,KFrEpB,EEqEmB,EAAU,iBAAV,EAAuC,IAAvC,CADlB,GAEA,oBAAoB,CAAC,OAAD,EAAU,iBAAV,CATtB;ARtCD,AMtBC,ATEA,AU+IH,AQzGJ,ALhCO,ANrIP,GEyHM,KCqJE,CDjJK,ACiJJ,EGzIG,CVcA,CMtBK,CAAC,CAAC,GCiJD,CAAC,EP3HE,AUdd,CAA+B,CJRzB,CNsBW,CMtBK,INsBA,IO2HpB,CAAyB,MGzI3B,GVcD,AO2HG,AGxIC,CHwIN,EAA0C,GGxI9B,CAAC,GAAP,CAAY,CAAD,IAAO,CAAC,CAAC,UAApB,CADH;AVeD,AMtBE,ATEH,AU+IC,AQzGN,AL/BK,ANtIL,CAAC,IPZiE,Aa+IvD,CbFP,AU6IE,CH9QC,CAAC,GJmJG,AUbA,IHwII,CAAC,QAAV,CP3HA,AInJC,CAAN,EJmJ2B,GInJG,MAAM,CAAC,IJmJhC,aInJ+B,CAAN,GAA4B,EAA1D,CAAD,EAAgE,IAAhE,CAAqE,OAArE;AJoJM,AMtBE,ACiJH,AQzGL,AL/BM,ANrIN,MJkJM,SAAS,CAAC,IAAD,CAAT;AACD,AMtBG,ASwCR,AL/BM;AJRE,ATEJ,AU8IA,AQxGJ,AL/BM,SbPG,AU8IA,EGvIE,IbPI,CAAX,EU8IA,EV9IgB,EU8IE,IAAlB,OV9IA,EAA+B,IaO7B,GAAoC,IAApC;AVaF,AMrBI,ATEF,AkBsCN,AL/BK,MbPC,CAAC,CAAC,EGmBE,KAAK,GAAG,AHnBZ,CAAc,IGmBG,OHnBjB,CAA0B,CAA1B,KGmBF;AMpBI,ATEH,AU6ID,AQvGJ,AL/BG,SHsIM,sBAAL,GAPuB,CAQvB;AP3HA,AMpBI,ATEL,AkBsCH,AXrKO,MAAM,EJiJL,EIjJS,GJiJJ,AIjJO,CAAC,IJiJH,GIjJE,EAAgC,GAAG,MJiJnD,AIjJgB,EJiJQ,GIhJxB,IAAI,8BAAJ,CAAmB,OAAnB,EAA4B,MAA5B,EAAoC,MAApC,EAA4C,kDAA5C,CADG;AJkJD,AMpBE,ASwCR,AL/BE,ANpIF,EMoIE,iBAAiB,GAAA;AVYd,AMpBG,ATrJa,AUmSjB,AQtGJ,AL/BI,IJTI,KC8IC,CGrIC,CJTK,CAAC,YAAR,CAAqB,EISzB,GADe,CAEf,CHoIA,GAA+B,ID9I3B,AC8I+B,ED9IM,CC8IV,EAA/B,CATuB,CAUvB,ED/IgD,CAAC,UAA7C;AACA,AC+IJ,AQvGJ,AL9BI,UJVU,OAAO,GAAG,IAAI,GAAJ,EAAhB;ANoBJ,AMnBI,AC+IJ,AQvGJ,ITxCQ,INmBA,GMnBO,CAAC,GAAR,CAAY,GNmBD,CAAC,KAAD,CAAf,EAAwB,EMnBpB;ANoBF,AMnBE,AC+IJ,AQvGJ,AL/BI,QAAI,EVUE,GUVG,EVUE,KAAK,GUVZ,EVUiB,EUVE,GVUrB,EAA0B,CUVC,CAAC,QAAP,KAAoB,EJTf,OIS5B,CJTI,CISkD,CJThB,OAAlC;ANoBA,AMnBD,ATDP,AkByCA,AL/BM,MbVA,AaUA,MAAM,CVUC,AUVA,CbVC,GAAG,CAAC,GAAD,AaUX,CAAgB,CbVS,EGoBvB,CAAkB,GHpBT,EGoBT,GHpBkD,AaUpD,CAA6B,IAA7B;AVWC,AMnBF,ATDH,AU+IE,AQtGJ,AL/BK,CJ/EL,OTqEQ,AU+IA,KV/IK,AU+IA,GV/IG,GAAG,CAAC,MAAJ,CU+IR,CAAoB,CV/IC,MAAM,CAAC,MAAlC,WU+ImD,CAAC,YAAD,EAAe,IAAf,CAA7C,CAAJ,EAAwE;AP1HvE,AMdL,ATNE,AU+II,AQtGN,AL/BG,KVMC,IHhBK,EGoBE,CO2HC,EV/IE,CGoBC,EO2HE,CV/IC,CAAT,CGoBW,AO2HA,GV/IG,EU+IE,CV/IC,CAAC,KGoBK,AHpBT,CAAU,EU+I3B,CADsE,CAEtE,CVhJiB,MAAqB,MAA1C,YGoBS,EAAqC;AAC1C,AHpBL,AkByCD,AL9BE,ANzIK,CP2HP,KO3Ha,GAAG,EJkJL,CIlJQ,CAAC,OAAD,EAAgC,GAAG,MAAnC,EJkJb,CAA4B,EIjJ9B,GJiJE,CIjJE,iCAAJ,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,K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AAC,sBAAT,EAAH,GAAuC,SAD3D;ANSF,AMPE,AC2KF,AQvIJ,sBTnCU,MADJ,EAEI,eAFJ,EAGI,MAAA,CAAA,MAAA,CAAA;ANKN,AMLO,ASkCX,ITlCW,eAAe,EAAE,oBAAoB,CAAC,SAAD;ANM5C,AMNM,ASmCV,GTnCU,EAAsD,OAAtD,CAHJ,EAf8B,CAoB9B;ANKF,AMJE,ACsKF,AQrIJ,SRqIS,cAAL;APjKA,AMJE,ACsKH,AQrIH;Af3BI,AMLE,ACuKJ,AQtIF;Af3BI,AMLE,ASiCN;Af3BI,AMLE,ASiCN;Af3BI,AMLE,ASiCN;Af3BI,AMLE,ASiCN,Qf5BQ,CAAC,KAAK,CAAC,OAAN,CAAc,KAAK,KAAnB,CAAL,EAAgC;AAC9B,AMLA,ASiCN,Wf5BW,KAAL,GAAa,EAAb;AACA,Ae4BN,Wf5BW,KAAL;AACD,AMNC,ASkCN,Kf1CmD,CAgB/C,AMRM,gBAAJ,EAAsB;ANSxB,AMRI,ASkCR,UTlCc,IAAI,GAAG,cAAM,GAAN,CAAU,eAAV,CAAb;ASmCR;ATlCQ,ASmCR,kBTnCc,MAAN,CAAa,eAAb,EAFoB,CAGpB;ANOJ,AMNI,ASkCR,Uf5BU,SAAS,GAAG,KAAK,KAAvB;AACA,AMNI,ASkCR,Qf5BQ,SAAS,GAAG,CAAhB;AACA,AMNI,ASkCR,Qf5BQ,QAAJ;AMLI,ACsKE,AQpIV,ERoIU,uBAAuB,GAAA;AP/J7B,AOgKA,AQpIJ,Sf5BS,MAAM,IAAX,IAAmB,KAAnB,EAA0B;AACxB,AOgKF,AQpIJ;Af3BM,AMRE,ACwKH,AQpIL,Mf5BM,GOgKI,CDxKI,INQA,GAAG,CMRK,ECwKjB,CDxKoB,ACyKhB,IDzKoB,CNQH,AMRI,CNQH,IMRF,KNQC,CAApB,AOgKD,CPlKyB,AOmKH,CP/JrB,IMVyC,ECwK1C,CAC8B,CAAC,EAAD,EAAK,CAAL,KAAU,oBDzKpB,GACb,IAAI,CAAC,KAAL,CAAW,QADE,GAEb,SAFJ;AAGA,ACuKE,AQrIV,ITlCQ,MCuKM,KAAK,UDvKU,CACjB,GCsKE,CAAoB,CAApB,CAAJ,EAA4B,CDvKT,EACN,eADM,EAC+B,QAD/B,CAArB;ANQF,AMNE,ACsKI,AQrIZ,Uf3BU,IOgKQ,IPhKA,COgKK,GAAG,CPhKH,GMNH,CCsKW,CAAL,CAAd,GPhKN,EAA4B,CMN1B,EAAuB,SAAS,CAAC,UAAjC;ANOA,AMNA,ACsKI,AQrIZ,ITjCQ,INMA,KMNS,CAAC,CCsKC,CPhKH,GAAG,COgKK,CAAL,CAAP,CPhKW,EMNf,CAAsB,KNMX,CAAa,KAAK,IMN7B,GNMW,CAAX;AACA,Ae2BR,Qf3BQ,SAAS,CAAC,IAAV,CAAe,QAAf;AMNA,ACsKI,AQpIZ,YRoIgB,CAAC,KDtKH,ACsKQ,GDtKd,CAAU,SAAV,EAAqB,IAArB,ACsKI,EAA+B;AP/JnC,AMND,ACsKO,AQpId,GT/EoC,CA8C9B,QNKM,GOgKO,MPhKE,KAAK,CAAlB,EAAqB,KOgKf,GAA2B,IAAI,GAAJ,EAA3B;AP/JJ,AMLJ,ACqKO,AQpIb,Uf5BU,QAAQ,CAAC,cAAT,CAAwB,IAAxB;AACD,AMLH,ASiCN,Sf9BQ,MAEO;AACL,AMLJ,ACoKM,AQnIZ,Uf5BU,GO+JO,KP/JC,CAAC,aO+JP,CAAyB,CP/J3B,CAAyB,CO+JvB,CAA6B,CAA7B,EAAgC,IP/JA,CAAC,AO+JjC,SP/J0C,GAAG,CAAb,CAAlC;AACD,AMLH,ACoKK,AQnIX;Af3BO,AMLD,ACoKG,AQnIT,KRyHK;AAWF,AQnIH;Af5BM,AOiKJ,AQpIF,Mf7BM,QAAQ,CAAC,QAAT,CAAkB,IAAlB;AACA,AMNA,ASmCN,Mf7BM,AMNI,CAAC,ONMG,CAAC,GMNL,GNMJ,CMNoB,YAApB,EAAkC;ANOlC,AMNE,ASmCR,ITnCQ,ENMF,IMNQ,CAAC,INMA,IMNP,CAAiB,YAAjB,CAA+B,SAAwB,CAAC,IAAxD;ANOH,AMNE,ASmCP;ATlCK,ASmCL,CT7FO;ANiEH,AO+JM,AQlIV,ERkIU,MP/JF,SAAS,GAAG,MO+Jc,GP/JL,AO+JK,CP/JJ,MAA1B,EAAkC;AAChC,AO+JF,AQlIJ;Af5BM,AO+JF,AQlIJ,Mf7BM,SAAS,CAAC,MAAV,GAAmB,SAAnB;AACA,AO+JF,AQlIJ,Wf7BW,KAAL,CAAW,QAAQ,IAAI,QAAQ,CAAC,OAAhC;AACD,AO+JD,AQlIJ,SRkIS,mBAAL,CAA0B,OAA1B,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":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","import { LitElement, html, customElement, css, property } from 'lit-element';\n\n@customElement('section-title')\nexport class SectionTitle extends LitElement {\n  @property({type: String}) title = '';\n  @property({type: String}) subtitle = '';\n  @property({type: String}) icon = '';\n  @property({type: String, reflect: true}) size = 'large';\n\n  static get styles() {\n      return css`\n          :host {\n            --img-size: 72px;\n            --img-pad: 32px;\n            --name-hpad: 16px;\n            --name-font-size: 1.8rem;\n            --descriptor-hpad: 0px;\n            --descriptor-font-size: .8rem;\n            width: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n          }\n          .text {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n          }\n          .img-wrapper {\n            width: calc(var(--img-size) + 2*var(--img-pad));\n            height: calc(var(--img-size) + 2*var(--img-pad));\n            background: var(--theme-gradient);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n          .img-wrapper img {\n            width: var(--img-size);\n            height: var(--img-size);\n            filter: invert();\n            opacity: 0.45;\n          }\n          h1 {\n            width: 100%;\n            text-align: center;\n            color: #444;\n            font-weight: 100;\n            font-family: 'Montserrat', sans-serif;\n            margin: var(--name-hpad) 0px;\n            font-size: var(--name-font-size);\n          }\n          p {\n            width: 100%;\n            text-align: center;\n            color: #999;\n            font-family: 'Montserrat', sans-serif;\n            margin: var(--descriptor-hpad) 0px;\n            font-size: var(--descriptor-font-size);\n          }\n\n          :host([size='small']) {\n            --img-size: 32px;\n            --img-pad: 12px;\n            --name-hpad: 4px;\n            --name-font-size: 1rem;\n            --descriptor-hpad: 0px;\n            --descriptor-font-size: .7rem;\n            flex-direction: row;\n            justify-content: flex-start;\n          }\n          :host([size='small']) .text {\n            display: flex;\n            justify-content: flex-start;\n            align-items: center;\n            flex-direction: column;\n          }\n          :host([size='small']) .img-wrapper {\n            margin-right: 16px;\n          }\n          :host([size='small']) p {\n            text-align: left;\n          }\n          :host([size='small']) h1 {\n            margin-top: 0;\n          }\n      `;\n  }\n\n  render() {\n    return html`\n      <div class=\"img-wrapper\">\n          <img src=\"${this.icon}\"/>\n      </div>\n      <div class=\"text\">\n        <h1>${this.title}</h1>\n        <p>${this.subtitle}</p>\n      </div>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","export function getNavigateEvent(target:string) {\n    return new CustomEvent('navigate', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          target\n        }\n    });\n}","import { LitElement, html, customElement, property, css } from 'lit-element';\nimport { getNavigateEvent } from '../../util'\n@customElement('app-link')\nexport class AppLink extends LitElement {\n  @property({type: String}) target = '/';\n  @property({type: String}) tag:'a'|'div' = 'a';\n  static get styles() {\n    // Theme definition\n    return css`\n      :host {\n        cursor: pointer;\n      }\n    `;\n  }\n\n  private navigate() {\n    this.dispatchEvent(getNavigateEvent(this.target));\n  }\n\n  render() {\n    return this.tag === 'a'\n        ? html`<a @click=${this.navigate}><slot></slot></a>`\n        : html`<div @click=${this.navigate}><slot></slot></div>`;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import '../ui/app-link/app-link';\n\nimport { LitElement, html, customElement, css, property } from 'lit-element';\n\n@customElement('error-page')\nexport class ErrorPage extends LitElement {\n  @property({type: String}) message = 'Uh oh! Something went wrong';\n\n  static get styles() {\n      return css`\n        .cover {\n          width: 100%;\n          height: calc(100vh - 2*var(--page-hpad) - var(--navbar-height) - 1px);\n          background: #FAFAFA;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n        }\n        p {\n          font-family: 'Montserrat', sans-serif;\n          font-size: 3rem;\n          color: var(--theme-primary);\n          padding: 0;\n          margin: 2rem;\n          text-align: center;\n        }\n        button {\n          padding: .5rem 1rem;\n          background: white;\n          border-radius: 5px;\n          color: var(--theme-primary);\n          font-family: 'Montserrat', sans-serif;\n          font-size: 1rem;\n          border: 2px solid var(--theme-primary);\n          cursor: pointer;\n        }\n        button:hover {\n          color: white;\n          background: var(--theme-primary);\n        }\n        button:focus {\n          outline: none;\n        }\n      `;\n  }\n  render() {\n    return html`\n      <div class=\"cover\">\n        <p> ${this.message} </p>\n        <app-link target='/'>\n          <button>Go Home</button>\n        </app-link>\n      </div>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.7.3\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support (#5572)\n        // since Safari 10.1 shipped with fetch, we can use that to detect it\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback retuns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = req.onblocked = function (err) {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(err);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var bytesToUuid = require('./bytesToUuid');\n\nfunction uuidToBytes(uuid) {\n  // Note: We assume we're being passed a valid uuid string\n  var bytes = [];\n  uuid.replace(/[a-fA-F0-9]{2}/g, function(hex) {\n    bytes.push(parseInt(hex, 16));\n  });\n\n  return bytes;\n}\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n  var bytes = new Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    bytes[i] = str.charCodeAt(i);\n  }\n  return bytes;\n}\n\nmodule.exports = function(name, version, hashfunc) {\n  var generateUUID = function(value, namespace, buf, offset) {\n    var off = buf && offset || 0;\n\n    if (typeof(value) == 'string') value = stringToBytes(value);\n    if (typeof(namespace) == 'string') namespace = uuidToBytes(namespace);\n\n    if (!Array.isArray(value)) throw TypeError('value must be an array of bytes');\n    if (!Array.isArray(namespace) || namespace.length !== 16) throw TypeError('namespace must be uuid string or an Array of 16 byte values');\n\n    // Per 4.3\n    var bytes = hashfunc(namespace.concat(value));\n    bytes[6] = (bytes[6] & 0x0f) | version;\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n\n    if (buf) {\n      for (var idx = 0; idx < 16; ++idx) {\n        buf[off+idx] = bytes[idx];\n      }\n    }\n\n    return buf || bytesToUuid(bytes);\n  };\n\n  // Function#name is not settable on some platforms (#270)\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n\n  // Pre-defined namespaces, per Appendix C\n  generateUUID.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\n  generateUUID.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n\n  return generateUUID;\n};\n","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\n'use strict';\n\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0: return (x & y) ^ (~x & z);\n    case 1: return x ^ y ^ z;\n    case 2: return (x & y) ^ (x & z) ^ (y & z);\n    case 3: return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return (x << n) | (x>>> (32 - n));\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof(bytes) == 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n    bytes = new Array(msg.length);\n    for (var i = 0; i < msg.length; i++) bytes[i] = msg.charCodeAt(i);\n  }\n\n  bytes.push(0x80);\n\n  var l = bytes.length/4 + 2;\n  var N = Math.ceil(l/16);\n  var M = new Array(N);\n\n  for (var i=0; i<N; i++) {\n    M[i] = new Array(16);\n    for (var j=0; j<16; j++) {\n      M[i][j] =\n        bytes[i * 64 + j * 4] << 24 |\n        bytes[i * 64 + j * 4 + 1] << 16 |\n        bytes[i * 64 + j * 4 + 2] << 8 |\n        bytes[i * 64 + j * 4 + 3];\n    }\n  }\n\n  M[N - 1][14] = ((bytes.length - 1) * 8) /\n    Math.pow(2, 32); M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = ((bytes.length - 1) * 8) & 0xffffffff;\n\n  for (var i=0; i<N; i++) {\n    var W = new Array(80);\n\n    for (var t=0; t<16; t++) W[t] = M[i][t];\n    for (var t=16; t<80; t++) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var t=0; t<80; t++) {\n      var s = Math.floor(t/20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = (H[0] + a) >>> 0;\n    H[1] = (H[1] + b) >>> 0;\n    H[2] = (H[2] + c) >>> 0;\n    H[3] = (H[3] + d) >>> 0;\n    H[4] = (H[4] + e) >>> 0;\n  }\n\n  return [\n    H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff,\n    H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff,\n    H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff,\n    H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff,\n    H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff\n  ];\n}\n\nmodule.exports = sha1;\n","var v35 = require('./lib/v35.js');\nvar sha1 = require('./lib/sha1');\nmodule.exports = v35('v5', 0x50, sha1);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst v4_1 = __importDefault(require(\"uuid/v4\"));\nconst v5_1 = __importDefault(require(\"uuid/v5\"));\nconst uuidv4 = function () {\n    return v4_1.default();\n};\nexports.uuid = uuidv4;\nconst regex = {\n    v4: /^(?:[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12})|(?:0{8}-0{4}-0{4}-0{4}-0{12})$/u,\n    v5: /^(?:[a-f0-9]{8}-[a-f0-9]{4}-5[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12})|(?:0{8}-0{4}-0{4}-0{4}-0{12})$/u\n};\nexports.regex = regex;\nconst isUuid = function (value) {\n    return regex.v4.test(value) || regex.v5.test(value);\n};\nexports.isUuid = isUuid;\nconst empty = function () {\n    return '00000000-0000-0000-0000-000000000000';\n};\nexports.empty = empty;\nconst fromString = function (text) {\n    const namespace = 'bb5d0ffa-9a4c-4d7c-8fc2-0a7d2220ba45';\n    const uuidFromString = v5_1.default(text, namespace);\n    return uuidFromString;\n};\nexports.fromString = fromString;\n","import icons from 'assets/icons/*.svg';\nimport * as localForage from \"localforage\";\nimport { uuid } from 'uuidv4';\n\n// TODO(zain): update to new topic syste,\nexport type Topic =\n  | \"spells\"\n  | \"equipment\"\n  | \"combat\"\n  | \"magic\"\n  | \"features\"\n  | \"movement\"\n  | \"resting\"\n  | \"enviornment\"\n  | \"death\"\n  | \"effects\";\n\nexport interface Table {\n  name: Topic;\n  headings: string[];\n  rows: SearchResult[];\n}\n\nexport interface SearchOptions {\n  include?: Topic[];\n  exclude?: Topic[];\n}\n\nexport interface SearchResult {\n  cols: string[];\n  matches: Match[];\n}\n\nexport interface Match {\n  field: number;\n  start: number;\n  end: number;\n}\n\nexport interface CharacterSheetDescriptor {\n  id: string|null;\n  name: string;\n  race: string;\n  class: string;\n  level: number;\n}\n\nexport class CharacterSheetData {\n  id: string = '0';\n  name: string = '';\n  race: string = '';\n  class: string = '';\n  level: number = 1;\n\n  constructor (data:CharacterSheetDescriptor) {\n    if (!data.id) {\n      throw Error('Provided Id must be Non-null');\n    }\n    this.id = data.id;\n    this.name = data.name;\n    this.race = data.race;\n    this.class = data.class;\n    this.level = data.level;\n  }\n\n  getDescriptor() {\n    return `Level ${this.level} ${this.race} ${this.class}`;\n  }\n\n  getIcon() {\n    return icons[this.class];\n  }\n}\n\nexport enum DatabaseState {\n  LOADING,\n  READY  \n}\n\ntype resolver = (value?: void | PromiseLike<void> | undefined) => void;\n\nexport class Database {\n  /**\n   * A promise that resolves when the database is finished initilisating\n   */\n  ready!:Promise<void>;\n  \n  /**\n   * The state of the database\n   */\n  state:DatabaseState = DatabaseState.LOADING;\n\n  /**\n   * A function that resolves the ready promise, should be called when\n   * the database has finished init.\n   */\n  private readyPromiseResolver!:resolver;\n  \n  constructor() {\n    this.ready = new Promise((resolve) => {\n      this.readyPromiseResolver = resolve;\n    })\n    this.initialize()\n      .then(() => {\n        this.readyPromiseResolver();\n        this.state = DatabaseState.READY;\n      })\n  }\n\n  async initialize() {\n    const characters = await localForage.getItem('meta:characters');\n    if (!characters) {\n      await localForage.setItem('meta:characters', []);\n    }\n  }\n\n  /** Convience Method for extracting a character from localForage */\n  async fetchCharacter(id:string):Promise<CharacterSheetData> {\n    const data = await localForage.getItem(`character:${id}`);\n    const descriptor = data as CharacterSheetDescriptor;\n    if (!descriptor) return null;\n    return new CharacterSheetData(descriptor);\n  }\n\n  /** Convience Method for adding metadata */\n  async appendToMeta(key:string, value:string) {\n    const array = await localForage\n      .getItem(`meta:${key}`)as Array<string>;\n    await localForage.setItem(`meta:${key}`, [...array, value]);\n  }\n\n  /** Get's all characters for the current user. */\n  async getAllCharacters():Promise<CharacterSheetData[]> {\n    const allCharacterIds = await localForage\n      .getItem(`meta:characters`) as Array<string>;\n\n    const allCharacters = [];\n    for (const id of allCharacterIds) {\n      allCharacters.push(await this.fetchCharacter(id));\n    }\n    return allCharacters;\n  }\n\n  /** Get's a character sheet by id. */\n  async getCharacterSheet(id: string):Promise<CharacterSheetData|null> {\n    return await this.fetchCharacter(id);\n  }\n\n  /** Create a new character. */\n  async createCharacterSheet(descriptor:CharacterSheetDescriptor) {\n    if (descriptor.id === null) {\n      descriptor.id = uuid();\n    }\n    this.appendToMeta('characters', descriptor.id);\n    await localForage.setItem(`character:${descriptor.id}`, descriptor);\n    return descriptor.id;\n  }\n\n  /** Clear the database. */\n  async clear() {\n    await localForage.clear();\n  }\n  \n  /**\n   * Takes a string and searches the database for all enteries which \n   * match. Can take a optional secondary options argument which \n   * specifies a more narrow search query.\n   */\n  search(searchText: string, options?: SearchOptions):Table[] {\n    //TODO(zain): this\n    return [];\n  }\n\n}\n\nconst database = new Database();\n\nexport function getDatabase():Database {\n  return database;\n}","import '../ui/section-title/section-title';\nimport '../error-page/error-page';\n\nimport { LitElement, html, customElement, css, property, query } from 'lit-element';\n\nimport { CharacterSheetData, getDatabase } from '../database';\n\n@customElement('character-sheet')\nexport class CharacterSheet extends LitElement {\n  @property() data!:CharacterSheetData;\n  @property() id!:string;\n  @property() state:string = 'loading';\n  @query('.header .img-wrapper') imgWrapper!:HTMLDivElement;\n  @query('#character-img') characterImg!:HTMLImageElement;\n  @query('.character-name') characterName!:HTMLHeadingElement;\n\n  static get styles() {\n      return css`\n\n      `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    getDatabase().getCharacterSheet(this.id).then(sheet => {\n      if (!sheet) {\n        this.state = 'error';\n        return;\n      }\n      this.data = sheet as CharacterSheetData;\n      this.state = 'ready';\n    })\n  }\n  render() {\n    if (this.state === 'loading') {\n      return html`<p>loading innit</p>`;\n    } else if (this.state === 'error') {\n      return html`<error-page message='Oh No! There is no character with that id'></error-page>`;\n    }\n    //TODO(zain): if unknown id show a error page.\n\n    return html`\n        <section-title\n          title=${this.data.name}\n          subtitle=${this.data.getDescriptor()}\n          icon=${this.data.getIcon()}\n        ></section-title>\n    `;\n  }\n}","import { LitElement, html, customElement, css, query, property } from 'lit-element';\nimport { Database, Topic, Table } from '../database';\nimport icons from '../assets/icons/*.svg';\n\nconst DEFAULT_HELP_MSG = html`\n  <p>\n    Search for anything! You can use hashtags like\n    <span> #spell #item #effect </span>\n    to help narrow the results.\n  </p>\n`\nconst TOPIC_REGEX = /#[\\w\\>]+/;\n\n@customElement('dm-handbook')\nexport class DmHandbook extends LitElement {\n  @query('input') searchInput!:HTMLInputElement; \n  \n  @property() searchHelp = DEFAULT_HELP_MSG;\n\n  private database = new Database();\n\n  static get styles() {\n    return css`\n      :host {\n        --page-vpad: 16px;\n        --page-hpad: 48px;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        flex-direction: column;\n      }\n      h1 {\n        width: 100%;\n        margin: 0;\n        text-align: center;\n        color: #444;\n        font-weight: 100;\n        font-family: 'Montserrat', sans-serif;\n      }\n      p {\n        width: 100%;\n        margin: 0;\n        margin-top: 1rem;\n        text-align: center;\n        color: #777;\n        font-weight: 100;\n        font-family: 'Montserrat', sans-serif;\n      }\n      .search {\n        margin-top: 2rem;\n        width: calc(700px - 1.5rem);\n        padding: 0 1rem 0 0.5rem;\n        height: 2rem;\n        background: #ebebeb;\n        border-radius: 1rem;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n      }\n      .search img {\n        opacity: 0.5;\n      }\n      .search input {\n        flex-grow: 1;\n        padding: 0 0.5rem;\n        font-size: 1.3rem;\n        background: none;\n        border: none;\n        color: #555;\n      }\n      .search input:focus {\n        outline: none;\n      }\n      .results {\n        margin-top: 4rem;\n        width: 1000px;\n        display: flex;\n        justify-content: center;\n      }\n      .no-results{\n        width: 60%;\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: #bbb;\n        font-family: 'Montserrat', sans-serif;\n      }\n      .help > p {\n        font-size: .8rem;\n        color: #BBB;\n      }\n      .help > p > span {\n        color: var(--theme-primary);\n      }\n    `;\n  }\n\n  firstUpdated() {\n    this.searchInput!.addEventListener('input', () => {\n      this.updateSearch(this.searchInput!.value);\n    });\n  }\n\n  private updateSearch(searchText: string) {\n    if (searchText === '') {\n      this.searchHelp = DEFAULT_HELP_MSG;\n      return;\n    }\n\n    const tables = [];\n    let match;\n    while (match = TOPIC_REGEX.exec(searchText)) {\n      searchText = searchText.replace(match[0], '');\n      tables.push(match[0]);\n    }\n\n    let topics = 'all topics'\n    if (tables.length === 1) {\n      topics = `the ${tables[0]} topic`;\n    } else if (tables.length > 1) {\n      const last = tables.pop();\n      const list = tables.join(', ');\n      topics = `the ${list} and ${last} topics`;\n    }\n    \n    searchText = searchText.replace(/(^\\s+)|(\\s+$)/,'');\n    this.searchHelp = html`\n      <p>\n        Searching for '${searchText}' over <span>${topics}<span>\n      </p>\n    `\n  }\n\n  private renderTable(result: Table) {\n    return html``;\n  }\n\n  render() {\n    return html`\n      <section-title\n        title='Dungeon Master Handbook'\n        subtitle='A quick way to search up rules,\n      spells and equipment'\n        icon=${icons['book']}\n      ></section-title>\n      <div class='search'>\n        <img src=\"${icons['search']}\" />\n        <input maxlength=\"100\"/>\n      </div>\n      <div class='help'>\n        ${this.searchHelp}\n      </div>\n      <div class='results'>\n        \n      </div>\n  `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import { LitElement, html, customElement, css } from 'lit-element';\n\n@customElement('user-profile')\nexport class UserProfile extends LitElement {\n\n  static get styles() {\n      return css`\n\n      `;\n  }\n\n  render() {\n    return html`\n      <p> hello sir i am a user profile page :3 </p>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import '../section-title/section-title';\nimport '../app-link/app-link';\n\nimport { LitElement, html, customElement, css } from 'lit-element';\nimport { CharacterSheetData } from '../../database';\n\n@customElement('character-preview')\nexport class CharacterPreview extends LitElement {\n  private characterData!:CharacterSheetData;\n\n  constructor(data:CharacterSheetData) {\n    super();\n    this.characterData = data;\n  }\n\n  static get styles() {\n      return css`\n        .card {\n          width: 300px;\n          height: 56px;\n          padding: 10px;\n          background: white;\n          border: 2px solid #EBEBEB;\n          border-radius: 10px;\n          font-family: 'Montserrat', sans-serif;\n          cursor: pointer;\n        }\n        small {\n          color: #777;\n          font-size: .7rem;\n        }\n        h1 {\n          color: #444;\n          margin: 0;\n          font-size: 1.1rem;\n        }\n      `;\n  }\n\n  render() {\n    return html`\n      <app-link target=${`/character/${this.characterData.id}`}>\n        <div class=\"card\">\n          <section-title\n            title=${this.characterData.name}\n            subtitle=${this.characterData.getDescriptor()}\n            icon=${this.characterData.getIcon()}\n            size=\"small\"\n          >\n          </section-title>\n        </div>\n      </app-link>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import { CharacterPreview } from '../ui/character-preview/character-preview';\nimport { LitElement, html, customElement, css, property } from 'lit-element';\nimport { CharacterSheetData, getDatabase, CharacterSheetDescriptor } from '../database';\n\nimport icons from '../assets/icons/*.svg';\nimport { getNavigateEvent } from '../util';\n\n@customElement('app-home')\nexport class AppHome extends LitElement {\n  \n  @property() userCharacters:CharacterSheetData[]|null = null;\n  @property() ready:boolean = false;\n\n  private database = getDatabase();\n\n  static get styles() {\n      return css`\n        :host {\n          width: 100%;\n        }\n        h1 {\n          font-family: 'Montserrat', sans-serif;\n          font-size: 1.5rem;\n          font-weight: 100;\n          color: #444;\n          opacity: .8;\n        }\n        hr {\n          height: 3px;\n          background: #EBEBEB;\n          outline: none;\n          border: none;\n        }\n        .grid-view {\n          width: 100%;\n          padding-top: 32px;\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(330px, 350px));\n          grid-row-gap: 16px;\n        }\n        .new-character-sheet {\n          width: 300px;\n          height: 56px;\n          padding: 10px;\n          border-radius: 10px;\n          border: 2px solid #EBEBEB;\n          background: #FFF;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          opacity: .5;\n          cursor: pointer;\n        }\n        .new-character-sheet:hover {\n          opacity: 1;\n        }\n        .new-character-sheet img {\n          width: 38px;\n          opacity: .2;\n        }\n      `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.database.getAllCharacters().then(characters => {\n      this.userCharacters = characters;\n      this.ready = true;\n    });\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.ready = false;\n    this.userCharacters = null;\n  }\n\n  renderPreview(data: CharacterSheetData) {\n    return new CharacterPreview(data);\n  }\n\n  newCharacter() {\n    const defaultDescriptor:CharacterSheetDescriptor = {\n      id: null, // Auto generate\n      name: 'New Character',\n      level: 1,\n      class: 'fighter',\n      race: 'human'\n    }\n    this.ready = false;\n\n    this.database.createCharacterSheet(defaultDescriptor).then(id => {\n      this.dispatchEvent(getNavigateEvent(`/character/${id}`));\n    })\n  }\n\n  render() {\n    if (!this.ready) {\n      return html`loading innit`;\n    }\n\n    return html`\n      <h1> Character Sheets </h1>\n      <hr>\n      <div class=\"grid-view\">\n        ${this.userCharacters!.map(this.renderPreview)}\n        <div class=\"new-character-sheet\" @click=${this.newCharacter}>\n          <img src=\"${icons['plus']}\"/>\n        </div>\n      </div>\n    `;\n  }\n}","import { LitElement, html, customElement, css } from 'lit-element';\nimport icons from '../../assets/icons/*.svg';\n\n@customElement('app-nav')\nexport class AppNav extends LitElement {\n\n  static get styles() {\n      return css`\n          :host {\n            width: calc(100% - 30px);\n            padding: 0 15px;\n            height: var(--navbar-height);\n            border-bottom: 2px solid #EBEBEB;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            background: white;\n          }\n          .left {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: flex-start;\n          }\n          .right {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n          }\n          .profile {\n            width: 30px;\n            height: 30px;\n            background: var(--theme-primary);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n          .profile img {\n            height: 20px;\n            filter: invert();\n            opacity: .65;\n            margin-bottom: 2px;\n          }\n          app-link {\n            font-family: 'Montserrat', sans-serif;\n            font-weight: bold;\n            color: var(--theme-primary);\n            margin: 0 .5rem;\n          }\n      `;\n  }\n\n  render() {\n    return html`\n      <div class=\"left\">\n        <app-link target='/'>Home</app-link>\n        <app-link target='/handbook'>Handbook</app-link>\n      </div>\n      <div class=\"right\">\n        <app-link target='/profile'>\n          <div class=\"profile\">\n            <img src=\"${icons['account']}\"/>\n          </div>\n        </app-link>\n      </div>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateInstance} from '../lib/template-instance.js';\nimport {Template} from '../lib/template.js';\nimport {directive, NodePart, Part, reparentNodes, TemplateResult} from '../lit-html.js';\n\ntype CachedTemplate = {\n  readonly instance: TemplateInstance,\n  readonly nodes: DocumentFragment\n};\nconst templateCaches =\n    new WeakMap<NodePart, WeakMap<Template, CachedTemplate>>();\n\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive((value: unknown) => (part: Part) => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('cache can only be used in text bindings');\n  }\n\n  let templateCache = templateCaches.get(part);\n\n  if (templateCache === undefined) {\n    templateCache = new WeakMap();\n    templateCaches.set(part, templateCache);\n  }\n\n  const previousValue = part.value;\n\n  // First, can we update the current TemplateInstance, or do we need to move\n  // the current nodes into the cache?\n  if (previousValue instanceof TemplateInstance) {\n    if (value instanceof TemplateResult &&\n        previousValue.template === part.options.templateFactory(value)) {\n      // Same Template, just trigger an update of the TemplateInstance\n      part.setValue(value);\n      return;\n    } else {\n      // Not the same Template, move the nodes from the DOM into the cache.\n      let cachedTemplate = templateCache.get(previousValue.template);\n      if (cachedTemplate === undefined) {\n        cachedTemplate = {\n          instance: previousValue,\n          nodes: document.createDocumentFragment(),\n        };\n        templateCache.set(previousValue.template, cachedTemplate);\n      }\n      reparentNodes(\n          cachedTemplate.nodes, part.startNode.nextSibling, part.endNode);\n    }\n  }\n\n  // Next, can we reuse nodes from the cache?\n  if (value instanceof TemplateResult) {\n    const template = part.options.templateFactory(value);\n    const cachedTemplate = templateCache.get(template);\n    if (cachedTemplate !== undefined) {\n      // Move nodes out of cache\n      part.setValue(cachedTemplate.nodes);\n      part.commit();\n      // Set the Part value to the TemplateInstance so it'll update it.\n      part.value = cachedTemplate.instance;\n    }\n  }\n  part.setValue(value);\n});\n","export const UNKNOWN_ROUTE_MSG = 'Sorry! There isn\\'t anything at this URL';","// Imports with side effects.\nimport './character-sheet/character-sheet';\nimport './dm-handbook/dm-handbook';\nimport './error-page/error-page';\nimport './user-profile/user-profile';\nimport './app-home/app-home';\nimport './ui/app-nav/app-nav';\n\n// Named imports.\nimport { LitElement, html, customElement, css, TemplateResult, property } from 'lit-element';\nimport { cache } from 'lit-html/directives/cache';\nimport { UNKNOWN_ROUTE_MSG } from './ui/messages';\nimport { nothing } from 'lit-html';\nimport { Database, getDatabase, DatabaseState } from './database';\n\ntype RouteRenderer = (match:RegExpExecArray) => TemplateResult;\n\ninterface Route {\n  pattern: RegExp;\n  view: RouteRenderer;\n}\n\n@customElement('app-view')\nexport class AppView extends LitElement {\n  /**\n   * The theme of the application, this is used to generate a \n   * series of css variables which the rest of the application uses.\n   */\n  @property() private theme = 'peach';\n  /**\n   * The view currently shown, all views are defined in\n   * the routes getter function.\n   */\n  @property() private shownView:TemplateResult|{} = nothing;\n\n  /**\n   * If the app is ready or not.\n   */\n  @property() private ready:Boolean = false;\n  \n  /**\n   * The database.\n   */\n  private database:Database = getDatabase();\n\n\n  /**\n   * All routes that the app can handle, this is a array of objects\n   * which define a view function that returns a html template and a \n   * route pattern which defines what url triggers the view to be\n   * visible.\n   */\n  static get routes():Route[] {\n    return [\n      {\n        pattern: /^\\/$/,\n        view: () => html`<app-home></app-home>`\n      },\n      {\n        pattern: /^\\/character\\/(\\w\\d-+)$/,\n        view: (match) => html`\n          <character-sheet id=\"${match[1]}\"></character-sheet>`\n      },\n      {\n        pattern: /^\\/handbook$/,\n        view: () => html`<dm-handbook></dm-handbook>`\n      },\n      {\n        pattern: /^\\/profile$/,\n        view: () => html`<user-profile></user-profile>`\n      }\n   ];\n  }\n  \n  /**\n   * The default error page which we show if the route can't be resolved\n   */\n  static unknownRouteView() {\n    return html`<error-page message=${UNKNOWN_ROUTE_MSG}></error-page>`\n  }\n\n  static get styles() {\n    // Theme definition\n    return css`\n      :host {\n        --peach-theme-gradient: linear-gradient(110deg, #f2709c, #ff9472);\n        --peach-theme-primary: #f2709c;\n        --peach-theme-secondary: #ff9472;\n        --fresh-theme-gradient: linear-gradient(110deg, #67b26f, #4ca2cd);\n        --fresh-theme-primary: #67b26f;\n        --fresh-theme-secondary: #4ca2cd;\n        --navbar-height: 50px;\n        --brand-gradient: linear-gradient(110deg, #B24592, #F15F79);\n        --page-vpad: 16px;\n        --page-hpad: 48px;\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n      }\n      main {\n        width: calc(100% - 2 * var(--page-hpad));\n        padding: var(--page-vpad) var(--page-hpad);\n        min-height: calc(100% - 2 * var(--page-hpad) - var(--navbar-height) - 1px);\n        padding: var(--page-vpad) var(--page-hpad);\n        background: #fafafa;\n      }\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('navigate', ((e:CustomEvent) => {\n      history.pushState({}, \"\", e.detail.target);\n      this.changeRoute(e.detail.target);\n    }) as EventListener);\n\n    window.onpopstate = () => {\n      this.changeRoute(document.location.pathname);\n    };\n\n    this.ready = this.database.state === DatabaseState.READY;\n    if (!this.ready) {\n      this.database.ready.then(() => {\n        this.ready = true;\n        this.changeRoute(document.location.pathname);\n      });\n    }\n  }\n\n  changeRoute(location:string) {\n    for(const route of AppView.routes) {\n      const m = route.pattern.exec(location);\n      if (m) {\n        // TODO(zain): Make sure user is loged in.\n        this.shownView = route.view(m);\n        return;\n      }\n    }\n    this.shownView = AppView.unknownRouteView();\n  }\n\n  render() {\n    if (!this.ready) {\n      return html`<p>Doing a cheeky load innit</p>`;\n    }\n\n    return html`\n      <style>\n        :host {\n          --theme-gradient: var(--${this.theme}-theme-gradient);\n          --theme-primary: var(--${this.theme}-theme-primary);\n          --theme-secondary: var(--${this.theme}-theme-secondary);\n        }\n      </style>\n      <app-nav></app-nav>\n      <main>\n        ${cache(this.shownView)}\n      </main>\n    `;\n  }\n}","import './app-view.ts';"]}