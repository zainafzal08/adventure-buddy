{"version":3,"sources":["../src/lib/directive.ts","../src/lib/dom.ts","../src/lib/part.ts","../src/lib/template.ts","../src/lib/template-instance.ts","../src/lib/template-result.ts","../src/lib/parts.ts","../src/lib/default-template-processor.ts","../src/lib/template-factory.ts","../src/lib/render.ts","src/lit-html.ts","../src/lib/modify-template.ts","../src/lib/shady-render.ts","../src/lib/updating-element.ts","../src/lib/decorators.ts","../src/lib/css-tag.ts","src/lit-element.ts","src/ui/section-title/section-title.ts","src/character-sheet/character-sheet.ts","src/database.ts","src/dm-handbook/dm-handbook.ts","src/ui/app-link/app-link.ts","src/error-page/error-page.ts","src/user-profile/user-profile.ts","src/ui/app-nav/app-nav.ts","../src/directives/cache.ts","src/ui/messages.ts","src/app-view.ts","src/index.ts","../../../../../.nvm/versions/node/v10.16.0/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.6d916b24.2016b1c9.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\n\nconst directives = new WeakMap<object, true>();\n\n// tslint:disable-next-line:no-any\nexport type DirectiveFactory = (...args: any[]) => object;\n\nexport type DirectiveFn = (part: Part) => void;\n\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = <F extends DirectiveFactory>(f: F): F =>\n    ((...args: unknown[]) => {\n      const d = f(...args);\n      directives.set(d, true);\n      return d;\n    }) as F;\n\nexport const isDirective = (o: unknown): o is DirectiveFn => {\n  return typeof o === 'function' && directives.has(o);\n};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\ninterface MaybePolyfilledCe extends CustomElementRegistry {\n  readonly polyfillWrapFlushCallback?: object;\n}\n\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    (window.customElements as MaybePolyfilledCe).polyfillWrapFlushCallback !==\n        undefined;\n\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes =\n    (container: Node,\n     start: Node|null,\n     end: Node|null = null,\n     before: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.insertBefore(start!, before);\n        start = n;\n      }\n    };\n\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes =\n    (container: Node, start: Node|null, end: Node|null = null): void => {\n      while (start !== end) {\n        const n = start!.nextSibling;\n        container.removeChild(start!);\n        start = n;\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\n/**\n * The Part interface represents a dynamic part of a template instance rendered\n * by lit-html.\n */\nexport interface Part {\n  readonly value: unknown;\n\n  /**\n   * Sets the current part value, but does not write it to the DOM.\n   * @param value The value that will be committed.\n   */\n  setValue(value: unknown): void;\n\n  /**\n   * Commits the current part value, causing it to actually be written to the\n   * DOM.\n   *\n   * Directives are run at the start of `commit`, so that if they call\n   * `part.setValue(...)` synchronously that value will be used in the current\n   * commit, and there's no need to call `part.commit()` within the directive.\n   * If directives set a part value asynchronously, then they must call\n   * `part.commit()` manually.\n   */\n  commit(): void;\n}\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\n\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\n\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n  readonly parts: TemplatePart[] = [];\n  readonly element: HTMLTemplateElement;\n\n  constructor(result: TemplateResult, element: HTMLTemplateElement) {\n    this.element = element;\n\n    const nodesToRemove: Node[] = [];\n    const stack: Node[] = [];\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        element.content,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    // Keeps track of the last index associated with a part. We try to delete\n    // unnecessary nodes, but we never want to associate two different parts\n    // to the same index. They must have a constant node between.\n    let lastPartIndex = 0;\n    let index = -1;\n    let partIndex = 0;\n    const {strings, values: {length}} = result;\n    while (partIndex < length) {\n      const node = walker.nextNode() as Element | Comment | Text | null;\n      if (node === null) {\n        // We've exhausted the content inside a nested template element.\n        // Because we still have parts (the outer for-loop), we know:\n        // - There is a template in the stack\n        // - The walker will find a nextNode outside the template\n        walker.currentNode = stack.pop()!;\n        continue;\n      }\n      index++;\n\n      if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n        if ((node as Element).hasAttributes()) {\n          const attributes = (node as Element).attributes;\n          const {length} = attributes;\n          // Per\n          // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n          // attributes are not guaranteed to be returned in document order.\n          // In particular, Edge/IE can return them out of order, so we cannot\n          // assume a correspondence between part index and attribute index.\n          let count = 0;\n          for (let i = 0; i < length; i++) {\n            if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n              count++;\n            }\n          }\n          while (count-- > 0) {\n            // Get the template literal section leading up to the first\n            // expression in this attribute\n            const stringForPart = strings[partIndex];\n            // Find the attribute name\n            const name = lastAttributeNameRegex.exec(stringForPart)![2];\n            // Find the corresponding attribute\n            // All bound attributes have had a suffix added in\n            // TemplateResult#getHTML to opt out of special attribute\n            // handling. To look up the attribute value we also need to add\n            // the suffix.\n            const attributeLookupName =\n                name.toLowerCase() + boundAttributeSuffix;\n            const attributeValue =\n                (node as Element).getAttribute(attributeLookupName)!;\n            (node as Element).removeAttribute(attributeLookupName);\n            const statics = attributeValue.split(markerRegex);\n            this.parts.push({type: 'attribute', index, name, strings: statics});\n            partIndex += statics.length - 1;\n          }\n        }\n        if ((node as Element).tagName === 'TEMPLATE') {\n          stack.push(node);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n      } else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n        const data = (node as Text).data;\n        if (data.indexOf(marker) >= 0) {\n          const parent = node.parentNode!;\n          const strings = data.split(markerRegex);\n          const lastIndex = strings.length - 1;\n          // Generate a new text node for each literal section\n          // These nodes are also used as the markers for node parts\n          for (let i = 0; i < lastIndex; i++) {\n            let insert: Node;\n            let s = strings[i];\n            if (s === '') {\n              insert = createMarker();\n            } else {\n              const match = lastAttributeNameRegex.exec(s);\n              if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                s = s.slice(0, match.index) + match[1] +\n                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n              }\n              insert = document.createTextNode(s);\n            }\n            parent.insertBefore(insert, node);\n            this.parts.push({type: 'node', index: ++index});\n          }\n          // If there's no text, we must insert a comment to mark our place.\n          // Else, we can trust it will stick around after cloning.\n          if (strings[lastIndex] === '') {\n            parent.insertBefore(createMarker(), node);\n            nodesToRemove.push(node);\n          } else {\n            (node as Text).data = strings[lastIndex];\n          }\n          // We have a part for each match found\n          partIndex += lastIndex;\n        }\n      } else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n        if ((node as Comment).data === marker) {\n          const parent = node.parentNode!;\n          // Add a new marker node to be the startNode of the Part if any of\n          // the following are true:\n          //  * We don't have a previousSibling\n          //  * The previousSibling is already the start of a previous part\n          if (node.previousSibling === null || index === lastPartIndex) {\n            index++;\n            parent.insertBefore(createMarker(), node);\n          }\n          lastPartIndex = index;\n          this.parts.push({type: 'node', index});\n          // If we don't have a nextSibling, keep this node so we have an end.\n          // Else, we can remove it to save future costs.\n          if (node.nextSibling === null) {\n            (node as Comment).data = '';\n          } else {\n            nodesToRemove.push(node);\n            index--;\n          }\n          partIndex++;\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            this.parts.push({type: 'node', index: -1});\n            partIndex++;\n          }\n        }\n      }\n    }\n\n    // Remove text binding nodes after the walk to not disturb the TreeWalker\n    for (const n of nodesToRemove) {\n      n.parentNode!.removeChild(n);\n    }\n  }\n}\n\nconst endsWith = (str: string, suffix: string): boolean => {\n  const index = str.length - suffix.length;\n  return index >= 0 && str.slice(index) === suffix;\n};\n\n/**\n * A placeholder for a dynamic expression in an HTML template.\n *\n * There are two built-in part types: AttributePart and NodePart. NodeParts\n * always represent a single dynamic expression, while AttributeParts may\n * represent as many expressions are contained in the attribute.\n *\n * A Template's parts are mutable, so parts can be replaced or modified\n * (possibly to implement different template semantics). The contract is that\n * parts can only be replaced, not removed, added or reordered, and parts must\n * always consume the correct number of values in their `update()` method.\n *\n * TODO(justinfagnani): That requirement is a little fragile. A\n * TemplateInstance could instead be more careful about which values it gives\n * to Part.update().\n */\nexport type TemplatePart = {\n  readonly type: 'node',\n  index: number\n}|{readonly type: 'attribute', index: number, readonly name: string, readonly strings: ReadonlyArray<string>};\n\nexport const isTemplatePartActive = (part: TemplatePart) => part.index !== -1;\n\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex =\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isCEPolyfill} from './dom.js';\nimport {Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n  private readonly __parts: Array<Part|undefined> = [];\n  readonly processor: TemplateProcessor;\n  readonly options: RenderOptions;\n  readonly template: Template;\n\n  constructor(\n      template: Template, processor: TemplateProcessor,\n      options: RenderOptions) {\n    this.template = template;\n    this.processor = processor;\n    this.options = options;\n  }\n\n  update(values: ReadonlyArray<unknown>) {\n    let i = 0;\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.setValue(values[i]);\n      }\n      i++;\n    }\n    for (const part of this.__parts) {\n      if (part !== undefined) {\n        part.commit();\n      }\n    }\n  }\n\n  _clone(): DocumentFragment {\n    // There are a number of steps in the lifecycle of a template instance's\n    // DOM fragment:\n    //  1. Clone - create the instance fragment\n    //  2. Adopt - adopt into the main document\n    //  3. Process - find part markers and create parts\n    //  4. Upgrade - upgrade custom elements\n    //  5. Update - set node, attribute, property, etc., values\n    //  6. Connect - connect to the document. Optional and outside of this\n    //     method.\n    //\n    // We have a few constraints on the ordering of these steps:\n    //  * We need to upgrade before updating, so that property values will pass\n    //    through any property setters.\n    //  * We would like to process before upgrading so that we're sure that the\n    //    cloned fragment is inert and not disturbed by self-modifying DOM.\n    //  * We want custom elements to upgrade even in disconnected fragments.\n    //\n    // Given these constraints, with full custom elements support we would\n    // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n    //\n    // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n    // can not implement that order and still have upgrade-before-update and\n    // upgrade disconnected fragments. So we instead sacrifice the\n    // process-before-upgrade constraint, since in Custom Elements v1 elements\n    // must not modify their light DOM in the constructor. We still have issues\n    // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n    // that don't strictly adhere to the no-modification rule because shadow\n    // DOM, which may be created in the constructor, is emulated by being placed\n    // in the light DOM.\n    //\n    // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n    // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n    // in one step.\n    //\n    // The Custom Elements v1 polyfill supports upgrade(), so the order when\n    // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n    // Connect.\n\n    const fragment = isCEPolyfill ?\n        this.template.element.content.cloneNode(true) as DocumentFragment :\n        document.importNode(this.template.element.content, true);\n\n    const stack: Node[] = [];\n    const parts = this.template.parts;\n    // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n    const walker = document.createTreeWalker(\n        fragment,\n        133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,\n        null,\n        false);\n    let partIndex = 0;\n    let nodeIndex = 0;\n    let part: TemplatePart;\n    let node = walker.nextNode();\n    // Loop through all the nodes and parts of a template\n    while (partIndex < parts.length) {\n      part = parts[partIndex];\n      if (!isTemplatePartActive(part)) {\n        this.__parts.push(undefined);\n        partIndex++;\n        continue;\n      }\n\n      // Progress the tree walker until we find our next part's node.\n      // Note that multiple parts may share the same node (attribute parts\n      // on a single element), so this loop may not run at all.\n      while (nodeIndex < part.index) {\n        nodeIndex++;\n        if (node!.nodeName === 'TEMPLATE') {\n          stack.push(node!);\n          walker.currentNode = (node as HTMLTemplateElement).content;\n        }\n        if ((node = walker.nextNode()) === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop()!;\n          node = walker.nextNode();\n        }\n      }\n\n      // We've arrived at our part's node.\n      if (part.type === 'node') {\n        const part = this.processor.handleTextExpression(this.options);\n        part.insertAfterNode(node!.previousSibling!);\n        this.__parts.push(part);\n      } else {\n        this.__parts.push(...this.processor.handleAttributeExpressions(\n            node as Element, part.name, part.strings, this.options));\n      }\n      partIndex++;\n    }\n\n    if (isCEPolyfill) {\n      document.adoptNode(fragment);\n      customElements.upgrade(fragment);\n    }\n    return fragment;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {reparentNodes} from './dom.js';\nimport {TemplateProcessor} from './template-processor.js';\nimport {boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker} from './template.js';\n\nconst commentMarker = ` ${marker} `;\n\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n  readonly strings: TemplateStringsArray;\n  readonly values: ReadonlyArray<unknown>;\n  readonly type: string;\n  readonly processor: TemplateProcessor;\n\n  constructor(\n      strings: TemplateStringsArray, values: ReadonlyArray<unknown>,\n      type: string, processor: TemplateProcessor) {\n    this.strings = strings;\n    this.values = values;\n    this.type = type;\n    this.processor = processor;\n  }\n\n  /**\n   * Returns a string of HTML used to create a `<template>` element.\n   */\n  getHTML(): string {\n    const l = this.strings.length - 1;\n    let html = '';\n    let isCommentBinding = false;\n\n    for (let i = 0; i < l; i++) {\n      const s = this.strings[i];\n      // For each binding we want to determine the kind of marker to insert\n      // into the template source before it's parsed by the browser's HTML\n      // parser. The marker type is based on whether the expression is in an\n      // attribute, text, or comment poisition.\n      //   * For node-position bindings we insert a comment with the marker\n      //     sentinel as its text content, like <!--{{lit-guid}}-->.\n      //   * For attribute bindings we insert just the marker sentinel for the\n      //     first binding, so that we support unquoted attribute bindings.\n      //     Subsequent bindings can use a comment marker because multi-binding\n      //     attributes must be quoted.\n      //   * For comment bindings we insert just the marker sentinel so we don't\n      //     close the comment.\n      //\n      // The following code scans the template source, but is *not* an HTML\n      // parser. We don't need to track the tree structure of the HTML, only\n      // whether a binding is inside a comment, and if not, if it appears to be\n      // the first binding in an attribute.\n      const commentOpen = s.lastIndexOf('<!--');\n      // We're in comment position if we have a comment open with no following\n      // comment close. Because <-- can appear in an attribute value there can\n      // be false positives.\n      isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n          s.indexOf('-->', commentOpen + 1) === -1;\n      // Check to see if we have an attribute-like sequence preceeding the\n      // expression. This can match \"name=value\" like structures in text,\n      // comments, and attribute values, so there can be false-positives.\n      const attributeMatch = lastAttributeNameRegex.exec(s);\n      if (attributeMatch === null) {\n        // We're only in this branch if we don't have a attribute-like\n        // preceeding sequence. For comments, this guards against unusual\n        // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n        // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n        // below.\n        html += s + (isCommentBinding ? commentMarker : nodeMarker);\n      } else {\n        // For attributes we use just a marker sentinel, and also append a\n        // $lit$ suffix to the name to opt-out of attribute-specific parsing\n        // that IE and Edge do for style and certain SVG attributes.\n        html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n            attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n            marker;\n      }\n    }\n    html += this.strings[l];\n    return html;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = document.createElement('template');\n    template.innerHTML = this.getHTML();\n    return template;\n  }\n}\n\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n  getHTML(): string {\n    return `<svg>${super.getHTML()}</svg>`;\n  }\n\n  getTemplateElement(): HTMLTemplateElement {\n    const template = super.getTemplateElement();\n    const content = template.content;\n    const svgElement = content.firstChild!;\n    content.removeChild(svgElement);\n    reparentNodes(content, svgElement.firstChild);\n    return template;\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {isDirective} from './directive.js';\nimport {removeNodes} from './dom.js';\nimport {noChange, nothing, Part} from './part.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {createMarker} from './template.js';\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\nexport type Primitive = null|undefined|boolean|number|string|Symbol|bigint;\nexport const isPrimitive = (value: unknown): value is Primitive => {\n  return (\n      value === null ||\n      !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value: unknown): value is Iterable<unknown> => {\n  return Array.isArray(value) ||\n      // tslint:disable-next-line:no-any\n      !!(value && (value as any)[Symbol.iterator]);\n};\n\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  readonly parts: ReadonlyArray<AttributePart>;\n  dirty = true;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n    this.parts = [];\n    for (let i = 0; i < strings.length - 1; i++) {\n      (this.parts as AttributePart[])[i] = this._createPart();\n    }\n  }\n\n  /**\n   * Creates a single part. Override this to create a differnt type of part.\n   */\n  protected _createPart(): AttributePart {\n    return new AttributePart(this);\n  }\n\n  protected _getValue(): unknown {\n    const strings = this.strings;\n    const l = strings.length - 1;\n    let text = '';\n\n    for (let i = 0; i < l; i++) {\n      text += strings[i];\n      const part = this.parts[i];\n      if (part !== undefined) {\n        const v = part.value;\n        if (isPrimitive(v) || !isIterable(v)) {\n          text += typeof v === 'string' ? v : String(v);\n        } else {\n          for (const t of v) {\n            text += typeof t === 'string' ? t : String(t);\n          }\n        }\n      }\n    }\n\n    text += strings[l];\n    return text;\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      this.element.setAttribute(this.name, this._getValue() as string);\n    }\n  }\n}\n\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart implements Part {\n  readonly committer: AttributeCommitter;\n  value: unknown = undefined;\n\n  constructor(committer: AttributeCommitter) {\n    this.committer = committer;\n  }\n\n  setValue(value: unknown): void {\n    if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n      this.value = value;\n      // If the value is a not a directive, dirty the committer so that it'll\n      // call setAttribute. If the value is a directive, it'll dirty the\n      // committer if it calls setValue().\n      if (!isDirective(value)) {\n        this.committer.dirty = true;\n      }\n    }\n  }\n\n  commit() {\n    while (isDirective(this.value)) {\n      const directive = this.value;\n      this.value = noChange;\n      directive(this);\n    }\n    if (this.value === noChange) {\n      return;\n    }\n    this.committer.commit();\n  }\n}\n\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart implements Part {\n  readonly options: RenderOptions;\n  startNode!: Node;\n  endNode!: Node;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(options: RenderOptions) {\n    this.options = options;\n  }\n\n  /**\n   * Appends this part into a container.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendInto(container: Node) {\n    this.startNode = container.appendChild(createMarker());\n    this.endNode = container.appendChild(createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n   * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n   * such as those that appear in a literal section of a template.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterNode(ref: Node) {\n    this.startNode = ref;\n    this.endNode = ref.nextSibling!;\n  }\n\n  /**\n   * Appends this part into a parent part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  appendIntoPart(part: NodePart) {\n    part.__insert(this.startNode = createMarker());\n    part.__insert(this.endNode = createMarker());\n  }\n\n  /**\n   * Inserts this part after the `ref` part.\n   *\n   * This part must be empty, as its contents are not automatically moved.\n   */\n  insertAfterPart(ref: NodePart) {\n    ref.__insert(this.startNode = createMarker());\n    this.endNode = ref.endNode;\n    ref.endNode = this.startNode;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    const value = this.__pendingValue;\n    if (value === noChange) {\n      return;\n    }\n    if (isPrimitive(value)) {\n      if (value !== this.value) {\n        this.__commitText(value);\n      }\n    } else if (value instanceof TemplateResult) {\n      this.__commitTemplateResult(value);\n    } else if (value instanceof Node) {\n      this.__commitNode(value);\n    } else if (isIterable(value)) {\n      this.__commitIterable(value);\n    } else if (value === nothing) {\n      this.value = nothing;\n      this.clear();\n    } else {\n      // Fallback, will render the string representation\n      this.__commitText(value);\n    }\n  }\n\n  private __insert(node: Node) {\n    this.endNode.parentNode!.insertBefore(node, this.endNode);\n  }\n\n  private __commitNode(value: Node): void {\n    if (this.value === value) {\n      return;\n    }\n    this.clear();\n    this.__insert(value);\n    this.value = value;\n  }\n\n  private __commitText(value: unknown): void {\n    const node = this.startNode.nextSibling!;\n    value = value == null ? '' : value;\n    // If `value` isn't already a string, we explicitly convert it here in case\n    // it can't be implicitly converted - i.e. it's a symbol.\n    const valueAsString: string =\n        typeof value === 'string' ? value : String(value);\n    if (node === this.endNode.previousSibling &&\n        node.nodeType === 3 /* Node.TEXT_NODE */) {\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      // TODO(justinfagnani): Can we just check if this.value is primitive?\n      (node as Text).data = valueAsString;\n    } else {\n      this.__commitNode(document.createTextNode(valueAsString));\n    }\n    this.value = value;\n  }\n\n  private __commitTemplateResult(value: TemplateResult): void {\n    const template = this.options.templateFactory(value);\n    if (this.value instanceof TemplateInstance &&\n        this.value.template === template) {\n      this.value.update(value.values);\n    } else {\n      // Make sure we propagate the template processor from the TemplateResult\n      // so that we use its syntax extension, etc. The template factory comes\n      // from the render function options so that it can control template\n      // caching and preprocessing.\n      const instance =\n          new TemplateInstance(template, value.processor, this.options);\n      const fragment = instance._clone();\n      instance.update(value.values);\n      this.__commitNode(fragment);\n      this.value = instance;\n    }\n  }\n\n  private __commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If _value is an array, then the previous render was of an\n    // iterable and _value will contain the NodeParts from the previous\n    // render. If _value is not an array, clear this part and make a new\n    // array for NodeParts.\n    if (!Array.isArray(this.value)) {\n      this.value = [];\n      this.clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this.value as NodePart[];\n    let partIndex = 0;\n    let itemPart: NodePart|undefined;\n\n    for (const item of value) {\n      // Try to reuse an existing part\n      itemPart = itemParts[partIndex];\n\n      // If no existing part, create a new one\n      if (itemPart === undefined) {\n        itemPart = new NodePart(this.options);\n        itemParts.push(itemPart);\n        if (partIndex === 0) {\n          itemPart.appendIntoPart(this);\n        } else {\n          itemPart.insertAfterPart(itemParts[partIndex - 1]);\n        }\n      }\n      itemPart.setValue(item);\n      itemPart.commit();\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n      this.clear(itemPart && itemPart.endNode);\n    }\n  }\n\n  clear(startNode: Node = this.startNode) {\n    removeNodes(\n        this.startNode.parentNode!, startNode.nextSibling!, this.endNode);\n  }\n}\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart implements Part {\n  readonly element: Element;\n  readonly name: string;\n  readonly strings: ReadonlyArray<string>;\n  value: unknown = undefined;\n  private __pendingValue: unknown = undefined;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n      throw new Error(\n          'Boolean attributes can only contain a single expression');\n    }\n    this.element = element;\n    this.name = name;\n    this.strings = strings;\n  }\n\n  setValue(value: unknown): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n    const value = !!this.__pendingValue;\n    if (this.value !== value) {\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n      this.value = value;\n    }\n    this.__pendingValue = noChange;\n  }\n}\n\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n  readonly single: boolean;\n\n  constructor(element: Element, name: string, strings: ReadonlyArray<string>) {\n    super(element, name, strings);\n    this.single =\n        (strings.length === 2 && strings[0] === '' && strings[1] === '');\n  }\n\n  protected _createPart(): PropertyPart {\n    return new PropertyPart(this);\n  }\n\n  protected _getValue() {\n    if (this.single) {\n      return this.parts[0].value;\n    }\n    return super._getValue();\n  }\n\n  commit(): void {\n    if (this.dirty) {\n      this.dirty = false;\n      // tslint:disable-next-line:no-any\n      (this.element as any)[this.name] = this._getValue();\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {}\n\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n\ntry {\n  const options = {\n    get capture() {\n      eventOptionsSupported = true;\n      return false;\n    }\n  };\n  // tslint:disable-next-line:no-any\n  window.addEventListener('test', options as any, options);\n  // tslint:disable-next-line:no-any\n  window.removeEventListener('test', options as any, options);\n} catch (_e) {\n}\n\n\ntype EventHandlerWithOptions =\n    EventListenerOrEventListenerObject&Partial<AddEventListenerOptions>;\nexport class EventPart implements Part {\n  readonly element: Element;\n  readonly eventName: string;\n  readonly eventContext?: EventTarget;\n  value: undefined|EventHandlerWithOptions = undefined;\n  private __options?: AddEventListenerOptions;\n  private __pendingValue: undefined|EventHandlerWithOptions = undefined;\n  private readonly __boundHandleEvent: (event: Event) => void;\n\n  constructor(element: Element, eventName: string, eventContext?: EventTarget) {\n    this.element = element;\n    this.eventName = eventName;\n    this.eventContext = eventContext;\n    this.__boundHandleEvent = (e) => this.handleEvent(e);\n  }\n\n  setValue(value: undefined|EventHandlerWithOptions): void {\n    this.__pendingValue = value;\n  }\n\n  commit() {\n    while (isDirective(this.__pendingValue)) {\n      const directive = this.__pendingValue;\n      this.__pendingValue = noChange as EventHandlerWithOptions;\n      directive(this);\n    }\n    if (this.__pendingValue === noChange) {\n      return;\n    }\n\n    const newListener = this.__pendingValue;\n    const oldListener = this.value;\n    const shouldRemoveListener = newListener == null ||\n        oldListener != null &&\n            (newListener.capture !== oldListener.capture ||\n             newListener.once !== oldListener.once ||\n             newListener.passive !== oldListener.passive);\n    const shouldAddListener =\n        newListener != null && (oldListener == null || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    if (shouldAddListener) {\n      this.__options = getOptions(newListener);\n      this.element.addEventListener(\n          this.eventName, this.__boundHandleEvent, this.__options);\n    }\n    this.value = newListener;\n    this.__pendingValue = noChange as EventHandlerWithOptions;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this.value === 'function') {\n      this.value.call(this.eventContext || this.element, event);\n    } else {\n      (this.value as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o: AddEventListenerOptions|undefined) => o &&\n    (eventOptionsSupported ?\n         {capture: o.capture, passive: o.passive, once: o.once} :\n         o.capture as AddEventListenerOptions);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {Part} from './part.js';\nimport {AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {TemplateProcessor} from './template-processor.js';\n\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor implements TemplateProcessor {\n  /**\n   * Create parts for an attribute-position binding, given the event, attribute\n   * name, and string literals.\n   *\n   * @param element The element containing the binding\n   * @param name  The attribute name\n   * @param strings The string literals. There are always at least two strings,\n   *   event for fully-controlled bindings with a single expression.\n   */\n  handleAttributeExpressions(\n      element: Element, name: string, strings: string[],\n      options: RenderOptions): ReadonlyArray<Part> {\n    const prefix = name[0];\n    if (prefix === '.') {\n      const committer = new PropertyCommitter(element, name.slice(1), strings);\n      return committer.parts;\n    }\n    if (prefix === '@') {\n      return [new EventPart(element, name.slice(1), options.eventContext)];\n    }\n    if (prefix === '?') {\n      return [new BooleanAttributePart(element, name.slice(1), strings)];\n    }\n    const committer = new AttributeCommitter(element, name, strings);\n    return committer.parts;\n  }\n  /**\n   * Create parts for a text-position binding.\n   * @param templateFactory\n   */\n  handleTextExpression(options: RenderOptions) {\n    return new NodePart(options);\n  }\n}\n\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\n/**\n * A function type that creates a Template from a TemplateResult.\n *\n * This is a hook into the template-creation process for rendering that\n * requires some modification of templates before they're used, like ShadyCSS,\n * which must add classes to elements and remove styles.\n *\n * Templates should be cached as aggressively as possible, so that many\n * TemplateResults produced from the same expression only do the work of\n * creating the Template the first time.\n *\n * Templates are usually cached by TemplateResult.strings and\n * TemplateResult.type, but may be cached by other keys if this function\n * modifies the template.\n *\n * Note that currently TemplateFactories must not add, remove, or reorder\n * expressions, because there is no way to describe such a modification\n * to render() so that values are interpolated to the correct place in the\n * template instances.\n */\nexport type TemplateFactory = (result: TemplateResult) => Template;\n\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result: TemplateResult) {\n  let templateCache = templateCaches.get(result.type);\n  if (templateCache === undefined) {\n    templateCache = {\n      stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n      keyString: new Map<string, Template>()\n    };\n    templateCaches.set(result.type, templateCache);\n  }\n\n  let template = templateCache.stringsArray.get(result.strings);\n  if (template !== undefined) {\n    return template;\n  }\n\n  // If the TemplateStringsArray is new, generate a key from the strings\n  // This key is shared between all templates with identical content\n  const key = result.strings.join(marker);\n\n  // Check if we already have a Template for this key\n  template = templateCache.keyString.get(key);\n  if (template === undefined) {\n    // If we have not seen this key before, create a new Template\n    template = new Template(result, result.getTemplateElement());\n    // Cache the Template for this key\n    templateCache.keyString.set(key, template);\n  }\n\n  // Cache all future queries for this TemplateStringsArray\n  templateCache.stringsArray.set(result.strings, template);\n  return template;\n}\n\n/**\n * The first argument to JS template tags retain identity across multiple\n * calls to a tag for the same literal, so we can cache work done per literal\n * in a Map.\n *\n * Safari currently has a bug which occasionally breaks this behaviour, so we\n * need to cache the Template at two levels. We first cache the\n * TemplateStringsArray, and if that fails, we cache a key constructed by\n * joining the strings array.\n */\nexport type templateCache = {\n  readonly stringsArray: WeakMap<TemplateStringsArray, Template>; //\n  readonly keyString: Map<string, Template>;\n};\n\nexport const templateCaches = new Map<string, templateCache>();\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module lit-html\n */\n\nimport {removeNodes} from './dom.js';\nimport {NodePart} from './parts.js';\nimport {RenderOptions} from './render-options.js';\nimport {templateFactory} from './template-factory.js';\n\nexport const parts = new WeakMap<Node, NodePart>();\n\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment,\n     options?: Partial<RenderOptions>) => {\n      let part = parts.get(container);\n      if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart({\n                               templateFactory,\n                               ...options,\n                             }));\n        part.appendInto(container);\n      }\n      part.setValue(result);\n      part.commit();\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.2');\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @module shady-render\n */\n\nimport {isTemplatePartActive, Template, TemplatePart} from './template.js';\n\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(\n    template: Template, nodesToRemove: Set<Node>) {\n  const {element: {content}, parts} = template;\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let part = parts[partIndex];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node|null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n    // End removal if stepped past the removing node\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n    // A node to remove was found in the template\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n      // Track node we're removing\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n    // When removing, increment count by which to adjust subsequent part indices\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      // If part is in a removed node deactivate it by setting index to -1 or\n      // adjust the index as needed.\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      // go to the next active part.\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n      part = parts[partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach((n) => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n  const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts =\n    (parts: TemplatePart[], startIndex: number = -1) => {\n      for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n          return i;\n        }\n      }\n      return -1;\n    };\n\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(\n    template: Template, node: Node, refNode: Node|null = null) {\n  const {element: {content}, parts} = template;\n  // If there's no refNode, then put node at end of template.\n  // No part indices need to be shifted in this case.\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker =\n      document.createTreeWalker(content, walkerNodeFilter, null, false);\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      insertCount = countNodes(node);\n      refNode.parentNode!.insertBefore(node, refNode);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      // If we've inserted the node, simply adjust all subsequent parts\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @module shady-render\n * @preferred\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {removeNodes} from './dom.js';\nimport {insertNodeIntoTemplate, removeNodesFromTemplate} from './modify-template.js';\nimport {RenderOptions} from './render-options.js';\nimport {parts, render as litRender} from './render.js';\nimport {templateCaches} from './template-factory.js';\nimport {TemplateInstance} from './template-instance.js';\nimport {TemplateResult} from './template-result.js';\nimport {marker, Template} from './template.js';\n\nexport {html, svg, TemplateResult} from '../lit-html.js';\n\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n    `${type}--${scopeName}`;\n\nlet compatibleShadyCSSVersion = true;\n\nif (typeof window.ShadyCSS === 'undefined') {\n  compatibleShadyCSSVersion = false;\n} else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n  console.warn(\n      `Incompatible ShadyCSS version detected. ` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n      `@webcomponents/shadycss@1.3.1.`);\n  compatibleShadyCSSVersion = false;\n}\n\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nconst shadyTemplateFactory = (scopeName: string) =>\n    (result: TemplateResult) => {\n      const cacheKey = getTemplateCacheKey(result.type, scopeName);\n      let templateCache = templateCaches.get(cacheKey);\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap<TemplateStringsArray, Template>(),\n          keyString: new Map<string, Template>()\n        };\n        templateCaches.set(cacheKey, templateCache);\n      }\n\n      let template = templateCache.stringsArray.get(result.strings);\n      if (template !== undefined) {\n        return template;\n      }\n\n      const key = result.strings.join(marker);\n      template = templateCache.keyString.get(key);\n      if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n          window.ShadyCSS!.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n      }\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    };\n\nconst TEMPLATE_TYPES = ['html', 'svg'];\n\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName: string) => {\n  TEMPLATE_TYPES.forEach((type) => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.keyString.forEach((template) => {\n        const {element: {content}} = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll('style')).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n};\n\nconst shadyRenderSet = new Set<string>();\n\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles =\n    (scopeName: string, renderedDOM: DocumentFragment, template?: Template) => {\n      shadyRenderSet.add(scopeName);\n      // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n      const templateElement =\n          !!template ? template.element : document.createElement('template');\n      // Move styles out of rendered DOM and store.\n      const styles = renderedDOM.querySelectorAll('style');\n      const {length} = styles;\n      // If there are no styles, skip unnecessary work\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n      const condensedStyle = document.createElement('style');\n      // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n      for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode!.removeChild(style);\n        condensedStyle.textContent! += style.textContent;\n      }\n      // Remove styles from nested templates in this scope.\n      removeStylesFromLitTemplates(scopeName);\n      // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n      const content = templateElement.content;\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      }\n      // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n      window.ShadyCSS!.prepareTemplateStyles(templateElement, scopeName);\n      const style = content.querySelector('style');\n      if (window.ShadyCSS!.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set<Node>();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n\nexport interface ShadyRenderOptions extends Partial<RenderOptions> {\n  scopeName: string;\n}\n\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render =\n    (result: unknown,\n     container: Element|DocumentFragment|ShadowRoot,\n     options: ShadyRenderOptions) => {\n      if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n      const scopeName = options.scopeName;\n      const hasRendered = parts.has(container);\n      const needsScoping = compatibleShadyCSSVersion &&\n          container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n          !!(container as ShadowRoot).host;\n      // Handle first render to a scope specially...\n      const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n      // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n      const renderContainer =\n          firstScopeRender ? document.createDocumentFragment() : container;\n      litRender(\n          result,\n          renderContainer,\n          {templateFactory: shadyTemplateFactory(scopeName), ...options} as\n              RenderOptions);\n      // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n      if (firstScopeRender) {\n        const part = parts.get(renderContainer)!;\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(\n            scopeName, renderContainer as DocumentFragment, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n      }\n      // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS!.styleElement((container as ShadowRoot).host);\n      }\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    <P extends PropertyKey>(prop: P, _obj: unknown): P => prop;\n\ndeclare global {\n  var JSCompiler_renameProperty: <P extends PropertyKey>(\n      prop: P, _obj: unknown) => P;\n\n  interface Window {\n    JSCompiler_renameProperty: typeof JSCompiler_renameProperty;\n  }\n}\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string|null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n    ComplexAttributeConverter<Type>|((value: string, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean|string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\nexport type PropertyValues = Map<PropertyKey, unknown>;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        return value ? '' : null;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        return value == null ? value : JSON.stringify(value);\n    }\n    return value;\n  },\n\n  fromAttribute(value: string|null, type?: unknown) {\n    switch (type) {\n      case Boolean:\n        return value !== null;\n      case Number:\n        return value === null ? null : Number(value);\n      case Object:\n      case Array:\n        return JSON.parse(value!);\n    }\n    return value;\n  }\n\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual\n};\n\nconst microtaskPromise = Promise.resolve(true);\n\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\nconst STATE_HAS_CONNECTED = 1 << 5;\ntype UpdateState = typeof STATE_HAS_UPDATED|typeof STATE_UPDATE_REQUESTED|\n    typeof STATE_IS_REFLECTING_TO_ATTRIBUTE|\n    typeof STATE_IS_REFLECTING_TO_PROPERTY|typeof STATE_HAS_CONNECTED;\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n */\nexport abstract class UpdatingElement extends HTMLElement {\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   */\n  private static _attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static[finalized] = true;\n\n  /**\n   * Memoized list of all class properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   */\n  private static _classProperties?: PropertyDeclarationMap;\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring the property.\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this._classProperties!.forEach((v, p) => {\n      const attr = this._attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this._attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Ensures the private `_classProperties` property metadata is created.\n   * In addition to `finalize` this is also called in `createProperty` to\n   * ensure the `@property` decorator can add property metadata.\n   */\n  /** @nocollapse */\n  private static _ensureClassProperties() {\n    // ensure private storage for property declarations.\n    if (!this.hasOwnProperty(\n            JSCompiler_renameProperty('_classProperties', this))) {\n      this._classProperties = new Map();\n      // NOTE: Workaround IE11 not supporting Map constructor argument.\n      const superProperties: PropertyDeclarationMap =\n          Object.getPrototypeOf(this)._classProperties;\n      if (superProperties !== undefined) {\n        superProperties.forEach(\n            (v: PropertyDeclaration, k: PropertyKey) =>\n                this._classProperties!.set(k, v));\n      }\n    }\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   * @nocollapse\n   */\n  static createProperty(\n      name: PropertyKey,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure storage exists for property\n    // metadata.\n    this._ensureClassProperties();\n    this._classProperties!.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n      return;\n    }\n    const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n    Object.defineProperty(this.prototype, name, {\n      // tslint:disable-next-line:no-any no symbol in index\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: UpdatingElement, value: unknown) {\n        const oldValue =\n            (this as {} as {[key: string]: unknown})[name as string];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as UpdatingElement)._requestUpdate(name, oldValue);\n      },\n      configurable: true,\n      enumerable: true\n    });\n  }\n\n  /**\n   * Creates property accessors for registered properties and ensures\n   * any superclasses are also finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this);\n    if (!superCtor.hasOwnProperty(finalized)) {\n      superCtor.finalize();\n    }\n    this[finalized] = true;\n    this._ensureClassProperties();\n    // initialize Map populated in observedAttributes\n    this._attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...(typeof Object.getOwnPropertySymbols === 'function') ?\n            Object.getOwnPropertySymbols(props) :\n            []\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeSript lack of support for symbol in\n        // index types\n        // tslint:disable-next-line:no-any no symbol in index\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n  }\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static _attributeNameForProperty(\n      name: PropertyKey, options: PropertyDeclaration) {\n    const attribute = options.attribute;\n    return attribute === false ?\n        undefined :\n        (typeof attribute === 'string' ?\n             attribute :\n             (typeof name === 'string' ? name.toLowerCase() : undefined));\n  }\n\n  /**\n   * Returns true if a property should request an update.\n   * Called when a property value is set and uses the `hasChanged`\n   * option for the property if present or a strict identity check.\n   * @nocollapse\n   */\n  private static _valueHasChanged(\n      value: unknown, old: unknown, hasChanged: HasChanged = notEqual) {\n    return hasChanged(value, old);\n  }\n\n  /**\n   * Returns the property value for the given attribute value.\n   * Called via the `attributeChangedCallback` and uses the property's\n   * `converter` or `converter.fromAttribute` property option.\n   * @nocollapse\n   */\n  private static _propertyValueFromAttribute(\n      value: string|null, options: PropertyDeclaration) {\n    const type = options.type;\n    const converter = options.converter || defaultConverter;\n    const fromAttribute =\n        (typeof converter === 'function' ? converter : converter.fromAttribute);\n    return fromAttribute ? fromAttribute(value, type) : value;\n  }\n\n  /**\n   * Returns the attribute value for the given property value. If this\n   * returns undefined, the property will *not* be reflected to an attribute.\n   * If this returns null, the attribute will be removed, otherwise the\n   * attribute will be set to the value.\n   * This uses the property's `reflect` and `type.toAttribute` property options.\n   * @nocollapse\n   */\n  private static _propertyValueToAttribute(\n      value: unknown, options: PropertyDeclaration) {\n    if (options.reflect === undefined) {\n      return;\n    }\n    const type = options.type;\n    const converter = options.converter;\n    const toAttribute =\n        converter && (converter as ComplexAttributeConverter).toAttribute ||\n        defaultConverter.toAttribute;\n    return toAttribute!(value, type);\n  }\n\n  private _updateState: UpdateState = 0;\n  private _instanceProperties: PropertyValues|undefined = undefined;\n  private _updatePromise: Promise<unknown> = microtaskPromise;\n  private _hasConnectedResolver: (() => void)|undefined = undefined;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   */\n  private _changedProperties: PropertyValues = new Map();\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private _reflectingProperties: Map<PropertyKey, PropertyDeclaration>|\n      undefined = undefined;\n\n  constructor() {\n    super();\n    this.initialize();\n  }\n\n  /**\n   * Performs element initialization. By default captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    this._saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this._requestUpdate();\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private _saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof UpdatingElement)\n        ._classProperties!.forEach((_v, p) => {\n          if (this.hasOwnProperty(p)) {\n            const value = this[p as keyof this];\n            delete this[p as keyof this];\n            if (!this._instanceProperties) {\n              this._instanceProperties = new Map();\n            }\n            this._instanceProperties.set(p, value);\n          }\n        });\n  }\n\n  /**\n   * Applies previously saved instance properties.\n   */\n  private _applyInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    // tslint:disable-next-line:no-any\n    this._instanceProperties!.forEach((v, p) => (this as any)[p] = v);\n    this._instanceProperties = undefined;\n  }\n\n  connectedCallback() {\n    this._updateState = this._updateState | STATE_HAS_CONNECTED;\n    // Ensure first connection completes an update. Updates cannot complete\n    // before connection and if one is pending connection the\n    // `_hasConnectionResolver` will exist. If so, resolve it to complete the\n    // update, otherwise requestUpdate.\n    if (this._hasConnectedResolver) {\n      this._hasConnectedResolver();\n      this._hasConnectedResolver = undefined;\n    }\n  }\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   */\n  disconnectedCallback() {\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   */\n  attributeChangedCallback(name: string, old: string|null, value: string|null) {\n    if (old !== value) {\n      this._attributeToProperty(name, value);\n    }\n  }\n\n  private _propertyToAttribute(\n      name: PropertyKey, value: unknown,\n      options: PropertyDeclaration = defaultPropertyDeclaration) {\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const attr = ctor._attributeNameForProperty(name, options);\n    if (attr !== undefined) {\n      const attrValue = ctor._propertyValueToAttribute(value, options);\n      // an undefined value does not change the attribute.\n      if (attrValue === undefined) {\n        return;\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n    }\n  }\n\n  private _attributeToProperty(name: string, value: string|null) {\n    // Use tracking info to avoid deserializing attribute value if it was\n    // just set from a property setter.\n    if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n      return;\n    }\n    const ctor = (this.constructor as typeof UpdatingElement);\n    const propName = ctor._attributeToPropertyMap.get(name);\n    if (propName !== undefined) {\n      const options =\n          ctor._classProperties!.get(propName) || defaultPropertyDeclaration;\n      // mark state reflecting\n      this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n      this[propName as keyof this] =\n          // tslint:disable-next-line:no-any\n          ctor._propertyValueFromAttribute(value, options) as any;\n      // mark state not reflecting\n      this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n    }\n  }\n\n  /**\n   * This private version of `requestUpdate` does not access or return the\n   * `updateComplete` promise. This promise can be overridden and is therefore\n   * not free to access.\n   */\n  private _requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      const ctor = this.constructor as typeof UpdatingElement;\n      const options =\n          ctor._classProperties!.get(name) || defaultPropertyDeclaration;\n      if (ctor._valueHasChanged(\n              this[name as keyof this], oldValue, options.hasChanged)) {\n        if (!this._changedProperties.has(name)) {\n          this._changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true &&\n            !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n          if (this._reflectingProperties === undefined) {\n            this._reflectingProperties = new Map();\n          }\n          this._reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n      this._enqueueUpdate();\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should\n   * be called when an element should update based on some state not triggered\n   * by setting a property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored. Returns the `updateComplete` Promise which is resolved\n   * when the update completes.\n   *\n   * @param name {PropertyKey} (optional) name of requesting property\n   * @param oldValue {any} (optional) old value of requesting property\n   * @returns {Promise} A Promise that is resolved when the update completes.\n   */\n  requestUpdate(name?: PropertyKey, oldValue?: unknown) {\n    this._requestUpdate(name, oldValue);\n    return this.updateComplete;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async _enqueueUpdate() {\n    // Mark state updating...\n    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n    let resolve!: (r: boolean) => void;\n    let reject!: (e: Error) => void;\n    const previousUpdatePromise = this._updatePromise;\n    this._updatePromise = new Promise((res, rej) => {\n      resolve = res;\n      reject = rej;\n    });\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await previousUpdatePromise;\n    } catch (e) {\n      // Ignore any previous errors. We only care that the previous cycle is\n      // done. Any error should have been handled in the previous update.\n    }\n    // Make sure the element has connected before updating.\n    if (!this._hasConnected) {\n      await new Promise((res) => this._hasConnectedResolver = res);\n    }\n    try {\n      const result = this.performUpdate();\n      // If `performUpdate` returns a Promise, we await it. This is done to\n      // enable coordinating updates with a scheduler. Note, the result is\n      // checked to avoid delaying an additional microtask unless we need to.\n      if (result != null) {\n        await result;\n      }\n    } catch (e) {\n      reject(e);\n    }\n    resolve(!this._hasRequestedUpdate);\n  }\n\n  private get _hasConnected() {\n    return (this._updateState & STATE_HAS_CONNECTED);\n  }\n\n  private get _hasRequestedUpdate() {\n    return (this._updateState & STATE_UPDATE_REQUESTED);\n  }\n\n  protected get hasUpdated() {\n    return (this._updateState & STATE_HAS_UPDATED);\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   */\n  protected performUpdate(): void|Promise<unknown> {\n    // Mixin instance properties once, if they exist.\n    if (this._instanceProperties) {\n      this._applyInstanceProperties();\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.update(changedProperties);\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      throw e;\n    } finally {\n      // Ensure element can accept additional updates after an exception.\n      this._markUpdated();\n    }\n    if (shouldUpdate) {\n      if (!(this._updateState & STATE_HAS_UPDATED)) {\n        this._updateState = this._updateState | STATE_HAS_UPDATED;\n        this.firstUpdated(changedProperties);\n      }\n      this.updated(changedProperties);\n    }\n  }\n\n  private _markUpdated() {\n    this._changedProperties = new Map();\n    this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `_getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super._getUpdateComplete()`, then any subsequent state.\n   *\n   * @returns {Promise} The Promise returns a boolean that indicates if the\n   * update resolved without triggering another update.\n   */\n  get updateComplete() {\n    return this._getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async _getUpdateComplete() {\n   *       await super._getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   */\n  protected _getUpdateComplete() {\n    return this._updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this._reflectingProperties !== undefined &&\n        this._reflectingProperties.size > 0) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this._reflectingProperties.forEach(\n          (v, k) => this._propertyToAttribute(k, this[k as keyof this], v));\n      this._reflectingProperties = undefined;\n    }\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected updated(_changedProperties: PropertyValues) {\n  }\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {\n  }\n}\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {LitElement} from '../lit-element.js';\n\nimport {PropertyDeclaration, UpdatingElement} from './updating-element.js';\n\nexport type Constructor<T> = {\n  new (...args: unknown[]): T\n};\n\n// From the TC39 Decorators proposal\ninterface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\ninterface ClassElement {\n  kind: 'field'|'method';\n  key: PropertyKey;\n  placement: 'static'|'prototype'|'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => undefined | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nconst legacyCustomElement =\n    (tagName: string, clazz: Constructor<HTMLElement>) => {\n      window.customElements.define(tagName, clazz);\n      // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n      return clazz as any;\n    };\n\nconst standardCustomElement =\n    (tagName: string, descriptor: ClassDescriptor) => {\n      const {kind, elements} = descriptor;\n      return {\n        kind,\n        elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher(clazz: Constructor<HTMLElement>) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * @param tagName the name of the custom element to define\n */\nexport const customElement = (tagName: string) =>\n    (classOrDescriptor: Constructor<HTMLElement>|ClassDescriptor) =>\n        (typeof classOrDescriptor === 'function') ?\n    legacyCustomElement(tagName, classOrDescriptor) :\n    standardCustomElement(tagName, classOrDescriptor);\n\nconst standardProperty =\n    (options: PropertyDeclaration, element: ClassElement) => {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor &&\n          !('value' in element.descriptor)) {\n        return {\n          ...element,\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer(this: {[key: string]: unknown}) {\n            if (typeof element.initializer === 'function') {\n              this[element.key as string] = element.initializer.call(this);\n            }\n          },\n          finisher(clazz: typeof UpdatingElement) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\nconst legacyProperty =\n    (options: PropertyDeclaration, proto: Object, name: PropertyKey) => {\n      (proto.constructor as typeof UpdatingElement)\n          .createProperty(name, options);\n    };\n\n/**\n * A property decorator which creates a LitElement property which reflects a\n * corresponding attribute value. A `PropertyDeclaration` may optionally be\n * supplied to configure property features.\n *\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // tslint:disable-next-line:no-any decorator\n  return (protoOrDescriptor: Object|ClassElement, name?: PropertyKey): any =>\n             (name !== undefined) ?\n      legacyProperty(options!, protoOrDescriptor as Object, name) :\n      standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function query(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelector(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\n/**\n * A property decorator that converts a class property into a getter\n * that executes a querySelectorAll on the element's renderRoot.\n *\n * @ExportDecoratedItems\n */\nexport function queryAll(selector: string) {\n  return (protoOrDescriptor: Object|ClassElement,\n          // tslint:disable-next-line:no-any decorator\n          name?: PropertyKey): any => {\n    const descriptor = {\n      get(this: LitElement) {\n        return this.renderRoot.querySelectorAll(selector);\n      },\n      enumerable: true,\n      configurable: true,\n    };\n    return (name !== undefined) ?\n        legacyQuery(descriptor, protoOrDescriptor as Object, name) :\n        standardQuery(descriptor, protoOrDescriptor as ClassElement);\n  };\n}\n\nconst legacyQuery =\n    (descriptor: PropertyDescriptor, proto: Object, name: PropertyKey) => {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\nconst standardQuery = (descriptor: PropertyDescriptor, element: ClassElement) =>\n    ({\n      kind: 'method',\n      placement: 'prototype',\n      key: element.key,\n      descriptor,\n    });\n\nconst standardEventOptions =\n    (options: AddEventListenerOptions, element: ClassElement) => {\n      return {\n        ...element,\n        finisher(clazz: typeof UpdatingElement) {\n          Object.assign(\n              clazz.prototype[element.key as keyof UpdatingElement], options);\n        }\n      };\n    };\n\nconst legacyEventOptions =\n    // tslint:disable-next-line:no-any legacy decorator\n    (options: AddEventListenerOptions, proto: any, name: PropertyKey) => {\n      Object.assign(proto[name], options);\n    };\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifis event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n *\n *     class MyElement {\n *\n *       clicked = false;\n *\n *       render() {\n *         return html`<div @click=${this._onClick}`><button></button></div>`;\n *       }\n *\n *       @eventOptions({capture: true})\n *       _onClick(e) {\n *         this.clicked = true;\n *       }\n *     }\n */\nexport const eventOptions = (options: AddEventListenerOptions) =>\n    // Return value typed as any to prevent TypeScript from complaining that\n    // standard decorator function signature does not match TypeScript decorator\n    // signature\n    // TODO(kschaaf): unclear why it was only failing on this decorator and not\n    // the others\n    ((protoOrDescriptor: Object|ClassElement, name?: string) =>\n         (name !== undefined) ?\n         legacyEventOptions(options, protoOrDescriptor as Object, name) :\n         standardEventOptions(options, protoOrDescriptor as ClassElement)) as\n        // tslint:disable-next-line:no-any decorator\n        any;\n","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const supportsAdoptingStyleSheets =\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  _styleSheet?: CSSStyleSheet|null;\n\n  readonly cssText: string;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n          'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet|null {\n    if (this._styleSheet === undefined) {\n      // Note, if `adoptedStyleSheets` is supported then we assume CSSStyleSheet\n      // is constructable.\n      if (supportsAdoptingStyleSheets) {\n        this._styleSheet = new CSSStyleSheet();\n        this._styleSheet.replaceSync(this.cssText);\n      } else {\n        this._styleSheet = null;\n      }\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\n/**\n * Wrap a value for interpolation in a css tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return new CSSResult(String(value), constructionToken);\n};\n\nconst textFromCSSResult = (value: CSSResult|number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n        `Value passed to 'css' function must be a 'css' function result: ${\n            value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n  }\n};\n\n/**\n * Template tag which which can be used with LitElement's `style` property to\n * set element styles. For security reasons, only literal string values may be\n * used. To incorporate non-literal values `unsafeCSS` may be used inside a\n * template string part.\n */\nexport const css =\n    (strings: TemplateStringsArray, ...values: (CSSResult|number)[]) => {\n      const cssText = values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    };\n","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport {TemplateResult} from 'lit-html';\nimport {render} from 'lit-html/lib/shady-render.js';\n\nimport {PropertyValues, UpdatingElement} from './lib/updating-element.js';\n\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport {html, svg, TemplateResult, SVGTemplateResult} from 'lit-html/lit-html.js';\nimport {supportsAdoptingStyleSheets, CSSResult} from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.2.1');\n\nexport interface CSSResultArray extends Array<CSSResult|CSSResultArray> {}\n\n/**\n * Minimal implementation of Array.prototype.flat\n * @param arr the array to flatten\n * @param result the accumlated result\n */\nfunction arrayFlat(\n    styles: CSSResultArray, result: CSSResult[] = []): CSSResult[] {\n  for (let i = 0, length = styles.length; i < length; i++) {\n    const value = styles[i];\n    if (Array.isArray(value)) {\n      arrayFlat(value, result);\n    } else {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/** Deeply flattens styles array. Uses native flat if available. */\nconst flattenStyles = (styles: CSSResultArray): CSSResult[] =>\n    styles.flat ? styles.flat(Infinity) : arrayFlat(styles);\n\nexport class LitElement extends UpdatingElement {\n\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See updating-element.ts for more information.\n   */\n  protected static['finalized'] = true;\n  /**\n   * Render method used to render the lit-html TemplateResult to the element's\n   * DOM.\n   * @param {TemplateResult} Template to render.\n   * @param {Element|DocumentFragment} Node into which to render.\n   * @param {String} Element name.\n   * @nocollapse\n   */\n  static render = render;\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the `css` tag function.\n   */\n  static styles?: CSSResult|CSSResultArray;\n\n  private static _styles: CSSResult[]|undefined;\n\n  /** @nocollapse */\n  protected static finalize() {\n    // The Closure JS Compiler does not always preserve the correct \"this\"\n    // when calling static super methods (b/137460243), so explicitly bind.\n    super.finalize.call(this);\n    // Prepare styling that is stamped at first render time. Styling\n    // is built from user provided `styles` or is inherited from the superclass.\n    this._styles =\n        this.hasOwnProperty(JSCompiler_renameProperty('styles', this)) ?\n        this._getUniqueStyles() :\n        this._styles || [];\n  }\n\n  /** @nocollapse */\n  private static _getUniqueStyles(): CSSResult[] {\n    // Take care not to call `this.styles` multiple times since this generates\n    // new CSSResults each time.\n    // TODO(sorvell): Since we do not cache CSSResults by input, any\n    // shared styles will generate new stylesheet objects, which is wasteful.\n    // This should be addressed when a browser ships constructable\n    // stylesheets.\n    const userStyles = this.styles;\n    const styles: CSSResult[] = [];\n    if (Array.isArray(userStyles)) {\n      const flatStyles = flattenStyles(userStyles);\n      // As a performance optimization to avoid duplicated styling that can\n      // occur especially when composing via subclassing, de-duplicate styles\n      // preserving the last item in the list. The last item is kept to\n      // try to preserve cascade order with the assumption that it's most\n      // important that last added styles override previous styles.\n      const styleSet = flatStyles.reduceRight((set, s) => {\n        set.add(s);\n        // on IE set.add does not return the set.\n        return set;\n      }, new Set<CSSResult>());\n      // Array.from does not work on Set in IE\n      styleSet.forEach((v) => styles.unshift(v));\n    } else if (userStyles) {\n      styles.push(userStyles);\n    }\n    return styles;\n  }\n\n  private _needsShimAdoptedStyleSheets?: boolean;\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   */\n  readonly renderRoot!: Element|DocumentFragment;\n\n  /**\n   * Performs element initialization. By default this calls `createRenderRoot`\n   * to create the element `renderRoot` node and captures any pre-set values for\n   * registered properties.\n   */\n  protected initialize() {\n    super.initialize();\n    (this as {renderRoot: Element | DocumentFragment}).renderRoot =\n        this.createRenderRoot();\n    // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n    // element's getRootNode(). While this could be done, we're choosing not to\n    // support this now since it would require different logic around de-duping.\n    if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n      this.adoptStyles();\n    }\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   * @returns {Element|DocumentFragment} Returns a node into which to render.\n   */\n  protected createRenderRoot(): Element|ShadowRoot {\n    return this.attachShadow({mode: 'open'});\n  }\n\n  /**\n   * Applies styling to the element shadowRoot using the `static get styles`\n   * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n   * available and will fallback otherwise. When Shadow DOM is polyfilled,\n   * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n   * is available but `adoptedStyleSheets` is not, styles are appended to the\n   * end of the `shadowRoot` to [mimic spec\n   * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n   */\n  protected adoptStyles() {\n    const styles = (this.constructor as typeof LitElement)._styles!;\n    if (styles.length === 0) {\n      return;\n    }\n    // There are three separate cases here based on Shadow DOM support.\n    // (1) shadowRoot polyfilled: use ShadyCSS\n    // (2) shadowRoot.adoptedStyleSheets available: use it.\n    // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n    // rendering\n    if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n      window.ShadyCSS.ScopingShim!.prepareAdoptedCssText(\n          styles.map((s) => s.cssText), this.localName);\n    } else if (supportsAdoptingStyleSheets) {\n      (this.renderRoot as ShadowRoot).adoptedStyleSheets =\n          styles.map((s) => s.styleSheet!);\n    } else {\n      // This must be done after rendering so the actual style insertion is done\n      // in `update`.\n      this._needsShimAdoptedStyleSheets = true;\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // Note, first update/render handles styleElement so we only call this if\n    // connected after first update.\n    if (this.hasUpdated && window.ShadyCSS !== undefined) {\n      window.ShadyCSS.styleElement(this);\n    }\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * * @param _changedProperties Map of changed properties with old values\n   */\n  protected update(changedProperties: PropertyValues) {\n    super.update(changedProperties);\n    const templateResult = this.render() as unknown;\n    if (templateResult instanceof TemplateResult) {\n      (this.constructor as typeof LitElement)\n          .render(\n              templateResult,\n              this.renderRoot,\n              {scopeName: this.localName, eventContext: this});\n    }\n    // When native Shadow DOM is used but adoptedStyles are not supported,\n    // insert styling after rendering to ensure adoptedStyles have highest\n    // priority.\n    if (this._needsShimAdoptedStyleSheets) {\n      this._needsShimAdoptedStyleSheets = false;\n      (this.constructor as typeof LitElement)._styles!.forEach((s) => {\n        const style = document.createElement('style');\n        style.textContent = s.cssText;\n        this.renderRoot.appendChild(style);\n      });\n    }\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method must return\n   * a lit-html TemplateResult. Setting properties inside this method will *not*\n   * trigger the element to update.\n   */\n  protected render(): TemplateResult|void {\n  }\n}\n","import { LitElement, html, customElement, css, property } from 'lit-element';\n\n@customElement('section-title')\nexport class SectionTitle extends LitElement {\n  @property({type: String}) title = '';\n  @property({type: String}) subtitle = '';\n  @property({type: String}) icon = '';\n  static get styles() {\n      return css`\n          :host {\n            --img-size: 72px;\n            --img-pad: 32px;\n            --name-hpad: 16px;\n            --name-font-size: 1.8rem;\n            --descriptor-hpad: 0px;\n            --descriptor-font-size: .8rem;\n            width: 100%;\n            height: 250px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n          }\n          .img-wrapper {\n            width: calc(var(--img-size) + 2*var(--img-pad));\n            height: calc(var(--img-size) + 2*var(--img-pad));\n            background: var(--theme-gradient);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n          .img-wrapper img {\n            width: var(--img-size);\n            height: var(--img-size);\n            filter: invert();\n            opacity: 0.45;\n          }\n          h1 {\n            width: 100%;\n            text-align: center;\n            color: #444;\n            font-weight: 100;\n            font-family: 'Montserrat', sans-serif;\n            margin: var(--name-hpad) 0px;\n            font-size: var(--name-font-size);\n          }\n          p {\n            width: 100%;\n            text-align: center;\n            color: #999;\n            font-family: 'Montserrat', sans-serif;\n            margin: var(--descriptor-hpad) 0px;\n            font-size: var(--descriptor-font-size);\n          }\n      `;\n  }\n\n  render() {\n    return html`\n      <div class=\"img-wrapper\">\n          <img src=\"${this.icon}\"/>\n      </div>\n      <h1>${this.title}</h1>\n      <p>${this.subtitle}</p>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import '../ui/section-title/section-title';\n\nimport { LitElement, html, customElement, css, property, query } from 'lit-element';\n\n@customElement('character-sheet')\nexport class CharacterSheet extends LitElement {\n  @property({type: String}) theme = 'peach';\n  @property({type: Object}) data = {\n    class: 'fighter',\n    name: 'Blathenor Stegfire',\n    race: 'Wood Elf',\n    level: 7\n  };\n  @query('.header .img-wrapper') imgWrapper!:HTMLDivElement;\n  @query('#character-img') characterImg!:HTMLImageElement;\n  @query('.character-name') characterName!:HTMLHeadingElement;\n  \n  static get styles() {\n      return css`\n          :host {\n            --page-vpad: 16px;\n            --page-hpad: 48px;\n          }\n          .page {\n            width: calc(100% - 2 * var(--page-hpad));\n            padding: var(--page-vpad) var(--page-hpad);\n            height: calc(100vh - var(--page-hpad));\n            background: #FAFAFA;\n          }\n\n          /* lower then 800 px */\n          @media (max-width: 500px) {\n            :host {\n              --page-vpad: 16px;\n              --page-hpad: 32px;\n              --header-img-size: 80px;\n              --header-img-hpad: 8px;\n              --header-img-pad: 20px;\n              --character-name-hpad: 0px;\n              --character-name-font-size: 1.5rem;\n            }\n          }\n      `;\n  }\n\n  private getDescriptor() {\n    const d = this.data;\n    return `Level ${d.level} ${d.race} ${d.class}`;\n  }\n\n  private getIcon() {\n    return `icons/${this.data.class}.svg`;\n  }\n\n  render() {\n    return html`\n      <div class=\"page\">\n        <section-title\n            title=${this.data.name}\n            subtitle=${this.getDescriptor()}\n            icon=${this.getIcon()}\n          ></section-title>\n          <character-quick-stats></character-quick-stats>\n      </div>\n    `;\n  }\n}","export type Topic =\n  | \"spells\"\n  | \"equipment\"\n  | \"combat\"\n  | \"magic\"\n  | \"features\"\n  | \"movement\"\n  | \"resting\"\n  | \"enviornment\"\n  | \"death\"\n  | \"effects\";\n\nexport interface Table {\n  name: Topic;\n  headings: string[];\n  rows: SearchResult[];\n}\n\nexport interface SearchOptions {\n  include?: Topic[];\n  exclude?: Topic[];\n}\n\nexport interface SearchResult {\n  cols: string[];\n  matches: Match[];\n}\n\nexport interface Match {\n  field: number;\n  start: number;\n  end: number;\n}\n\nexport class Database {\n  constructor() {\n  \n  }\n\n  /*\n   * Takes a string and searches the database for all enteries which \n   * match. Can take a optional secondary options argument which \n   * specifies a more narrow search query.\n   */\n  search(searchText: string, options?: SearchOptions):Table[] {\n    return [];\n  }\n\n  dump():Table[] {\n    return [];\n  }\n}\n","import { LitElement, html, customElement, css, property, query } from 'lit-element';\nimport { Database, Topic, SearchOptions, Table } from '../database';\nimport { TemplateResult } from 'lit-html';\n\ninterface Tag {\n  pattern: RegExp\n}\n\nconst DEFAULT_HELP_MSG = html`\n  <p>\n    Search for anything! You can use hashtags like\n    <span> #spell #item #effect </span>\n    to help narrow the results.\n  </p>\n`\n\n@customElement('dm-handbook')\nexport class DmHandbook extends LitElement {\n  @query('input') searchInput!:HTMLInputElement;\n\n  @property() searchHelp:TemplateResult = DEFAULT_HELP_MSG;\n\n  private database = new Database();\n\n  private tags: Map<Topic, Tag> = new Map([\n    ['spells', { pattern: /(#spells?)|(#magic)/g }],\n    ['equipment', { pattern: /(#equip(ment)?)|(#items?)/g }],\n    ['combat', { pattern: /(#combat)|(#fight(ing)?)/g }],\n    ['magic', { pattern: /(#magic)|(#fight(ing)?)/g }],\n    ['features', { pattern: /(#feature?)|(#abilitys?)|(#skills?)/g }],\n    ['movement', { pattern: /#mov(e|(ing)|(ement))/g }],\n    ['resting', { pattern: /#rest(ing)?/g }],\n    ['enviornment', { pattern: /#(world)|(enviorn(ment)?)/g }],\n    ['death', { pattern: /#death/g }],\n    ['effects', { pattern: /#(effects?)|(condition)/g }]\n  ]);\n\n  static get styles() {\n    return css`\n      :host {\n        --page-vpad: 16px;\n        --page-hpad: 48px;\n      }\n      .page {\n        width: calc(100% - 2 * var(--page-hpad));\n        padding: var(--page-vpad) var(--page-hpad);\n        height: calc(100vh - var(--page-hpad));\n        background: #fafafa;\n        display: flex;\n        justify-content: flex-start;\n        align-items: center;\n        flex-direction: column;\n      }\n      h1 {\n        width: 100%;\n        margin: 0;\n        text-align: center;\n        color: #444;\n        font-weight: 100;\n        font-family: 'Montserrat', sans-serif;\n      }\n      p {\n        width: 100%;\n        margin: 0;\n        margin-top: 1rem;\n        text-align: center;\n        color: #777;\n        font-weight: 100;\n        font-family: 'Montserrat', sans-serif;\n      }\n      .search {\n        margin-top: 2rem;\n        width: calc(700px - 1.5rem);\n        padding: 0 1rem 0 0.5rem;\n        height: 2rem;\n        background: #ebebeb;\n        border-radius: 1rem;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n      }\n      .search img {\n        opacity: 0.5;\n      }\n      .search input {\n        flex-grow: 1;\n        padding: 0 0.5rem;\n        font-size: 1.3rem;\n        background: none;\n        border: none;\n        color: #555;\n      }\n      .search input:focus {\n        outline: none;\n      }\n      .results {\n        margin-top: 4rem;\n        width: 1000px;\n        display: flex;\n        justify-content: center;\n      }\n      .no-results{\n        width: 60%;\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: #bbb;\n        font-family: 'Montserrat', sans-serif;\n      }\n      .help > p {\n        font-size: .8rem;\n        color: #BBB;\n      }\n      .help > p > span {\n        color: var(--theme-primary);\n      }\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.searchInput.addEventListener('input', () => {\n      this.updateSearch(this.searchInput.value);\n    });\n  }\n\n  private updateSearch(searchText: string) {\n    if (searchText === '') {\n      this.searchHelp = DEFAULT_HELP_MSG;\n      return;\n    }\n\n    const tables = [];\n    for (const tag of this.tags) {\n      if (tag[1].pattern.exec(searchText)) {\n        searchText = searchText.replace(tag[1].pattern, '');\n        tables.push(tag[0]);\n      }\n    }\n    let topics = 'all topics'\n    if (tables.length === 1) {\n      topics = `the ${tables[0]} topic`;\n    } else if (tables.length > 1) {\n      const last = tables.pop();\n      const list = tables.join(', ');\n      topics = `the ${list} and ${last} topics`;\n    }\n    return html`\n      <p>\n        Searching for '${searchText}' over <span>${topics}<span>\n      </p>\n    `\n  }\n\n  private renderTable(result: Table) {\n    return html``;\n  }\n\n  render() {\n    return html`\n      <div class='page'>\n        <section-title\n          title='Dungeon Master Handbook'\n          subtitle='A quick way to search up rules,\n        spells and equipment'\n          icon='icons/book.svg'\n        ></section-title>\n        <div class='search'>\n          <img src='icons/search.svg' />\n          <input />\n        </div>\n        <div class='help'>\n          ${this.searchHelp}\n        </div>\n        <div class='results'>\n          \n        </div>\n      </div>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import { LitElement, html, customElement, property, css } from 'lit-element';\n\n@customElement('app-link')\nexport class AppLink extends LitElement {\n  @property({type: String}) target = '/';\n\n  static get styles() {\n    // Theme definition\n    return css`\n      :host {\n        cursor: pointer;\n      }\n    `;\n  }\n\n  private navigate() {\n    const event = new CustomEvent('navigate', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        target: this.target\n      }\n    });\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    return html`\n      <a @click=${this.navigate}>\n        <slot></slot>\n      </a>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import '../ui/app-link/app-link';\n\nimport { LitElement, html, customElement, css, property } from 'lit-element';\n\n@customElement('error-page')\nexport class ErrorPage extends LitElement {\n  @property({type: String}) message = 'Uh oh! Something went wrong';\n\n  static get styles() {\n      return css`\n        .cover {\n          width: 100%;\n          height: calc(100vh - var(--navbar-height));\n          background: #FAFAFA;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          flex-direction: column;\n        }\n        p {\n          font-family: 'Montserrat', sans-serif;\n          font-size: 3rem;\n          color: var(--theme-primary);\n          padding: 0;\n          margin: 2rem;\n          text-align: center;\n        }\n        button {\n          padding: .5rem 1rem;\n          background: white;\n          border-radius: 5px;\n          color: var(--theme-primary);\n          font-family: 'Montserrat', sans-serif;\n          font-size: 1rem;\n          border: 2px solid var(--theme-primary);\n          cursor: pointer;\n        }\n        button:hover {\n          color: white;\n          background: var(--theme-primary);\n        }\n        button:focus {\n          outline: none;\n        }\n      `;\n  }\n  render() {\n    return html`\n      <div class=\"cover\">\n        <p> ${this.message} </p>\n        <app-link target='/'>\n          <button>Go Home</button>\n        </app-link>\n      </div>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import { LitElement, html, customElement, css } from 'lit-element';\n\n@customElement('user-profile')\nexport class UserProfile extends LitElement {\n\n  static get styles() {\n      return css`\n\n      `;\n  }\n\n  render() {\n    return html`\n      <p> hello sir i am a user profile page :3 </p>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","import { LitElement, html, customElement, css } from 'lit-element';\n\n@customElement('app-nav')\nexport class AppNav extends LitElement {\n\n  static get styles() {\n      return css`\n          :host {\n            width: calc(100% - 30px);\n            padding: 0 15px;\n            height: var(--navbar-height);\n            border-bottom: 2px solid #EBEBEB;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n            background: white;\n          }\n          .left {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: flex-start;\n          }\n          .right {\n            height: 100%;\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n          }\n          .profile {\n            width: 30px;\n            height: 30px;\n            background: var(--theme-primary);\n            border-radius: 50%;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n          }\n          .profile img {\n            height: 20px;\n            filter: invert();\n            opacity: .65;\n            margin-bottom: 2px;\n          }\n          app-link {\n            font-family: 'Montserrat', sans-serif;\n            font-weight: bold;\n            color: var(--theme-primary);\n            margin: 0 .5rem;\n          }\n      `;\n  }\n\n  render() {\n    return html`\n      <div class=\"left\">\n        <app-link target='/'>Home</app-link>\n        <app-link target='/handbook'>Handbook</app-link>\n      </div>\n      <div class=\"right\">\n        <app-link target='/profile'>\n          <div class=\"profile\">\n            <img src=\"icons/account.svg\"/>\n          </div>\n        </app-link>\n      </div>\n    `;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {TemplateInstance} from '../lib/template-instance.js';\nimport {Template} from '../lib/template.js';\nimport {directive, NodePart, Part, reparentNodes, TemplateResult} from '../lit-html.js';\n\ntype CachedTemplate = {\n  readonly instance: TemplateInstance,\n  readonly nodes: DocumentFragment\n};\nconst templateCaches =\n    new WeakMap<NodePart, WeakMap<Template, CachedTemplate>>();\n\n/**\n * Enables fast switching between multiple templates by caching the DOM nodes\n * and TemplateInstances produced by the templates.\n *\n * Example:\n *\n * ```\n * let checked = false;\n *\n * html`\n *   ${cache(checked ? html`input is checked` : html`input is not checked`)}\n * `\n * ```\n */\nexport const cache = directive((value: unknown) => (part: Part) => {\n  if (!(part instanceof NodePart)) {\n    throw new Error('cache can only be used in text bindings');\n  }\n\n  let templateCache = templateCaches.get(part);\n\n  if (templateCache === undefined) {\n    templateCache = new WeakMap();\n    templateCaches.set(part, templateCache);\n  }\n\n  const previousValue = part.value;\n\n  // First, can we update the current TemplateInstance, or do we need to move\n  // the current nodes into the cache?\n  if (previousValue instanceof TemplateInstance) {\n    if (value instanceof TemplateResult &&\n        previousValue.template === part.options.templateFactory(value)) {\n      // Same Template, just trigger an update of the TemplateInstance\n      part.setValue(value);\n      return;\n    } else {\n      // Not the same Template, move the nodes from the DOM into the cache.\n      let cachedTemplate = templateCache.get(previousValue.template);\n      if (cachedTemplate === undefined) {\n        cachedTemplate = {\n          instance: previousValue,\n          nodes: document.createDocumentFragment(),\n        };\n        templateCache.set(previousValue.template, cachedTemplate);\n      }\n      reparentNodes(\n          cachedTemplate.nodes, part.startNode.nextSibling, part.endNode);\n    }\n  }\n\n  // Next, can we reuse nodes from the cache?\n  if (value instanceof TemplateResult) {\n    const template = part.options.templateFactory(value);\n    const cachedTemplate = templateCache.get(template);\n    if (cachedTemplate !== undefined) {\n      // Move nodes out of cache\n      part.setValue(cachedTemplate.nodes);\n      part.commit();\n      // Set the Part value to the TemplateInstance so it'll update it.\n      part.value = cachedTemplate.instance;\n    }\n  }\n  part.setValue(value);\n});\n","export const UNKNOWN_ROUTE_MSG = 'Sorry! There isn\\'t anything at this URL';","// Imports with side effects.\nimport './character-sheet/character-sheet';\nimport './dm-handbook/dm-handbook';\nimport './error-page/error-page';\nimport './user-profile/user-profile';\nimport './ui/app-nav/app-nav';\n\n// Named imports.\nimport { LitElement, html, customElement, css, TemplateResult, } from 'lit-element';\nimport { cache } from 'lit-html/directives/cache';\nimport { UNKNOWN_ROUTE_MSG } from './ui/messages';\n\n@customElement('app-view')\nexport class AppView extends LitElement {\n    /**\n   * The theme of the application, this is used to generate a \n   * series of css variables which the rest of the application uses.\n   */\n  private theme = 'peach';\n  /**\n   * The view currently shown, all views are defined in\n   * the routes getter function.\n   */\n  private shownView!:() => TemplateResult;\n  \n  /**\n   * All routes that the app can handle, this is a array of objects\n   * which define a view function that returns a html template and a \n   * route pattern which defined what url triggers the view to be\n   * visible.\n   */\n  static get routes() {\n    return [\n      {\n        pattern: new RegExp('^\\/$'),\n        view: () => html`<character-sheet></character-sheet>`\n      },\n      {\n        pattern: new RegExp('^\\/handbook$'),\n        view: () => html`<dm-handbook></dm-handbook>`\n      },\n      {\n        pattern: new RegExp('^\\/profile$'),\n        view: () => html`<user-profile></user-profile>`\n      }\n   ];\n  }\n  \n  /**\n   * The default error page which we show if the route can't be resolved\n   */\n  static unknownRouteView() {\n    return html`<error-page message=${UNKNOWN_ROUTE_MSG}></error-page>`\n  }\n\n  static get styles() {\n    // Theme definition\n    return css`\n      :host {\n        --peach-theme-gradient: linear-gradient(110deg, #f2709c, #ff9472);\n        --peach-theme-primary: #f2709c;\n        --fresh-theme-gradient: linear-gradient(110deg, #67b26f, #4ca2cd);\n        --fresh-theme-primary: #67b26f;\n        --navbar-height: 50px;\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n      }\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('navigate', ((e:CustomEvent) => {\n      document.location.pathname = e.detail.target;\n      this.changeRoute(e.detail.target);\n    }) as EventListener);\n\n    this.changeRoute(document.location.pathname);\n  }\n\n  changeRoute(location:string) {\n    for(const route of AppView.routes) {\n      if (route.pattern.exec(location)) {\n        this.shownView = route.view;\n        return;\n      }\n    }\n    this.shownView = AppView.unknownRouteView;\n  }\n\n  render() {\n    // This will edventually have a login flow leading to the home page\n    // where you can create new character sheets / characters\n\n    return html`\n      <style>\n        :host {\n          --theme-gradient: var(--${this.theme}-theme-gradient);\n          --theme-primary: var(--${this.theme}-theme-primary);\n        }\n      </style>\n      <app-nav></app-nav>\n      ${cache(this.shownView())}\n    `;\n  }\n}","import './app-view.ts';","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}